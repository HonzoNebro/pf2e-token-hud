{
  "version": 3,
  "sources": ["../src/module.js", "../src/pf2e.js", "../src/popup.js", "../src/shared.js", "../src/skills.js", "../src/actions.js", "../src/items.js", "../src/spells.js", "../src/hud.js", "../src/main.js"],
  "sourcesContent": ["export const MODULE_ID = 'pf2e-token-hud'\r\n\r\nexport function getSetting(setting) {\r\n    return game.settings.get(MODULE_ID, setting)\r\n}\r\n\r\nexport function localize(...args) {\r\n    const data = args.at(-1)\r\n    const useFormat = typeof data === 'object'\r\n\r\n    const keys = useFormat ? args.slice(0, -1) : args\r\n    keys.unshift(MODULE_ID)\r\n\r\n    return game.i18n[useFormat ? 'format' : 'localize'](keys.join('.'), data)\r\n}\r\n\r\nexport function templatePath(template) {\r\n    return `modules/${MODULE_ID}/templates/${template}.hbs`\r\n}\r\n\r\nexport function modifier(mod) {\r\n    return mod >= 0 ? `+${mod}` : mod\r\n}\r\n", "/**\r\n * Those are directly copied from the PF2e system\r\n * because they are not accesible to us in the global\r\n */\r\n\r\nconst dcAdjustments = new Map([\r\n    ['incredibly-easy', -10],\r\n    ['very-easy', -5],\r\n    ['easy', -2],\r\n    ['normal', 0],\r\n    ['hard', 2],\r\n    ['very-hard', 5],\r\n    ['incredibly-hard', 10],\r\n])\r\n\r\nconst dcByLevel = new Map([\r\n    [-1, 13],\r\n    [0, 14],\r\n    [1, 15],\r\n    [2, 16],\r\n    [3, 18],\r\n    [4, 19],\r\n    [5, 20],\r\n    [6, 22],\r\n    [7, 23],\r\n    [8, 24],\r\n    [9, 26],\r\n    [10, 27],\r\n    [11, 28],\r\n    [12, 30],\r\n    [13, 31],\r\n    [14, 32],\r\n    [15, 34],\r\n    [16, 35],\r\n    [17, 36],\r\n    [18, 38],\r\n    [19, 39],\r\n    [20, 40],\r\n    [21, 42],\r\n    [22, 44],\r\n    [23, 46],\r\n    [24, 48],\r\n    [25, 50],\r\n])\r\n\r\nconst MAGIC_TRADITIONS = new Set(['arcane', 'divine', 'occult', 'primal'])\r\n\r\nconst actionImgMap = {\r\n    0: 'systems/pf2e/icons/actions/FreeAction.webp',\r\n    free: 'systems/pf2e/icons/actions/FreeAction.webp',\r\n    1: 'systems/pf2e/icons/actions/OneAction.webp',\r\n    2: 'systems/pf2e/icons/actions/TwoActions.webp',\r\n    3: 'systems/pf2e/icons/actions/ThreeActions.webp',\r\n    '1 or 2': 'systems/pf2e/icons/actions/OneTwoActions.webp',\r\n    '1 to 3': 'systems/pf2e/icons/actions/OneThreeActions.webp',\r\n    '2 or 3': 'systems/pf2e/icons/actions/TwoThreeActions.webp',\r\n    reaction: 'systems/pf2e/icons/actions/Reaction.webp',\r\n    passive: 'systems/pf2e/icons/actions/Passive.webp',\r\n}\r\n\r\nconst actionGlyphMap = {\r\n    0: 'F',\r\n    free: 'F',\r\n    1: 'A',\r\n    2: 'D',\r\n    3: 'T',\r\n    '1 or 2': 'A/D',\r\n    '1 to 3': 'A - T',\r\n    '2 or 3': 'D/T',\r\n    reaction: 'R',\r\n}\r\n\r\nexport function getActionIcon(action, fallback = 'systems/pf2e/icons/actions/Empty.webp') {\r\n    if (action === null) return actionImgMap['passive']\r\n    const value = typeof action !== 'object' ? action : action.type === 'action' ? action.value : action.type\r\n    const sanitized = String(value ?? '')\r\n        .toLowerCase()\r\n        .trim()\r\n    return actionImgMap[sanitized] ?? fallback\r\n}\r\n\r\nexport function getActionGlyph(action) {\r\n    if (!action && action !== 0) return ''\r\n\r\n    const value = typeof action !== 'object' ? action : action.type === 'action' ? action.value : action.type\r\n    const sanitized = String(value ?? '')\r\n        .toLowerCase()\r\n        .trim()\r\n\r\n    return actionGlyphMap[sanitized] ?? ''\r\n}\r\n\r\nexport async function toggleWeaponTrait({ weapon, trait, selection }) {\r\n    const current = weapon.system.traits.toggles[trait].selection\r\n    if (current === selection) return false\r\n\r\n    const item = weapon.actor?.items.get(weapon.id)\r\n    if (item?.isOfType('weapon') && item === weapon) {\r\n        await item.update({ [`system.traits.toggles.${trait}.selection`]: selection })\r\n    } else if (item?.isOfType('weapon') && weapon.altUsageType === 'melee') {\r\n        item.update({ [`system.meleeUsage.traitToggles.${trait}`]: selection })\r\n    } else {\r\n        const rule = item?.rules.find(r => r.key === 'Strike' && !r.ignored && r.slug === weapon.slug)\r\n        await rule?.toggleTrait({ trait, selection })\r\n    }\r\n\r\n    return true\r\n}\r\n\r\nfunction adjustDC(dc, adjustment = 'normal') {\r\n    return dc + (dcAdjustments.get(adjustment) ?? 0)\r\n}\r\n\r\nfunction rarityToDCAdjustment(rarity = 'common') {\r\n    switch (rarity) {\r\n        case 'uncommon':\r\n            return 'hard'\r\n        case 'rare':\r\n            return 'very-hard'\r\n        case 'unique':\r\n            return 'incredibly-hard'\r\n        default:\r\n            return 'normal'\r\n    }\r\n}\r\n\r\nfunction adjustDCByRarity(dc, rarity = 'common') {\r\n    return adjustDC(dc, rarityToDCAdjustment(rarity))\r\n}\r\n\r\nfunction calculateDC(level, { proficiencyWithoutLevel, rarity = 'common' } = {}) {\r\n    const pwlSetting = game.settings.get('pf2e', 'proficiencyVariant')\r\n    proficiencyWithoutLevel ??= pwlSetting === 'ProficiencyWithoutLevel'\r\n\r\n    const dc = dcByLevel.get(level) ?? 14\r\n    if (proficiencyWithoutLevel) {\r\n        return adjustDCByRarity(dc - Math.max(level, 0), rarity)\r\n    } else {\r\n        return adjustDCByRarity(dc, rarity)\r\n    }\r\n}\r\n\r\nfunction getDcRarity(item) {\r\n    return item.traits.has('cursed') ? 'unique' : item.rarity\r\n}\r\n\r\nfunction getMagicTraditions(item) {\r\n    const traits = item.system.traits.value\r\n    return new Set(traits.filter(t => setHasElement(MAGIC_TRADITIONS, t)))\r\n}\r\n\r\nfunction getIdentifyMagicDCs(item, baseDC, notMatchingTraditionModifier) {\r\n    const result = {\r\n        occult: baseDC,\r\n        primal: baseDC,\r\n        divine: baseDC,\r\n        arcane: baseDC,\r\n    }\r\n    const traditions = getMagicTraditions(item)\r\n    for (const key of MAGIC_TRADITIONS) {\r\n        if (traditions.size > 0 && !traditions.has(key)) {\r\n            result[key] = baseDC + notMatchingTraditionModifier\r\n        }\r\n    }\r\n    return { arcana: result.arcane, nature: result.primal, religion: result.divine, occultism: result.occult }\r\n}\r\n\r\nfunction getItemIdentificationDCs(item, { proficiencyWithoutLevel = false, notMatchingTraditionModifier }) {\r\n    const baseDC = calculateDC(item.level, { proficiencyWithoutLevel })\r\n    const rarity = getDcRarity(item)\r\n    const dc = adjustDCByRarity(baseDC, rarity)\r\n    if (item.isMagical) {\r\n        return getIdentifyMagicDCs(item, dc, notMatchingTraditionModifier)\r\n    } else if (item.isAlchemical) {\r\n        return { crafting: dc }\r\n    } else {\r\n        return { dc: dc }\r\n    }\r\n}\r\n\r\nfunction objectHasKey(obj, key) {\r\n    return (typeof key === 'string' || typeof key === 'number') && key in obj\r\n}\r\n\r\nfunction setHasElement(set, value) {\r\n    return set.has(value)\r\n}\r\n\r\nexport class IdentifyItemPopup extends FormApplication {\r\n    static get defaultOptions() {\r\n        return {\r\n            ...super.defaultOptions,\r\n            id: 'identify-item',\r\n            title: game.i18n.localize('PF2E.identification.Identify'),\r\n            template: 'systems/pf2e/templates/actors/identify-item.hbs',\r\n            width: 'auto',\r\n            classes: ['identify-popup'],\r\n        }\r\n    }\r\n\r\n    get item() {\r\n        return this.object\r\n    }\r\n\r\n    async getData() {\r\n        const item = this.object\r\n        const notMatchingTraditionModifier = game.settings.get('pf2e', 'identifyMagicNotMatchingTraditionModifier')\r\n        const proficiencyWithoutLevel = game.settings.get('pf2e', 'proficiencyVariant') === 'ProficiencyWithoutLevel'\r\n        const dcs = getItemIdentificationDCs(item, { proficiencyWithoutLevel, notMatchingTraditionModifier })\r\n\r\n        return {\r\n            ...(await super.getData()),\r\n            isMagic: item.isMagical,\r\n            isAlchemical: item.isAlchemical,\r\n            dcs,\r\n        }\r\n    }\r\n\r\n    activateListeners($form) {\r\n        $form.find('button.update-identification').on('click', event => {\r\n            const $button = $(event.delegateTarget)\r\n            this.submit({ updateData: { status: $button.val() } })\r\n        })\r\n        $form.find('button.post-skill-checks').on('click', async () => {\r\n            const item = this.item\r\n            const itemImg = item.system.identification.unidentified.img\r\n            const itemName = item.system.identification.unidentified.name\r\n            const identifiedName = item.system.identification.identified.name\r\n            const skills = $('div#identify-item')\r\n                .find('tr')\r\n                .toArray()\r\n                .flatMap(row => {\r\n                    const slug = row.dataset.skill\r\n                    const dc = Number(row.dataset.dc)\r\n                    if (!(Number.isInteger(dc) && objectHasKey(CONFIG.PF2E.skillList, slug))) {\r\n                        return []\r\n                    }\r\n                    const name = game.i18n.localize(CONFIG.PF2E.skillList[slug])\r\n\r\n                    return { slug, name, dc }\r\n                })\r\n\r\n            const actionOption = item.isMagical ? 'action:identify-magic' : item.isAlchemical ? 'action:identify-alchemy' : null\r\n\r\n            const content = await renderTemplate('systems/pf2e/templates/actors/identify-item-chat-skill-checks.hbs', {\r\n                itemImg,\r\n                itemName,\r\n                identifiedName,\r\n                // We don't want to install remeda just for that so we do our own thing\r\n                // rollOptions: R.compact(['concentrate', 'exploration', 'secret', actionOption]),\r\n                rollOptions: ['concentrate', 'exploration', 'secret', actionOption].filter(Boolean),\r\n                skills,\r\n            })\r\n\r\n            await CONFIG.ChatMessage.documentClass.create({ user: game.user.id, content })\r\n        })\r\n    }\r\n\r\n    async _updateObject(_event, formData) {\r\n        const status = formData['status']\r\n        if (status === 'identified') {\r\n            await this.item.setIdentificationStatus(status)\r\n        }\r\n    }\r\n}\r\n", "import { localize, MODULE_ID, templatePath } from './module.js'\r\n\r\nexport async function popup(title, content) {\r\n    const hud = $(`#${MODULE_ID}`)\r\n    if (!hud.length) return\r\n\r\n    hud.find('.popup').remove()\r\n\r\n    const tmp = document.createElement('div')\r\n    tmp.innerHTML = await renderTemplate(templatePath('popup'), { title, close: localize('popup.close') })\r\n\r\n    const popup = tmp.firstElementChild\r\n    popup.append(content)\r\n\r\n    popup.querySelector('[data-action=close-popup]').addEventListener('click', () => popup.remove())\r\n\r\n    hud.append(popup)\r\n}\r\n", "import { localize } from './module.js'\r\n\r\nexport async function getItemSummary(el, actor) {\r\n    const dataset = el.data()\r\n    const item = dataset.itemId ? actor.items.get(dataset.itemId) : await fromUuid(dataset.uuid)\r\n    const data = await item?.getChatData({}, dataset)\r\n    if (!data) return\r\n\r\n    const description = document.createElement('div')\r\n    description.classList.add('description')\r\n\r\n    await actor.sheet.itemRenderer.renderItemSummary(description, item, data)\r\n\r\n    return description\r\n}\r\n\r\nexport function addNameTooltipListeners(el) {\r\n    el.on('mouseenter', event => {\r\n        event.preventDefault()\r\n\r\n        const target = event.currentTarget.querySelector('.name')\r\n        if (target.scrollWidth <= target.clientWidth) return\r\n\r\n        const name = target.innerHTML.trim()\r\n        game.tooltip.activate(event.currentTarget, { text: name })\r\n    })\r\n\r\n    el.on('mouseleave', event => {\r\n        event.preventDefault()\r\n        game.tooltip.deactivate()\r\n    })\r\n\r\n    el.on('mousedown', event => {\r\n        game.tooltip.deactivate()\r\n    })\r\n}\r\n\r\nexport function editItem(event, actor) {\r\n    event.preventDefault()\r\n    const item = getItemFromEvent(event, actor)\r\n    item?.sheet.render(true, { focus: true })\r\n}\r\n\r\nexport async function deleteItem(event, actor) {\r\n    event.preventDefault()\r\n\r\n    const item = getItemFromEvent(event, actor)\r\n    if (!item) return\r\n\r\n    if (event.ctrlKey) return item.delete()\r\n\r\n    new Dialog({\r\n        title: localize('deleteItem.title'),\r\n        content: await renderTemplate('systems/pf2e/templates/actors/delete-item-dialog.hbs', { name: item.name }),\r\n        buttons: {\r\n            ok: {\r\n                icon: '<i class=\"fa-solid fa-trash\"></i>',\r\n                label: localize('deleteItem.ok'),\r\n                callback: () => item.delete(),\r\n            },\r\n            cancel: {\r\n                icon: '<i class=\"fas fa-times\"></i>',\r\n                label: localize('deleteItem.cancel'),\r\n            },\r\n        },\r\n    }).render(true)\r\n}\r\n\r\nexport function getItemFromEvent(event, actor) {\r\n    const { itemId } = event.currentTarget.closest('[data-item-id]').dataset\r\n    return actor.items.get(itemId)\r\n}\r\n", "import { localize, modifier, MODULE_ID } from './module.js'\r\nimport { popup } from './popup.js'\r\nimport { getItemSummary } from './shared.js'\r\n\r\nconst CROWBAR_UUIDS = new Set([\r\n    'Compendium.pf2e.equipment-srd.44F1mfJei4GY8f2X',\r\n    'Compendium.pf2e.equipment-srd.4kz3vhkKPUuXBpxk',\r\n])\r\nconst BON_MOT_UUID = 'Compendium.pf2e.feats-srd.0GF2j54roPFIDmXf'\r\n\r\nconst LABELS = {\r\n    initiative: 'PF2E.InitiativeLabel',\r\n    'recall-knowledge': 'PF2E.RecallKnowledge.Label',\r\n    'cover-tracks': 'PF2E.TravelSpeed.ExplorationActivities.CoverTracks',\r\n    earnIncome: `${MODULE_ID}.skills.actions.earnIncome`,\r\n    treatWounds: `${MODULE_ID}.skills.actions.treatWounds`,\r\n    'borrow-arcane-spell': `${MODULE_ID}.skills.actions.borrow-arcane-spell`,\r\n    'identify-magic': `${MODULE_ID}.skills.actions.identify-magic`,\r\n    'identify-alchemy': `${MODULE_ID}.skills.actions.identify-alchemy`,\r\n    'learn-spell': `${MODULE_ID}.skills.actions.learn-spell`,\r\n    'crafting-goods': `${MODULE_ID}.skills.actions.crafting-goods`,\r\n    'staging-performance': `${MODULE_ID}.skills.actions.staging-performance`,\r\n}\r\n\r\nconst ACTIONS_UUIDS = {\r\n    'sense-motive': 'Compendium.pf2e.actionspf2e.1xRFPTFtWtGJ9ELw',\r\n    seek: 'Compendium.pf2e.actionspf2e.BlAOM2X92SI6HMtJ',\r\n    balance: 'Compendium.pf2e.actionspf2e.M76ycLAqHoAgbcej',\r\n    escape: 'Compendium.pf2e.actionspf2e.SkZAQRkLLkmBQNB9',\r\n    'tumble-through': 'Compendium.pf2e.actionspf2e.21WIfSu7Xd7uKqV8',\r\n    'maneuver-in-flight': 'Compendium.pf2e.actionspf2e.Qf1ylAbdVi1rkc8M',\r\n    squeeze: 'Compendium.pf2e.actionspf2e.kMcV8e5EZUxa6evt',\r\n    'recall-knowledge': 'Compendium.pf2e.actionspf2e.1OagaWtBpVXExToo',\r\n    'borrow-arcane-spell': 'Compendium.pf2e.actionspf2e.OizxuPb44g3eHPFh',\r\n    'decipher-writing': 'Compendium.pf2e.actionspf2e.d9gbpiQjChYDYA2L',\r\n    'identify-magic': 'Compendium.pf2e.actionspf2e.eReSHVEPCsdkSL4G',\r\n    'learn-spell': 'Compendium.pf2e.actionspf2e.Q5iIYCFdqJFM31GW',\r\n    climb: 'Compendium.pf2e.actionspf2e.pprgrYQ1QnIDGZiy',\r\n    forceOpen: 'Compendium.pf2e.actionspf2e.SjmKHgI7a5Z9JzBx',\r\n    grapple: 'Compendium.pf2e.actionspf2e.PMbdMWc2QroouFGD',\r\n    highJump: 'Compendium.pf2e.actionspf2e.2HJ4yuEFY1Cast4h',\r\n    longJump: 'Compendium.pf2e.actionspf2e.JUvAvruz7yRQXfz2',\r\n    shove: 'Compendium.pf2e.actionspf2e.7blmbDrQFNfdT731',\r\n    swim: 'Compendium.pf2e.actionspf2e.c8TGiZ48ygoSPofx',\r\n    trip: 'Compendium.pf2e.actionspf2e.ge56Lu1xXVFYUnLP',\r\n    disarm: 'Compendium.pf2e.actionspf2e.Dt6B1slsBy8ipJu9',\r\n    repair: 'Compendium.pf2e.actionspf2e.bT3skovyLUtP22ME',\r\n    craft: 'Compendium.pf2e.actionspf2e.rmwa3OyhTZ2i2AHl',\r\n    'crafting-goods': '',\r\n    earnIncome: 'Compendium.pf2e.actionspf2e.QyzlsLrqM0EEwd7j',\r\n    'identify-alchemy': 'Compendium.pf2e.actionspf2e.Q4kdWVOf2ztIBFg1',\r\n    createADiversion: 'Compendium.pf2e.actionspf2e.GkmbTGfg8KcgynOA',\r\n    impersonate: 'Compendium.pf2e.actionspf2e.AJstokjdG6iDjVjE',\r\n    lie: 'Compendium.pf2e.actionspf2e.ewwCglB7XOPLUz72',\r\n    feint: 'Compendium.pf2e.actionspf2e.QNAVeNKtHA0EUw4X',\r\n    bonMot: BON_MOT_UUID,\r\n    gatherInformation: 'Compendium.pf2e.actionspf2e.plBGdZhqq5JBl1D8',\r\n    makeAnImpression: 'Compendium.pf2e.actionspf2e.OX4fy22hQgUHDr0q',\r\n    request: 'Compendium.pf2e.actionspf2e.DCb62iCBrJXy0Ik6',\r\n    coerce: 'Compendium.pf2e.actionspf2e.tHCqgwjtQtzNqVvd',\r\n    demoralize: 'Compendium.pf2e.actionspf2e.2u915NdUyQan6uKF',\r\n    'administer-first-aid': 'Compendium.pf2e.actionspf2e.MHLuKy4nQO2Z4Am1',\r\n    'treat-disease': 'Compendium.pf2e.actionspf2e.TC7OcDa7JlWbqMaN',\r\n    'treat-poison': 'Compendium.pf2e.actionspf2e.KjoCEEmPGTeFE4hh',\r\n    treatWounds: 'Compendium.pf2e.actionspf2e.1kGNdIIhuglAjIp9',\r\n    'command-an-animal': 'Compendium.pf2e.actionspf2e.q9nbyIF0PEBqMtYe',\r\n    perform: 'Compendium.pf2e.actionspf2e.EEDElIyin4z60PXx',\r\n    'staging-performance': '',\r\n    subsist: 'Compendium.pf2e.actionspf2e.49y9Ec4bDii8pcD3',\r\n    'create-forgery': 'Compendium.pf2e.actionspf2e.ftG89SjTSa9DYDOD',\r\n    'conceal-an-object': 'Compendium.pf2e.actionspf2e.qVNVSmsgpKFGk9hV',\r\n    hide: 'Compendium.pf2e.actionspf2e.XMcnh4cSI32tljXa',\r\n    sneak: 'Compendium.pf2e.actionspf2e.VMozDqMMuK5kpoX4',\r\n    senseDirection: 'Compendium.pf2e.actionspf2e.fJImDBQfqfjKJOhk',\r\n    'cover-tracks': 'Compendium.pf2e.actionspf2e.SB7cMECVtE06kByk',\r\n    track: 'Compendium.pf2e.actionspf2e.EA5vuSgJfiHH7plD',\r\n    'palm-an-object': 'Compendium.pf2e.actionspf2e.ijZ0DDFpMkWqaShd',\r\n    steal: 'Compendium.pf2e.actionspf2e.RDXXE7wMrSPCLv5k',\r\n    'disable-device': 'Compendium.pf2e.actionspf2e.cYdz2grcOcRt4jk6',\r\n    'pick-a-lock': 'Compendium.pf2e.actionspf2e.2EE4aF4SZpYf0R6H',\r\n}\r\n\r\nconst DUPLICATE_SKILLS = {\r\n    escape: { slug: 'escape', cost: '1', type: 2, noSkill: true },\r\n    'recall-knowledge': { slug: 'recall-knowledge', cost: '1', secret: true },\r\n    'decipher-writing': { slug: 'decipher-writing', type: 2, trained: true },\r\n    'identify-magic': { slug: 'identify-magic', trained: true },\r\n    'learn-spell': { slug: 'learn-spell', trained: true },\r\n}\r\n\r\nconst SKILLS = [\r\n    {\r\n        slug: 'perception',\r\n        actions: [\r\n            {\r\n                slug: 'initiative',\r\n                custom: (actor, options) => actor.initiative.roll(options),\r\n                condition: () => game.combat,\r\n            },\r\n            { slug: 'sense-motive', cost: '1', type: 2 },\r\n            { slug: 'seek', cost: '1', type: 2 },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'acrobatics',\r\n        actions: [\r\n            { slug: 'balance', cost: '1', type: 2 },\r\n            'escape',\r\n            { slug: 'tumble-through', cost: '1', type: 2 },\r\n            { slug: 'maneuver-in-flight', cost: '1', type: 2, trained: true },\r\n            { slug: 'squeeze', type: 2, trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'arcana',\r\n        actions: [\r\n            'recall-knowledge',\r\n            { slug: 'borrow-arcane-spell', trained: true },\r\n            'decipher-writing',\r\n            'identify-magic',\r\n            'learn-spell',\r\n        ],\r\n    },\r\n    {\r\n        slug: 'athletics',\r\n        actions: [\r\n            { slug: 'climb', cost: '1', type: 1 },\r\n            'escape',\r\n            {\r\n                slug: 'forceOpen',\r\n                cost: '1',\r\n                type: 1,\r\n                map: true,\r\n                modifiers: [\r\n                    {\r\n                        condition: actor =>\r\n                            !actor.itemTypes.equipment.some(item => item.isHeld && CROWBAR_UUIDS.has(item.sourceId)),\r\n                        modifiers: [\r\n                            {\r\n                                slug: 'crowbar-missing',\r\n                                modifier: -2,\r\n                                type: 'circumstance',\r\n                            },\r\n                        ],\r\n                    },\r\n                ],\r\n            },\r\n            { slug: 'grapple', cost: '1', type: 1, map: true },\r\n            { slug: 'highJump', cost: '1', type: 1 },\r\n            { slug: 'longJump', cost: '1', type: 1 },\r\n            { slug: 'shove', cost: '1', type: 1, map: true },\r\n            { slug: 'swim', cost: '1', type: 1 },\r\n            { slug: 'trip', cost: '1', type: 2, map: true },\r\n            { slug: 'disarm', cost: '1', type: 1, map: true, trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'crafting',\r\n        actions: [\r\n            'recall-knowledge',\r\n            { slug: 'repair', type: 1 },\r\n            { slug: 'craft', type: 1, trained: true },\r\n            { slug: 'crafting-goods', trained: true },\r\n            { slug: 'earnIncome', type: 3, trained: true },\r\n            { slug: 'identify-alchemy', trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'deception',\r\n        actions: [\r\n            { slug: 'createADiversion', cost: '1', type: 1, variants: ['distracting-words', 'gesture', 'trick'] },\r\n            { slug: 'impersonate', type: 1 },\r\n            { slug: 'lie', type: 1 },\r\n            { slug: 'feint', cost: '1', type: 1, trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'diplomacy',\r\n        actions: [\r\n            {\r\n                slug: 'bonMot',\r\n                cost: '1',\r\n                type: 1,\r\n                condition: actor => actor.itemTypes.feat.some(feat => feat.getFlag('core', 'sourceId') === BON_MOT_UUID),\r\n            },\r\n            { slug: 'gatherInformation', type: 1 },\r\n            { slug: 'makeAnImpression', type: 1 },\r\n            { slug: 'request', cost: '1', type: 1 },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'intimidation',\r\n        actions: [\r\n            { slug: 'coerce', type: 2 },\r\n            { slug: 'demoralize', cost: '1', type: 2 },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'medicine',\r\n        actions: [\r\n            { slug: 'administer-first-aid', cost: '2', type: 2, variants: ['stabilize', 'stop-bleeding'] },\r\n            { slug: 'treat-disease', type: 2, trained: true },\r\n            { slug: 'treat-poison', cost: '1', type: 2, trained: true },\r\n            { slug: 'treatWounds', type: 1, trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'nature',\r\n        actions: [\r\n            { slug: 'command-an-animal', cost: '1', type: 2 }, //\r\n            'recall-knowledge',\r\n            'identify-magic',\r\n            'learn-spell',\r\n        ],\r\n    },\r\n    {\r\n        slug: 'occultism',\r\n        actions: [\r\n            'recall-knowledge', //\r\n            'decipher-writing',\r\n            'identify-magic',\r\n            'learn-spell',\r\n        ],\r\n    },\r\n    {\r\n        slug: 'performance',\r\n        actions: [\r\n            {\r\n                slug: 'perform',\r\n                cost: '1',\r\n                type: 1,\r\n                variants: [\r\n                    'acting',\r\n                    'comedy',\r\n                    'dance',\r\n                    'keyboards',\r\n                    'oratory',\r\n                    'percussion',\r\n                    'singing',\r\n                    'strings',\r\n                    'winds',\r\n                    'warning',\r\n                ],\r\n            },\r\n            { slug: 'staging-performance', trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'religion',\r\n        actions: [\r\n            'recall-knowledge', //\r\n            'decipher-writing',\r\n            'identify-magic',\r\n            'learn-spell',\r\n        ],\r\n    },\r\n    {\r\n        slug: 'society',\r\n        actions: [\r\n            'recall-knowledge', //\r\n            { slug: 'subsist', type: 2 },\r\n            { slug: 'create-forgery', type: 2, trained: true },\r\n            'decipher-writing',\r\n        ],\r\n    },\r\n    {\r\n        slug: 'stealth',\r\n        actions: [\r\n            { slug: 'conceal-an-object', cost: '1', type: 2 },\r\n            { slug: 'hide', cost: '1', type: 2 },\r\n            { slug: 'sneak', cost: '1', type: 2 },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'survival',\r\n        actions: [\r\n            { slug: 'senseDirection', type: 1 },\r\n            { slug: 'subsist', type: 2 },\r\n            { slug: 'cover-tracks', trained: true },\r\n            { slug: 'track', type: 1, trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'thievery',\r\n        actions: [\r\n            { slug: 'palm-an-object', cost: '1', type: 2 },\r\n            { slug: 'steal', cost: '1', type: 2 },\r\n            { slug: 'disable-device', cost: '2', type: 2, trained: true },\r\n            { slug: 'pick-a-lock', cost: '2', type: 2, trained: true },\r\n        ],\r\n    },\r\n]\r\n\r\nSKILLS.forEach(skill => {\r\n    skill.actions = skill.actions.map(action => (typeof action === 'string' ? DUPLICATE_SKILLS[action] : action))\r\n\r\n    const { slug, actions } = skill\r\n    for (let action of actions) {\r\n        const unslugged = action.slug.replace(/-(.)/g, (_, c) => c.toUpperCase()).capitalize()\r\n\r\n        action.skillSlug = slug\r\n        action.uuid = ACTIONS_UUIDS[action.slug]\r\n        action.label = LABELS[action.slug] ?? `PF2E.Actions.${unslugged}.Title`\r\n\r\n        if (action.variants) {\r\n            action.variants = action.variants.map(variant => ({\r\n                slug: variant,\r\n                label: `${MODULE_ID}.skills.actions.${variant}`,\r\n            }))\r\n        } else if (action.map) {\r\n            action.variants = [\r\n                { label: 'PF2E.Roll.Normal' },\r\n                { label: 'PF2E.MAPAbbreviationLabel', map: -5 },\r\n                { label: 'PF2E.MAPAbbreviationLabel', map: -10 },\r\n            ]\r\n        }\r\n\r\n        action.modifiers?.forEach(({ modifiers }) => {\r\n            modifiers.forEach(modifier => {\r\n                modifier.label = `${MODULE_ID}.skills.modifiers.${modifier.slug}`\r\n            })\r\n        })\r\n    }\r\n})\r\n\r\nconst SKILLS_SLUGS = SKILLS.map(skill => skill.slug)\r\n\r\nconst SKILLS_MAP = SKILLS.reduce((skills, { slug, actions }) => {\r\n    skills[slug] = {\r\n        slug,\r\n        actions: actions.reduce((actions, action) => {\r\n            actions[action.slug] = action\r\n            return actions\r\n        }, {}),\r\n    }\r\n    return skills\r\n}, {})\r\n\r\nexport const actionsUUIDS = new Set(Object.values(ACTIONS_UUIDS).filter(Boolean))\r\n\r\nexport async function getSkillsData(actor) {\r\n    const skills = []\r\n\r\n    for (let i = 0; i < SKILLS.length; i++) {\r\n        const { slug, actions } = SKILLS[i]\r\n        const { label, rank, mod } = getSkill(slug, actor)\r\n\r\n        skills[i] = {\r\n            slug,\r\n            label,\r\n            rank,\r\n            actions: actions.filter(action => !action.condition || action.condition(actor)),\r\n            modifier: modifier(mod),\r\n        }\r\n    }\r\n\r\n    const lores = Object.values(actor.skills)\r\n        .filter(skill => skill.lore)\r\n        .map(({ label, rank, mod, slug }) => ({\r\n            slug,\r\n            label,\r\n            rank,\r\n            modifier: modifier(mod),\r\n        }))\r\n\r\n    return { skills, lores }\r\n}\r\n\r\nfunction getSkill(slug, actor) {\r\n    return slug === 'perception' ? actor.perception : actor.skills[slug]\r\n}\r\n\r\nexport function addSkillsListeners(el, actor) {\r\n    el.find('[data-action=roll-skill]').on('click', event => {\r\n        event.preventDefault()\r\n        const { slug } = event.currentTarget.dataset\r\n        getSkill(slug, actor).roll({ event })\r\n    })\r\n\r\n    el.find('[data-action=roll-action]').on('click contextmenu', async event => {\r\n        event.preventDefault()\r\n        const target = $(event.currentTarget)\r\n        const { skillSlug, slug } = target.closest('.action').data()\r\n        const variant = event.type === 'contextmenu' ? await createVariantDialog(actor, skillSlug) : undefined\r\n        if (variant !== null) rollAction(event, actor, skillSlug, slug, target.data(), variant)\r\n    })\r\n\r\n    el.find('[data-action=action-description]').on('click', async event => {\r\n        event.preventDefault()\r\n        const action = $(event.currentTarget).closest('.action')\r\n        const description = await getItemSummary(action, actor)\r\n        if (description) popup(action.find('.name').children().html().trim(), description)\r\n    })\r\n}\r\n\r\nasync function createVariantDialog(actor, base) {\r\n    let content = '<p style=\"text-align: center; margin-block: 0 8px;\">'\r\n    content += `<strong>${localize('skills.variant.label')}</strong> <select>`\r\n\r\n    for (const slug of SKILLS_SLUGS) {\r\n        const selected = slug === base ? 'selected' : ''\r\n        content += `<option value=\"${slug}\" ${selected}>${getSkill(slug, actor).label}</option>`\r\n    }\r\n\r\n    content += '</select></p>'\r\n\r\n    return Dialog.prompt({\r\n        title: localize('skills.variant.title'),\r\n        label: localize('skills.variant.button'),\r\n        callback: html => html.find('select').val(),\r\n        rejectClose: false,\r\n        content,\r\n        options: { width: 280 },\r\n    })\r\n}\r\n\r\nfunction rollAction(event, actor, skillSlug, slug, { variant, map }, skill) {\r\n    const action = SKILLS_MAP[skillSlug].actions[slug]\r\n    const type = action.type\r\n\r\n    skill ??= action.noSkill ? undefined : skillSlug\r\n\r\n    const options = {\r\n        event,\r\n        actors: [actor],\r\n        variant,\r\n        rollMode: action.secret ? 'blindroll' : 'roll',\r\n    }\r\n\r\n    options.modifiers = []\r\n\r\n    if (action.modifiers) {\r\n        for (const { condition, modifiers } of action.modifiers) {\r\n            if (condition && !condition(actor)) continue\r\n            for (const modifier of modifiers) {\r\n                options.modifiers.push(new game.pf2e.Modifier(modifier))\r\n            }\r\n        }\r\n    }\r\n\r\n    if (action.custom) {\r\n        action.custom(actor, options)\r\n        return\r\n    } else if (!type) {\r\n        getSkill(skill, actor).roll(options)\r\n        return\r\n    }\r\n\r\n    // old actions\r\n    if (type === 1) {\r\n        options.skill = skill\r\n        if (map) options.modifiers.push(new game.pf2e.Modifier({ label: 'PF2E.MultipleAttackPenalty', modifier: map }))\r\n        game.pf2e.actions[slug](options)\r\n    }\r\n    // new actions\r\n    else if (type === 2) {\r\n        options.statistic = skill\r\n        if (map) options.multipleAttackPenalty = map / -5\r\n        game.pf2e.actions.get(slug).use(options)\r\n    }\r\n    // exception for old actions that only accept one actor argument\r\n    else if (type === 3) {\r\n        game.pf2e.actions[slug](actor)\r\n    }\r\n}\r\n", "import { getSetting } from './module.js'\r\nimport { getActionIcon, toggleWeaponTrait } from './pf2e.js'\r\nimport { popup } from './popup.js'\r\nimport { addNameTooltipListeners, getItemFromEvent, getItemSummary } from './shared.js'\r\nimport { actionsUUIDS } from './skills.js'\r\n\r\nconst SECTIONS_TYPES = {\r\n    action: { order: 0, label: 'PF2E.ActionsActionsHeader', actionLabel: 'PF2E.ActionTypeAction' },\r\n    reaction: { order: 1, label: 'PF2E.ActionTypeReaction', actionLabel: 'PF2E.ActionTypeReaction' },\r\n    free: { order: 2, label: 'PF2E.ActionTypeFree', actionLabel: 'PF2E.ActionTypeFree' },\r\n    passive: { order: 3, label: 'PF2E.ActionTypePassive', actionLabel: 'PF2E.ActionTypePassive' },\r\n}\r\n\r\nconst TOOLTIPS = {\r\n    delay: [500, 0],\r\n    position: 'top',\r\n    theme: 'crb-hover',\r\n}\r\n\r\nexport async function getActionsData(actor) {\r\n    const isCharacter = actor.isOfType('character')\r\n    const toggles = actor.synthetics.toggles.slice()\r\n    const heroActions = isCharacter ? getHeroActions(actor) : null\r\n    const sorting = getSetting('actions')\r\n    const actions = isCharacter ? getCharacterActions(actor) : getNpcActions(actor)\r\n\r\n    const strikes = await Promise.all(\r\n        actor.system.actions.map(async (strike, index) => ({\r\n            ...strike,\r\n            index,\r\n            damageFormula: await strike.damage?.({ getFormula: true }),\r\n            criticalFormula: await strike.critical?.({ getFormula: true }),\r\n        }))\r\n    )\r\n\r\n    let sections = {}\r\n\r\n    for (const action of actions) {\r\n        if (sorting !== 'split') {\r\n            sections.action ??= []\r\n            sections.action.push(action)\r\n        } else {\r\n            sections[action.type] ??= []\r\n            sections[action.type].push(action)\r\n        }\r\n    }\r\n\r\n    sections = Object.entries(sections).map(([type, actions]) => {\r\n        actions.forEach(action => {\r\n            action.img = getActionIcon(action.cost)\r\n            action.typeLabel = SECTIONS_TYPES[action.type].actionLabel\r\n        })\r\n\r\n        if (sorting !== 'type') {\r\n            actions.sort((a, b) => a.name.localeCompare(b.name))\r\n        } else {\r\n            actions.sort((a, b) => {\r\n                const orderA = SECTIONS_TYPES[a.type].order\r\n                const orderB = SECTIONS_TYPES[b.type].order\r\n                return orderA === orderB ? a.name.localeCompare(b.name) : orderA - orderB\r\n            })\r\n        }\r\n\r\n        return { type, actions, label: SECTIONS_TYPES[type].label }\r\n    })\r\n\r\n    if (sorting === 'split') sections.sort((a, b) => SECTIONS_TYPES[a.type].order - SECTIONS_TYPES[b.type].order)\r\n\r\n    if (toggles.length || strikes.length || sections.length || heroActions?.length)\r\n        return { toggles, strikes, sections, heroActions, damageTypes: CONFIG.PF2E.damageTypes }\r\n}\r\n\r\nexport function getActionsOptions(actor) {\r\n    if (getSetting('actions-colors')) return { classList: ['attack-damage-system-colors'] }\r\n}\r\n\r\nexport function addActionsListeners(el, actor) {\r\n    addNameTooltipListeners(el.find('.toggle'))\r\n    addNameTooltipListeners(el.find('.strike'))\r\n    addNameTooltipListeners(el.find('.action'))\r\n\r\n    el.find('[data-action=action-chat]').on('click', event => {\r\n        event.preventDefault()\r\n        const item = getItemFromEvent(event, actor)\r\n        item.toMessage(event, { create: true })\r\n    })\r\n\r\n    el.find('[data-action=action-description]').on('click', async event => {\r\n        event.preventDefault()\r\n        const action = $(event.currentTarget).closest('.action')\r\n        const description = await getItemSummary(action, actor)\r\n        if (description) popup(action.find('.name').html().trim(), description)\r\n    })\r\n\r\n    el.find('[data-action=toggle-roll-option], [data-action=set-suboption]').on('click', event => {\r\n        event.preventDefault()\r\n        const toggle = event.currentTarget.closest('.toggle')\r\n        const { domain, option, itemId } = toggle.dataset\r\n        const suboption = toggle.querySelector('select')?.value ?? null\r\n        actor.toggleRollOption(domain, option, itemId ?? null, toggle.querySelector('input').checked, suboption)\r\n    })\r\n\r\n    function getStrike(event) {\r\n        const { index } = event.currentTarget.closest('.strike').dataset\r\n        return actor.system.actions[index]\r\n    }\r\n\r\n    el.find('[data-action=strike-attack]').on('click', event => {\r\n        event.preventDefault()\r\n        const { index } = event.currentTarget.dataset\r\n        const strike = getStrike(event)\r\n        strike?.variants[index].roll({ event })\r\n    })\r\n\r\n    el.find('[data-action=strike-damage], [data-action=strike-critical]')\r\n        .on('click', event => {\r\n            event.preventDefault()\r\n            const { action } = event.currentTarget.dataset\r\n            const strike = getStrike(event)\r\n            strike?.[action === 'strike-damage' ? 'damage' : 'critical']({ event })\r\n        })\r\n        .tooltipster(TOOLTIPS)\r\n\r\n    el.find('[data-action=strike-auxiliary]').on('click', event => {\r\n        event.preventDefault()\r\n        if (event.currentTarget !== event.target) return\r\n\r\n        const strike = getStrike(event)\r\n        if (!strike) return\r\n\r\n        const { index } = event.currentTarget.dataset\r\n        const modular = event.currentTarget.querySelector('select')?.value ?? null\r\n\r\n        strike.auxiliaryActions?.[index]?.execute({ selection: modular })\r\n    })\r\n\r\n    el.find('[data-action=toggle-versatile]')\r\n        .on('click', event => {\r\n            event.preventDefault()\r\n\r\n            const weapon = getStrike(event)?.item\r\n            if (!weapon) return\r\n\r\n            const target = event.currentTarget\r\n            const { value } = target.dataset\r\n            const baseType = weapon?.system.damage.damageType ?? null\r\n            const selection = target.classList.contains('selected') || value === baseType ? null : value\r\n\r\n            toggleWeaponTrait({ trait: 'versatile', weapon, selection })\r\n        })\r\n        .tooltipster(TOOLTIPS)\r\n\r\n    el.find('[data-action=strike-ammo]').on('change', event => {\r\n        event.preventDefault()\r\n\r\n        const weapon = getStrike(event)?.item\r\n        if (!weapon) return\r\n\r\n        const ammo = actor.items.get(event.currentTarget.value)\r\n        weapon.update({ system: { selectedAmmoId: ammo?.id ?? null } })\r\n    })\r\n}\r\n\r\nfunction getHeroActions(actor) {\r\n    const heroActionsModule = game.modules.get('pf2e-hero-actions')\r\n    return heroActionsModule?.active ? heroActionsModule.api.getHeroActions(actor) : null\r\n}\r\n\r\nfunction getCharacterActions(actor) {\r\n    const actions = actor.itemTypes.action.filter(item => !actionsUUIDS.has(item.sourceId))\r\n    const feats = actor.itemTypes.feat.filter(item => item.actionCost)\r\n\r\n    return (\r\n        [...actions, ...feats]\r\n            // TODO maybe some day i will get back to this and give them their own place\r\n            .filter(actions => {\r\n                const traits = actions.system.traits.value\r\n                return !traits.includes('downtime') && !traits.includes('exploration')\r\n            })\r\n            .map(item => {\r\n                const actionCost = item.actionCost\r\n\r\n                return {\r\n                    id: item.id,\r\n                    type: actionCost?.type ?? 'free',\r\n                    cost: actionCost,\r\n                    name: item.name,\r\n                }\r\n            })\r\n    )\r\n}\r\n\r\nfunction getNpcActions(actor) {\r\n    return actor.itemTypes.action.map(item => {\r\n        const actionCost = item.actionCost\r\n        const actionType = actionCost?.type ?? 'passive'\r\n        const hasAura =\r\n            actionType === 'passive' &&\r\n            (item.system.traits.value.includes('aura') || !!item.system.rules.find(r => r.key === 'Aura'))\r\n\r\n        return {\r\n            id: item.id,\r\n            type: actionType,\r\n            cost: actionCost,\r\n            name: item.name,\r\n            hasDeathNote: item.system.deathNote,\r\n            hasAura,\r\n        }\r\n    })\r\n}\r\n", "import { MODULE_ID } from './module.js'\r\nimport { IdentifyItemPopup } from './pf2e.js'\r\nimport { addNameTooltipListeners, deleteItem, editItem, getItemFromEvent } from './shared.js'\r\n\r\nconst ITEMS_TYPES = {\r\n    weapon: { order: 0, label: 'PF2E.InventoryWeaponsHeader' },\r\n    armor: { order: 1, label: 'PF2E.InventoryArmorHeader' },\r\n    consumable: { order: 2, label: 'PF2E.InventoryConsumablesHeader' },\r\n    equipment: { order: 3, label: 'PF2E.InventoryEquipmentHeader' },\r\n    treasure: { order: 4, label: 'PF2E.InventoryTreasureHeader' },\r\n    backpack: { order: 5, label: 'PF2E.InventoryBackpackHeader' },\r\n}\r\n\r\nexport async function getItemsData(actor) {\r\n    const categories = {}\r\n\r\n    for (const item of actor.inventory.contents) {\r\n        categories[item.type] ??= []\r\n        categories[item.type].push(item)\r\n    }\r\n\r\n    return {\r\n        categories: Object.entries(categories)\r\n            .map(([type, items]) => {\r\n                items.sort((a, b) => a.name.localeCompare(b.name))\r\n                return { type, items, label: ITEMS_TYPES[type].label }\r\n            })\r\n            .sort((a, b) => ITEMS_TYPES[a.type].order - ITEMS_TYPES[b.type].order),\r\n    }\r\n}\r\n\r\nexport function addItemsListeners(el, actor) {\r\n    const item = el.find('.item')\r\n\r\n    addNameTooltipListeners(item)\r\n\r\n    item.on('dragstart', event => {\r\n        const target = event.target.closest('.item')\r\n        const { itemType, uuid } = target.dataset\r\n\r\n        const img = new Image()\r\n        img.src = target.querySelector('.item-img img').src\r\n        img.style.width = '32px'\r\n        img.style.height = '32px'\r\n        img.style.borderRadius = '4px'\r\n        img.style.position = 'absolute'\r\n        img.style.left = '-1000px'\r\n        document.body.append(img)\r\n\r\n        event.originalEvent.dataTransfer.setDragImage(img, 16, 16)\r\n        event.originalEvent.dataTransfer.setData(\r\n            'text/plain',\r\n            JSON.stringify({ type: 'Item', fromInventory: true, itemType, uuid })\r\n        )\r\n\r\n        target.addEventListener('dragend', () => img.remove(), { once: true })\r\n    })\r\n\r\n    el.find('.quantity input').on('change', event => {\r\n        getItemFromEvent(event, actor)?.update({ 'system.quantity': event.currentTarget.valueAsNumber })\r\n    })\r\n\r\n    el.find('[data-action=toggle-item-invest]').on('click', event => {\r\n        event.preventDefault()\r\n        const { itemId } = event.currentTarget.closest('.item').dataset\r\n        actor.toggleInvested(itemId)\r\n    })\r\n\r\n    el.find('[data-action=repair-item]').on('click', event => {\r\n        event.preventDefault()\r\n        const item = getItemFromEvent(event, actor)\r\n        if (item) game.pf2e.actions.repair({ item, actors: [actor] })\r\n    })\r\n\r\n    el.find('[data-action=toggle-identified]').on('click', event => {\r\n        event.preventDefault()\r\n        const item = getItemFromEvent(event, actor)\r\n        if (!item) return\r\n        if (item.isIdentified) item.setIdentificationStatus('unidentified')\r\n        else new IdentifyItemPopup(item).render(true)\r\n        // else item.setIdentificationStatus('identified')\r\n    })\r\n\r\n    el.find('[data-action=edit-item]').on('click', event => editItem(event, actor))\r\n\r\n    el.find('[data-action=delete-item]').on('click', event => deleteItem(event, actor))\r\n\r\n    el.find('[data-action=toggle-item-worn').tooltipster({\r\n        animation: null,\r\n        updateAnimation: null,\r\n        animationDuration: 0,\r\n        delay: [0, 0],\r\n        trigger: 'click',\r\n        contentAsHTML: true,\r\n        interactive: true,\r\n        arrow: false,\r\n        side: ['bottom', 'top'],\r\n        theme: 'crb-hover',\r\n        minWidth: 120,\r\n        content: '',\r\n        functionBefore: async function (tooltipster, { event, origin }) {\r\n            const item = getItemFromEvent(event, actor)\r\n            if (!item) return\r\n\r\n            const tmp = document.createElement('div')\r\n            tmp.innerHTML = await renderTemplate('systems/pf2e/templates/actors/partials/carry-type.hbs', { item })\r\n\r\n            const content = tmp.children[1]\r\n            $(content)\r\n                .find('[data-carry-type]')\r\n                .on('click', event => {\r\n                    const { carryType, handsHeld = 0, inSlot } = $(event.currentTarget).data()\r\n                    actor.adjustCarryType(item, carryType, handsHeld, inSlot)\r\n                    tooltipster.close()\r\n                })\r\n\r\n            tooltipster.content(content)\r\n        },\r\n    })\r\n}\r\n", "import { getSetting, MODULE_ID } from './module.js'\r\nimport { popup } from './popup.js'\r\nimport { addNameTooltipListeners, getItemSummary } from './shared.js'\r\n\r\nexport async function getSpellsData(actor) {\r\n    const focusPool = actor.system.resources.focus?.value ?? 0\r\n    const entries = actor.spellcasting.regular\r\n    const spells = []\r\n\r\n    for (const entry of entries) {\r\n        const entryId = entry.id\r\n        const data = await entry.getSheetData()\r\n        const isCharge = entry.system?.prepared?.value === 'charge'\r\n        const isStaff = getProperty(entry, 'flags.pf2e-staves.staveID') !== undefined\r\n        const charges = { value: getProperty(entry, 'flags.pf2e-staves.charges') ?? 0 }\r\n\r\n        for (const slot of data.levels) {\r\n            if (!slot.active.length || slot.uses?.max === 0) continue\r\n\r\n            const slotSpells = []\r\n            const actives = slot.active.filter(x => x && x.uses?.max !== 0)\r\n\r\n            for (let slotId = 0; slotId < actives.length; slotId++) {\r\n                const { spell, expended, virtual, uses, castLevel } = actives[slotId]\r\n\r\n                slotSpells.push({\r\n                    name: spell.name,\r\n                    img: spell.img,\r\n                    castLevel: castLevel ?? spell.level,\r\n                    slotId,\r\n                    entryId,\r\n                    itemId: spell.id,\r\n                    inputId: data.isInnate ? spell.id : data.id,\r\n                    inputPath: isCharge\r\n                        ? 'flags.pf2e-staves.charges'\r\n                        : data.isInnate\r\n                        ? 'system.location.uses.value'\r\n                        : `system.slots.slot${slot.level}.value`,\r\n                    isCharge,\r\n                    isVirtual: virtual,\r\n                    isInnate: data.isInnate,\r\n                    isCantrip: slot.isCantrip,\r\n                    isFocus: data.isFocusPool,\r\n                    isPrepared: data.isPrepared,\r\n                    isSpontaneous: data.isSpontaneous || data.isFlexible,\r\n                    slotLevel: slot.level,\r\n                    uses: uses ?? (isCharge ? charges : slot.uses),\r\n                    expended: expended ?? (data.isFocusPool ? focusPool <= 0 : false),\r\n                    action: spell.system.time.value,\r\n                    type: isCharge\r\n                        ? isStaff\r\n                            ? `${MODULE_ID}.spells.staff`\r\n                            : `${MODULE_ID}.spells.charges`\r\n                        : data.isInnate\r\n                        ? 'PF2E.PreparationTypeInnate'\r\n                        : data.isSpontaneous\r\n                        ? 'PF2E.PreparationTypeSpontaneous'\r\n                        : data.isFlexible\r\n                        ? 'PF2E.SpellFlexibleLabel'\r\n                        : data.isFocusPool\r\n                        ? 'PF2E.SpellFocusLabel'\r\n                        : 'PF2E.SpellPreparedLabel',\r\n                    order: isCharge\r\n                        ? 0\r\n                        : data.isPrepared\r\n                        ? 1\r\n                        : data.isFocusPool\r\n                        ? 2\r\n                        : data.isInnate\r\n                        ? 3\r\n                        : data.isSpontaneous\r\n                        ? 4\r\n                        : 5,\r\n                })\r\n            }\r\n\r\n            if (slotSpells.length) {\r\n                spells[slot.level] ??= []\r\n                spells[slot.level].push(...slotSpells)\r\n            }\r\n        }\r\n    }\r\n\r\n    if (spells.length) {\r\n        const sort = getSetting('spells')\r\n            ? (a, b) => (a.order === b.order ? a.name.localeCompare(b.name) : a.order - b.order)\r\n            : (a, b) => a.name.localeCompare(b.name)\r\n        spells.forEach(entry => entry.sort(sort))\r\n    }\r\n\r\n    const ritualData = await actor.spellcasting.ritual?.getSheetData()\r\n    const rituals = ritualData?.levels.flatMap((slot, slotId) =>\r\n        slot.active.map(({ spell }) => ({\r\n            name: spell.name,\r\n            img: spell.img,\r\n            slotId,\r\n            itemId: spell.id,\r\n            level: spell.level,\r\n            time: spell.system.time.value,\r\n        }))\r\n    )\r\n\r\n    if (spells.length || rituals?.length) return { spells, rituals }\r\n}\r\n\r\nexport function addSpellsListeners(el, actor) {\r\n    addNameTooltipListeners(el.find('.spell'))\r\n\r\n    el.find('[data-action=toggle-pips]').on('click contextmenu', event => {\r\n        event.preventDefault()\r\n        const change = event.type === 'click' ? 1 : -1\r\n        const points = (actor.system.resources.focus?.value ?? 0) + change\r\n        actor.update({ 'system.resources.focus.value': points })\r\n    })\r\n\r\n    el.find('[data-action=toggle-prepared]').on('click', event => {\r\n        event.preventDefault()\r\n        const { slotLevel, slotId, entryId, expended } = $(event.currentTarget).closest('.spell').data()\r\n        const collection = actor.spellcasting.collections.get(entryId)\r\n        collection?.setSlotExpendedState(slotLevel ?? 0, slotId ?? 0, expended !== true)\r\n    })\r\n\r\n    el.find('[data-action=cast-spell]').on('click', event => {\r\n        event.preventDefault()\r\n\r\n        const { slotLevel, slotId, entryId, itemId } = $(event.currentTarget).closest('.spell').data()\r\n        const collection = actor.spellcasting.collections.get(entryId, { strict: true })\r\n        if (!collection) return\r\n\r\n        const spell = collection.get(itemId, { strict: true })\r\n        if (!spell) return\r\n\r\n        collection.entry.cast(spell, { slot: slotId, level: slotLevel })\r\n    })\r\n\r\n    el.find('[data-action=spell-description]').on('click', async event => {\r\n        event.preventDefault()\r\n        const spell = $(event.currentTarget).closest('.spell')\r\n        const description = await getItemSummary(spell, actor)\r\n        if (description) popup(spell.find('.name').html().trim(), description)\r\n    })\r\n\r\n    el.find('[data-input-path]').on('change', async event => {\r\n        const { inputPath, entryId } = $(event.currentTarget).data()\r\n        const value = event.currentTarget.valueAsNumber\r\n        await actor.updateEmbeddedDocuments('Item', [{ _id: entryId, [inputPath]: value }])\r\n    })\r\n}\r\n", "import { addActionsListeners, getActionsData, getActionsOptions } from './actions.js'\r\nimport { addItemsListeners, getItemsData } from './items.js'\r\nimport { getSetting, localize, MODULE_ID, templatePath } from './module.js'\r\nimport { addSkillsListeners, getSkillsData } from './skills.js'\r\nimport { addSpellsListeners, getSpellsData } from './spells.js'\r\n\r\nconst COVER_UUID = 'Compendium.pf2e.other-effects.I9lfZUiCwMiGogVi'\r\n\r\nconst POSITIONS = {\r\n    left: ['left', 'right', 'top', 'bottom'],\r\n    right: ['right', 'left', 'top', 'bottom'],\r\n    top: ['top', 'bottom', 'left', 'right'],\r\n    bottom: ['bottom', 'top', 'left', 'right'],\r\n}\r\n\r\nconst SPEEDS = [\r\n    { type: 'land', icon: '<i class=\"fa-solid fa-shoe-prints\"></i>' },\r\n    { type: 'burrow', icon: '<i class=\"fa-solid fa-chevrons-down\"></i>' },\r\n    { type: 'climb', icon: '<i class=\"fa-solid fa-spider\"></i>' },\r\n    { type: 'fly', icon: '<i class=\"fa-solid fa-feather\"></i>' },\r\n    { type: 'swim', icon: '<i class=\"fa-solid fa-person-swimming\"></i>' },\r\n]\r\n\r\nconst SIDEBARS = {\r\n    actions: { getData: getActionsData, addListeners: addActionsListeners, getOptions: getActionsOptions },\r\n    items: { getData: getItemsData, addListeners: addItemsListeners },\r\n    spells: { getData: getSpellsData, addListeners: addSpellsListeners },\r\n    skills: { getData: getSkillsData, addListeners: addSkillsListeners },\r\n    extras: { getData: () => null, addListeners: () => {} },\r\n}\r\n\r\nexport class HUD extends Application {\r\n    #token = null\r\n    #lastToken = null\r\n    #delay = null\r\n    #hover = false\r\n    #closing = null\r\n    #mouseevent\r\n    #mousedown = false\r\n    #lock = false\r\n    #softLock = false\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.hoverToken = (token, hover) => {\r\n            if (\r\n                this.#mousedown ||\r\n                this.#lock ||\r\n                this.#softLock ||\r\n                !(token instanceof Token) ||\r\n                !token.isOwner ||\r\n                !token.actor?.isOfType('character', 'npc')\r\n            )\r\n                return\r\n\r\n            const transform = token.localTransform\r\n            const document = token.document\r\n            if (transform.tx !== document.x || transform.ty !== document.y) return\r\n\r\n            this.#hover = hover\r\n            if (hover && this.#token === token && this.rendered) return\r\n\r\n            if (hover) {\r\n                if (this.#token) delete this.#token.actor.apps[MODULE_ID]\r\n                this.#token = token\r\n                if (!this.#closing) return this.render()\r\n                clearTimeout(this.#closing)\r\n                this.#closing = null\r\n                this.render(true)\r\n            } else {\r\n                this.close()\r\n            }\r\n        }\r\n\r\n        this.#mouseevent = event => {\r\n            if (event.type === 'mouseup') {\r\n                this.#mousedown = false\r\n                return\r\n            }\r\n\r\n            const target = event.target\r\n            const el = this.element[0]\r\n\r\n            if (el) {\r\n                const popup = el.querySelector('.popup')\r\n                if (el.contains(target)) {\r\n                    if (popup && !popup.contains(target)) popup.remove()\r\n                    return\r\n                }\r\n                if (target.closest('.app') || target.closest('.tooltipster-base')) return\r\n                if (popup) return popup.remove()\r\n                this.close({ force: true })\r\n            }\r\n\r\n            this.#lock = false\r\n            this.#mousedown = true\r\n        }\r\n\r\n        this.forceClose = () => this.close({ force: true })\r\n\r\n        this.deleteToken = token => {\r\n            if (this.#token && token.id === this.#token.id) this.close({ force: true })\r\n        }\r\n\r\n        window.addEventListener('mousedown', this.#mouseevent)\r\n        window.addEventListener('mouseup', this.#mouseevent)\r\n    }\r\n\r\n    delete() {\r\n        this.close({ force: true })\r\n        window.removeEventListener('mousedown', this.#mouseevent)\r\n        window.removeEventListener('mouseup', this.#mouseevent)\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            popOut: false,\r\n            minimizable: false,\r\n            template: templatePath('hud'),\r\n        })\r\n    }\r\n\r\n    get token() {\r\n        return this.#token\r\n    }\r\n\r\n    get actor() {\r\n        return this.#token?.actor\r\n    }\r\n\r\n    get hasCover() {\r\n        return this.actor?.itemTypes.effect.find(effect => effect.flags.core?.sourceId === COVER_UUID)\r\n    }\r\n\r\n    getData() {\r\n        const token = this.#token\r\n        const actor = this.#token?.actor\r\n        if (!actor) return {}\r\n\r\n        const { attributes, saves } = actor\r\n        const { hp, sp, ac, shield, speed } = attributes\r\n\r\n        const speeds = SPEEDS.map(s => {\r\n            s.value = (s.type === 'land' ? speed.total : speed.otherSpeeds.find(o => o.type === s.type)?.total) ?? 0\r\n            return s\r\n        })\r\n\r\n        return {\r\n            tokenId: token.id,\r\n            name: token.document.name,\r\n            hp,\r\n            sp,\r\n            ac: ac.value,\r\n            shield,\r\n            hasCover: this.hasCover,\r\n            saves: {\r\n                fortitude: saves.fortitude.mod,\r\n                reflex: saves.reflex.mod,\r\n                will: saves.will.mod,\r\n            },\r\n            speeds,\r\n            languages: this.actor.system.traits?.languages?.value.join(', '),\r\n            hasSpells: actor.spellcasting.some(x => x.category !== 'items'),\r\n            hasItems: actor.inventory.size,\r\n        }\r\n    }\r\n\r\n    #close() {\r\n        this.#token = null\r\n        this.#hover = false\r\n        this.#lock = false\r\n        this.#softLock = false\r\n\r\n        if (this.#delay !== null) {\r\n            clearTimeout(this.#delay)\r\n            this.#delay = null\r\n        }\r\n\r\n        const states = Application.RENDER_STATES\r\n        this._state = states.CLOSING\r\n\r\n        let el = this.element\r\n        if (!el) return (this._state = states.CLOSED)\r\n        el.css({ minHeight: 0 })\r\n\r\n        for (let cls of this.constructor._getInheritanceChain()) {\r\n            Hooks.call(`close${cls.name}`, this, el)\r\n        }\r\n\r\n        el.remove()\r\n\r\n        this._element = null\r\n        this._state = states.CLOSED\r\n    }\r\n\r\n    close(options = {}) {\r\n        const states = Application.RENDER_STATES\r\n        if (!options.force && !this.#delay && ![states.RENDERED, states.ERROR].includes(this._state)) return\r\n\r\n        if (options.force) return this.#close(options)\r\n\r\n        this.#closing = setTimeout(() => {\r\n            this.#closing = null\r\n            if (this.#hover) return\r\n            this.#close(options)\r\n        })\r\n    }\r\n\r\n    async _render(force = false, options = {}) {\r\n        let sidebarType\r\n        let scrollTop\r\n\r\n        if (this.#lastToken === this.#token) {\r\n            const sidebar = this.element.find('.sidebar')[0]\r\n            if (sidebar) {\r\n                sidebarType = sidebar.dataset.type\r\n                scrollTop = sidebar.scrollTop\r\n            }\r\n        }\r\n\r\n        await super._render(force, options)\r\n\r\n        if (sidebarType) {\r\n            const sidebar = await this.#openSidebar(sidebarType)\r\n            if (scrollTop > 0) sidebar.scrollTop = scrollTop\r\n        }\r\n\r\n        this.#lastToken = this.#token\r\n    }\r\n\r\n    render(force) {\r\n        if (!this.#token?.actor || this.#mousedown) return\r\n\r\n        if (force) return super.render(true)\r\n\r\n        const delay = getSetting('delay')\r\n        if (!delay) super.render(true)\r\n        else this.#delay = setTimeout(() => super.render(true), delay)\r\n    }\r\n\r\n    _injectHTML(html) {\r\n        $('body').append(html)\r\n        this._element = html\r\n    }\r\n\r\n    setPosition() {\r\n        const token = this.#token\r\n        if (!token) return\r\n\r\n        const element = this.element[0]\r\n        const hud = element.getBoundingClientRect()\r\n        const scale = token.worldTransform.a\r\n        const targetCoords = canvas.clientCoordinatesFromCanvas(token.document._source)\r\n        const target = {\r\n            x: targetCoords.x,\r\n            y: targetCoords.y,\r\n            width: token.hitArea.width * scale,\r\n            height: token.hitArea.height * scale,\r\n            get right() {\r\n                return this.x + this.width\r\n            },\r\n            get bottom() {\r\n                return this.y + this.height\r\n            },\r\n        }\r\n\r\n        const positions = POSITIONS[getSetting('position')].slice()\r\n        let coords\r\n\r\n        while (positions.length && !coords) {\r\n            const position = positions.shift()\r\n\r\n            if (position === 'left') {\r\n                coords = {\r\n                    x: target.x - hud.width,\r\n                    y: postionFromTargetY(hud, target),\r\n                }\r\n                if (coords.x < 0) coords = undefined\r\n            } else if (position === 'right') {\r\n                coords = {\r\n                    x: target.right,\r\n                    y: postionFromTargetY(hud, target),\r\n                }\r\n                if (coords.x + hud.width > window.innerWidth) coords = undefined\r\n            } else if (position === 'top') {\r\n                coords = {\r\n                    x: postionFromTargetX(hud, target),\r\n                    y: target.y - hud.height,\r\n                }\r\n                if (coords.y < 0) coords = undefined\r\n            } else if (position === 'bottom') {\r\n                coords = {\r\n                    x: postionFromTargetX(hud, target),\r\n                    y: target.bottom,\r\n                }\r\n                if (coords.y + hud.height > window.innerHeight) coords = undefined\r\n            }\r\n        }\r\n\r\n        if (coords) {\r\n            element.style.left = `${coords.x}px`\r\n            element.style.top = `${coords.y}px`\r\n        }\r\n\r\n        return coords\r\n    }\r\n\r\n    activateListeners(html) {\r\n        const token = this.#token\r\n        const actor = token?.actor\r\n        if (!actor) return\r\n\r\n        actor.apps[MODULE_ID] = this\r\n\r\n        html.on('mouseenter', () => {\r\n            this.#hover = true\r\n            this.#softLock = true\r\n        })\r\n\r\n        html.on('mouseleave', () => {\r\n            this.#softLock = false\r\n            if (this.#lock) return\r\n            this.#hover = false\r\n            this.close()\r\n        })\r\n\r\n        html.on('dragover', () => {\r\n            html.css('opacity', 0.1)\r\n            html.css('pointerEvents', 'none')\r\n\r\n            window.addEventListener(\r\n                'dragend',\r\n                () => {\r\n                    html.css('opacity', 1)\r\n                    html.css('pointerEvents', '')\r\n                },\r\n                { once: true }\r\n            )\r\n        })\r\n\r\n        html.find('input').on('change', async event => {\r\n            const target = event.currentTarget\r\n            const value = target.valueAsNumber\r\n            const attr = target.name\r\n\r\n            target.blur()\r\n\r\n            if (attr !== 'shield.value') await actor.update({ [attr]: value })\r\n            else await actor.heldShield.update({ 'system.hp.value': value })\r\n        })\r\n\r\n        html.find('[data-action=raise-shield]').on('click', () => {\r\n            game.pf2e.actions.raiseAShield({ actors: [actor] })\r\n        })\r\n\r\n        html.find('[data-action=take-cover]').on('click', async () => {\r\n            const source = (await fromUuid(COVER_UUID)).toObject()\r\n            setProperty(source, 'flags.core.sourceId', COVER_UUID)\r\n\r\n            const hasCover = this.hasCover\r\n            if (this.hasCover) await hasCover.delete()\r\n            else await actor.createEmbeddedDocuments('Item', [source])\r\n        })\r\n\r\n        html.find('[data-action=roll-save]').on('click', event => {\r\n            const save = event.currentTarget.dataset.save\r\n            actor.saves[save].roll({ event })\r\n        })\r\n\r\n        html.find('.inner .footer [data-type]').on('click', this.#openSidebar.bind(this))\r\n    }\r\n\r\n    async #openSidebar(event) {\r\n        const actor = this.actor\r\n        const type = typeof event === 'string' ? event : event.currentTarget.dataset.type\r\n        const { getData, addListeners, getOptions } = SIDEBARS[type]\r\n        const data = await getData(actor)\r\n        const { classList = [] } = (getOptions && (await getOptions(actor))) || {}\r\n        if (!data) return ui.notifications.warn(localize(`${type}.empty`, { name: this.#token.name }))\r\n\r\n        data.isGM = game.user.isGM\r\n        data.isCharacter = actor.isOfType('character')\r\n\r\n        this.#lock = true\r\n\r\n        let element = this.element\r\n        element.find('.sidebar').remove()\r\n        element.find('.inner .footer [data-type]').removeClass('active')\r\n        element.find(`.inner .footer [data-type=${type}]`).addClass('active')\r\n        element = element[0]\r\n\r\n        const tmp = document.createElement('div')\r\n        tmp.innerHTML = await renderTemplate(templatePath(type), data)\r\n\r\n        const sidebar = tmp.firstElementChild\r\n        sidebar.classList.add('sidebar', ...classList)\r\n        if (!getSetting('scrollbar')) sidebar.classList.add('no-scrollbar')\r\n        sidebar.dataset.type = type\r\n        this.element.append(sidebar)\r\n\r\n        const rect = sidebar.getBoundingClientRect()\r\n        const target = element.getBoundingClientRect()\r\n\r\n        let left = target.x - rect.width\r\n        if (left < 0) left = target.right\r\n        // left -= target.x\r\n\r\n        const elPadding = parseInt(window.getComputedStyle(element).padding)\r\n        let top = postionFromTargetY(rect, target, elPadding)\r\n        // top -= target.y\r\n\r\n        sidebar.style.left = `${left}px`\r\n        sidebar.style.top = `${top}px`\r\n\r\n        addListeners($(sidebar), actor)\r\n\r\n        return sidebar\r\n    }\r\n}\r\n\r\nfunction postionFromTargetY(el, target, margin = 0) {\r\n    let y = target.y + target.height / 2 - el.height / 2\r\n    if (y + el.height > window.innerHeight) y = window.innerHeight - el.height - margin\r\n    if (y < 0) y = margin\r\n    return y\r\n}\r\n\r\nfunction postionFromTargetX(el, target) {\r\n    let x = target.x + target.width / 2 - el.width / 2\r\n    if (x + el.width > window.innerWidth) y = window.innerWidth - el.width\r\n    if (x < 0) x = 0\r\n    return x\r\n}\r\n", "import { HUD } from './hud.js'\r\nimport { getSetting, MODULE_ID } from './module.js'\r\n\r\nlet hud = null\r\n\r\nfunction registerSetting(name, type, defValue, extra = {}) {\r\n    game.settings.register(MODULE_ID, name, {\r\n        ...extra,\r\n        name: settingPath(name, 'name'),\r\n        hint: settingPath(name, 'hint'),\r\n        scope: 'client',\r\n        config: true,\r\n        type,\r\n        default: defValue,\r\n    })\r\n}\r\n\r\nHooks.once('setup', () => {\r\n    registerSetting('enabled', Boolean, true, { onChange: enableModule })\r\n\r\n    registerSetting('position', String, 'right', {\r\n        choices: {\r\n            left: settingPath('position', 'choices.left'),\r\n            right: settingPath('position', 'choices.right'),\r\n            top: settingPath('position', 'choices.top'),\r\n            bottom: settingPath('position', 'choices.bottom'),\r\n        },\r\n    })\r\n\r\n    registerSetting('delay', Number, 250, {\r\n        range: {\r\n            min: 0,\r\n            max: 2000,\r\n            step: 50,\r\n        },\r\n    })\r\n\r\n    registerSetting('scrollbar', Boolean, true)\r\n\r\n    registerSetting('actions', String, 'split', {\r\n        choices: {\r\n            name: settingPath('actions', 'choices.name'),\r\n            type: settingPath('actions', 'choices.type'),\r\n            split: settingPath('actions', 'choices.split'),\r\n        },\r\n    })\r\n\r\n    registerSetting('actions-colors', Boolean, true)\r\n\r\n    registerSetting('spells', Boolean, false)\r\n})\r\n\r\nHooks.once('ready', () => {\r\n    if (getSetting('enabled')) enableModule(true)\r\n})\r\n\r\nfunction settingPath(setting, key) {\r\n    return `${MODULE_ID}.settings.${setting}.${key}`\r\n}\r\n\r\nfunction enableModule(enabled) {\r\n    if (enabled && !hud) {\r\n        hud = new HUD()\r\n\r\n        Hooks.on('hoverToken', hud.hoverToken)\r\n        Hooks.on('deleteToken', hud.deleteToken)\r\n        Hooks.on('canvasPan', hud.forceClose)\r\n    } else if (!enabled && hud) {\r\n        Hooks.off('hoverToken', hud.hoverToken)\r\n        Hooks.off('deleteToken', hud.deleteToken)\r\n        Hooks.off('canvasPan', hud.forceClose)\r\n\r\n        hud.delete()\r\n        hud = null\r\n    }\r\n}\r\n"],
  "mappings": "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",
  "names": ["MODULE_ID", "getSetting", "setting", "__name", "localize", "args", "data", "useFormat", "keys", "templatePath", "template", "modifier", "mod", "dcAdjustments", "dcByLevel", "MAGIC_TRADITIONS", "actionImgMap", "getActionIcon", "action", "fallback", "actionImgMap", "value", "sanitized", "__name", "toggleWeaponTrait", "weapon", "trait", "selection", "item", "__name", "adjustDC", "dc", "adjustment", "dcAdjustments", "rarityToDCAdjustment", "rarity", "adjustDCByRarity", "calculateDC", "level", "proficiencyWithoutLevel", "pwlSetting", "dcByLevel", "getDcRarity", "getMagicTraditions", "traits", "t", "setHasElement", "MAGIC_TRADITIONS", "getIdentifyMagicDCs", "baseDC", "notMatchingTraditionModifier", "result", "traditions", "key", "getItemIdentificationDCs", "objectHasKey", "obj", "set", "value", "IdentifyItemPopup", "dcs", "$form", "event", "$button", "itemImg", "itemName", "identifiedName", "skills", "row", "slug", "name", "actionOption", "content", "_event", "formData", "status", "popup", "title", "content", "hud", "MODULE_ID", "tmp", "templatePath", "localize", "__name", "getItemSummary", "el", "actor", "dataset", "item", "data", "description", "__name", "addNameTooltipListeners", "event", "target", "name", "editItem", "getItemFromEvent", "deleteItem", "localize", "itemId", "CROWBAR_UUIDS", "BON_MOT_UUID", "LABELS", "MODULE_ID", "ACTIONS_UUIDS", "DUPLICATE_SKILLS", "SKILLS", "actor", "options", "item", "feat", "skill", "action", "slug", "actions", "unslugged", "_", "c", "variant", "modifiers", "modifier", "SKILLS_SLUGS", "SKILLS_MAP", "skills", "actionsUUIDS", "getSkillsData", "i", "label", "rank", "mod", "getSkill", "lores", "__name", "addSkillsListeners", "el", "event", "target", "skillSlug", "createVariantDialog", "rollAction", "description", "getItemSummary", "popup", "base", "content", "localize", "html", "map", "type", "condition", "SECTIONS_TYPES", "TOOLTIPS", "getActionsData", "actor", "isCharacter", "toggles", "heroActions", "getHeroActions", "sorting", "getSetting", "actions", "getCharacterActions", "getNpcActions", "strikes", "strike", "index", "sections", "action", "type", "getActionIcon", "a", "b", "orderA", "orderB", "__name", "getActionsOptions", "addActionsListeners", "el", "addNameTooltipListeners", "event", "getItemFromEvent", "description", "getItemSummary", "popup", "toggle", "domain", "option", "itemId", "suboption", "getStrike", "modular", "weapon", "target", "value", "baseType", "selection", "toggleWeaponTrait", "ammo", "heroActionsModule", "item", "actionsUUIDS", "feats", "traits", "actionCost", "actionType", "hasAura", "r", "ITEMS_TYPES", "getItemsData", "actor", "categories", "item", "type", "items", "a", "b", "__name", "addItemsListeners", "el", "addNameTooltipListeners", "event", "target", "itemType", "uuid", "img", "getItemFromEvent", "itemId", "IdentifyItemPopup", "editItem", "deleteItem", "tooltipster", "origin", "tmp", "content", "carryType", "handsHeld", "inSlot", "getSpellsData", "actor", "focusPool", "entries", "spells", "entry", "entryId", "data", "isCharge", "isStaff", "charges", "slot", "slotSpells", "actives", "x", "slotId", "spell", "expended", "virtual", "uses", "castLevel", "MODULE_ID", "sort", "getSetting", "a", "b", "rituals", "__name", "addSpellsListeners", "el", "addNameTooltipListeners", "event", "change", "points", "slotLevel", "itemId", "collection", "description", "getItemSummary", "popup", "inputPath", "value", "COVER_UUID", "POSITIONS", "SPEEDS", "SIDEBARS", "getActionsData", "addActionsListeners", "getActionsOptions", "getItemsData", "addItemsListeners", "getSpellsData", "addSpellsListeners", "getSkillsData", "addSkillsListeners", "HUD", "#token", "#lastToken", "#delay", "#hover", "#closing", "#mouseevent", "#mousedown", "#lock", "#softLock", "token", "hover", "transform", "document", "MODULE_ID", "event", "target", "el", "popup", "templatePath", "effect", "actor", "attributes", "saves", "hp", "sp", "ac", "shield", "speed", "speeds", "s", "o", "x", "#close", "states", "cls", "options", "force", "sidebarType", "scrollTop", "sidebar", "#openSidebar", "delay", "getSetting", "html", "element", "hud", "scale", "targetCoords", "positions", "coords", "position", "postionFromTargetY", "postionFromTargetX", "value", "attr", "source", "hasCover", "save", "type", "getData", "addListeners", "getOptions", "data", "classList", "localize", "tmp", "rect", "left", "elPadding", "top", "__name", "margin", "y", "hud", "registerSetting", "name", "type", "defValue", "extra", "MODULE_ID", "settingPath", "__name", "enableModule", "getSetting", "setting", "key", "enabled", "HUD"]
}
