{
  "version": 3,
  "sources": ["../src/module.js", "../src/pf2e.js", "../src/popup.js", "../src/shared.js", "../src/skills.js", "../src/actions.js", "../src/items.js", "../src/spells.js", "../src/hud.js", "../src/main.js"],
  "sourcesContent": ["export const MODULE_ID = 'pf2e-token-hud'\r\n\r\nexport function getSetting(setting) {\r\n    return game.settings.get(MODULE_ID, setting)\r\n}\r\n\r\nexport function localize(...args) {\r\n    const data = args.at(-1)\r\n    const useFormat = typeof data === 'object'\r\n\r\n    const keys = useFormat ? args.slice(0, -1) : args\r\n    keys.unshift(MODULE_ID)\r\n\r\n    return game.i18n[useFormat ? 'format' : 'localize'](keys.join('.'), data)\r\n}\r\n\r\nexport function templatePath(template) {\r\n    return `modules/${MODULE_ID}/templates/${template}.hbs`\r\n}\r\n\r\nexport function modifier(mod) {\r\n    return mod >= 0 ? `+${mod}` : mod\r\n}\r\n", "/**\r\n * Those are directly copied from the PF2e system\r\n * because they are not accesible to us in the global\r\n */\r\n\r\nconst dcAdjustments = new Map([\r\n    ['incredibly-easy', -10],\r\n    ['very-easy', -5],\r\n    ['easy', -2],\r\n    ['normal', 0],\r\n    ['hard', 2],\r\n    ['very-hard', 5],\r\n    ['incredibly-hard', 10],\r\n])\r\n\r\nconst dcByLevel = new Map([\r\n    [-1, 13],\r\n    [0, 14],\r\n    [1, 15],\r\n    [2, 16],\r\n    [3, 18],\r\n    [4, 19],\r\n    [5, 20],\r\n    [6, 22],\r\n    [7, 23],\r\n    [8, 24],\r\n    [9, 26],\r\n    [10, 27],\r\n    [11, 28],\r\n    [12, 30],\r\n    [13, 31],\r\n    [14, 32],\r\n    [15, 34],\r\n    [16, 35],\r\n    [17, 36],\r\n    [18, 38],\r\n    [19, 39],\r\n    [20, 40],\r\n    [21, 42],\r\n    [22, 44],\r\n    [23, 46],\r\n    [24, 48],\r\n    [25, 50],\r\n])\r\n\r\nconst MAGIC_TRADITIONS = new Set(['arcane', 'divine', 'occult', 'primal'])\r\n\r\nconst actionImgMap = {\r\n    0: 'systems/pf2e/icons/actions/FreeAction.webp',\r\n    free: 'systems/pf2e/icons/actions/FreeAction.webp',\r\n    1: 'systems/pf2e/icons/actions/OneAction.webp',\r\n    2: 'systems/pf2e/icons/actions/TwoActions.webp',\r\n    3: 'systems/pf2e/icons/actions/ThreeActions.webp',\r\n    '1 or 2': 'systems/pf2e/icons/actions/OneTwoActions.webp',\r\n    '1 to 3': 'systems/pf2e/icons/actions/OneThreeActions.webp',\r\n    '2 or 3': 'systems/pf2e/icons/actions/TwoThreeActions.webp',\r\n    reaction: 'systems/pf2e/icons/actions/Reaction.webp',\r\n    passive: 'systems/pf2e/icons/actions/Passive.webp',\r\n}\r\n\r\nconst actionGlyphMap = {\r\n    0: 'F',\r\n    free: 'F',\r\n    1: 'A',\r\n    2: 'D',\r\n    3: 'T',\r\n    '1 or 2': 'A/D',\r\n    '1 to 3': 'A - T',\r\n    '2 or 3': 'D/T',\r\n    reaction: 'R',\r\n}\r\n\r\nexport function getActionIcon(action, fallback = 'systems/pf2e/icons/actions/Empty.webp') {\r\n    if (action === null) return actionImgMap['passive']\r\n    const value = typeof action !== 'object' ? action : action.type === 'action' ? action.value : action.type\r\n    const sanitized = String(value ?? '')\r\n        .toLowerCase()\r\n        .trim()\r\n    return actionImgMap[sanitized] ?? fallback\r\n}\r\n\r\nexport function getActionGlyph(action) {\r\n    if (!action && action !== 0) return ''\r\n\r\n    const value = typeof action !== 'object' ? action : action.type === 'action' ? action.value : action.type\r\n    const sanitized = String(value ?? '')\r\n        .toLowerCase()\r\n        .trim()\r\n\r\n    return actionGlyphMap[sanitized] ?? ''\r\n}\r\n\r\nexport async function toggleWeaponTrait({ weapon, trait, selection }) {\r\n    const current = weapon.system.traits.toggles[trait].selection\r\n    if (current === selection) return false\r\n\r\n    const item = weapon.actor?.items.get(weapon.id)\r\n    if (item?.isOfType('weapon') && item === weapon) {\r\n        await item.update({ [`system.traits.toggles.${trait}.selection`]: selection })\r\n    } else if (item?.isOfType('weapon') && weapon.altUsageType === 'melee') {\r\n        item.update({ [`system.meleeUsage.traitToggles.${trait}`]: selection })\r\n    } else {\r\n        const rule = item?.rules.find(r => r.key === 'Strike' && !r.ignored && r.slug === weapon.slug)\r\n        await rule?.toggleTrait({ trait, selection })\r\n    }\r\n\r\n    return true\r\n}\r\n\r\nfunction adjustDC(dc, adjustment = 'normal') {\r\n    return dc + (dcAdjustments.get(adjustment) ?? 0)\r\n}\r\n\r\nfunction rarityToDCAdjustment(rarity = 'common') {\r\n    switch (rarity) {\r\n        case 'uncommon':\r\n            return 'hard'\r\n        case 'rare':\r\n            return 'very-hard'\r\n        case 'unique':\r\n            return 'incredibly-hard'\r\n        default:\r\n            return 'normal'\r\n    }\r\n}\r\n\r\nfunction adjustDCByRarity(dc, rarity = 'common') {\r\n    return adjustDC(dc, rarityToDCAdjustment(rarity))\r\n}\r\n\r\nfunction calculateDC(level, { proficiencyWithoutLevel, rarity = 'common' } = {}) {\r\n    const pwlSetting = game.settings.get('pf2e', 'proficiencyVariant')\r\n    proficiencyWithoutLevel ??= pwlSetting === 'ProficiencyWithoutLevel'\r\n\r\n    const dc = dcByLevel.get(level) ?? 14\r\n    if (proficiencyWithoutLevel) {\r\n        return adjustDCByRarity(dc - Math.max(level, 0), rarity)\r\n    } else {\r\n        return adjustDCByRarity(dc, rarity)\r\n    }\r\n}\r\n\r\nfunction getDcRarity(item) {\r\n    return item.traits.has('cursed') ? 'unique' : item.rarity\r\n}\r\n\r\nfunction getMagicTraditions(item) {\r\n    const traits = item.system.traits.value\r\n    return new Set(traits.filter(t => setHasElement(MAGIC_TRADITIONS, t)))\r\n}\r\n\r\nfunction getIdentifyMagicDCs(item, baseDC, notMatchingTraditionModifier) {\r\n    const result = {\r\n        occult: baseDC,\r\n        primal: baseDC,\r\n        divine: baseDC,\r\n        arcane: baseDC,\r\n    }\r\n    const traditions = getMagicTraditions(item)\r\n    for (const key of MAGIC_TRADITIONS) {\r\n        if (traditions.size > 0 && !traditions.has(key)) {\r\n            result[key] = baseDC + notMatchingTraditionModifier\r\n        }\r\n    }\r\n    return { arcana: result.arcane, nature: result.primal, religion: result.divine, occultism: result.occult }\r\n}\r\n\r\nfunction getItemIdentificationDCs(item, { proficiencyWithoutLevel = false, notMatchingTraditionModifier }) {\r\n    const baseDC = calculateDC(item.level, { proficiencyWithoutLevel })\r\n    const rarity = getDcRarity(item)\r\n    const dc = adjustDCByRarity(baseDC, rarity)\r\n    if (item.isMagical) {\r\n        return getIdentifyMagicDCs(item, dc, notMatchingTraditionModifier)\r\n    } else if (item.isAlchemical) {\r\n        return { crafting: dc }\r\n    } else {\r\n        return { dc: dc }\r\n    }\r\n}\r\n\r\nfunction objectHasKey(obj, key) {\r\n    return (typeof key === 'string' || typeof key === 'number') && key in obj\r\n}\r\n\r\nfunction setHasElement(set, value) {\r\n    return set.has(value)\r\n}\r\n\r\nexport class IdentifyItemPopup extends FormApplication {\r\n    static get defaultOptions() {\r\n        return {\r\n            ...super.defaultOptions,\r\n            id: 'identify-item',\r\n            title: game.i18n.localize('PF2E.identification.Identify'),\r\n            template: 'systems/pf2e/templates/actors/identify-item.hbs',\r\n            width: 'auto',\r\n            classes: ['identify-popup'],\r\n        }\r\n    }\r\n\r\n    get item() {\r\n        return this.object\r\n    }\r\n\r\n    async getData() {\r\n        const item = this.object\r\n        const notMatchingTraditionModifier = game.settings.get('pf2e', 'identifyMagicNotMatchingTraditionModifier')\r\n        const proficiencyWithoutLevel = game.settings.get('pf2e', 'proficiencyVariant') === 'ProficiencyWithoutLevel'\r\n        const dcs = getItemIdentificationDCs(item, { proficiencyWithoutLevel, notMatchingTraditionModifier })\r\n\r\n        return {\r\n            ...(await super.getData()),\r\n            isMagic: item.isMagical,\r\n            isAlchemical: item.isAlchemical,\r\n            dcs,\r\n        }\r\n    }\r\n\r\n    activateListeners($form) {\r\n        $form.find('button.update-identification').on('click', event => {\r\n            const $button = $(event.delegateTarget)\r\n            this.submit({ updateData: { status: $button.val() } })\r\n        })\r\n        $form.find('button.post-skill-checks').on('click', async () => {\r\n            const item = this.item\r\n            const itemImg = item.system.identification.unidentified.img\r\n            const itemName = item.system.identification.unidentified.name\r\n            const identifiedName = item.system.identification.identified.name\r\n            const skills = $('div#identify-item')\r\n                .find('tr')\r\n                .toArray()\r\n                .flatMap(row => {\r\n                    const slug = row.dataset.skill\r\n                    const dc = Number(row.dataset.dc)\r\n                    if (!(Number.isInteger(dc) && objectHasKey(CONFIG.PF2E.skillList, slug))) {\r\n                        return []\r\n                    }\r\n                    const name = game.i18n.localize(CONFIG.PF2E.skillList[slug])\r\n\r\n                    return { slug, name, dc }\r\n                })\r\n\r\n            const actionOption = item.isMagical ? 'action:identify-magic' : item.isAlchemical ? 'action:identify-alchemy' : null\r\n\r\n            const content = await renderTemplate('systems/pf2e/templates/actors/identify-item-chat-skill-checks.hbs', {\r\n                itemImg,\r\n                itemName,\r\n                identifiedName,\r\n                // We don't want to install remeda just for that so we do our own thing\r\n                // rollOptions: R.compact(['concentrate', 'exploration', 'secret', actionOption]),\r\n                rollOptions: ['concentrate', 'exploration', 'secret', actionOption].filter(Boolean),\r\n                skills,\r\n            })\r\n\r\n            await CONFIG.ChatMessage.documentClass.create({ user: game.user.id, content })\r\n        })\r\n    }\r\n\r\n    async _updateObject(_event, formData) {\r\n        const status = formData['status']\r\n        if (status === 'identified') {\r\n            await this.item.setIdentificationStatus(status)\r\n        }\r\n    }\r\n}\r\n", "import { localize, MODULE_ID, templatePath } from './module.js'\r\n\r\nexport async function popup(title, content) {\r\n    const hud = $(`#${MODULE_ID}`)\r\n    if (!hud.length) return\r\n\r\n    hud.find('.popup').remove()\r\n\r\n    const tmp = document.createElement('div')\r\n    tmp.innerHTML = await renderTemplate(templatePath('popup'), { title, close: localize('popup.close') })\r\n\r\n    const popup = tmp.firstElementChild\r\n    popup.append(content)\r\n\r\n    popup.querySelector('[data-action=close-popup]').addEventListener('click', () => popup.remove())\r\n\r\n    hud.append(popup)\r\n}\r\n", "import { localize } from './module.js'\r\n\r\nexport async function getItemSummary(el, actor) {\r\n    const dataset = el.data()\r\n    const item = dataset.itemId ? actor.items.get(dataset.itemId) : await fromUuid(dataset.uuid)\r\n    const data = await item?.getChatData({}, dataset)\r\n    if (!data) return\r\n\r\n    const description = document.createElement('div')\r\n    description.classList.add('description')\r\n\r\n    await actor.sheet.itemRenderer.renderItemSummary(description, item, data)\r\n\r\n    return description\r\n}\r\n\r\nexport function addNameTooltipListeners(el) {\r\n    el.on('mouseenter', event => {\r\n        event.preventDefault()\r\n\r\n        const target = event.currentTarget.querySelector('.name')\r\n        if (target.scrollWidth <= target.clientWidth) return\r\n\r\n        const name = target.innerHTML.trim()\r\n        game.tooltip.activate(event.currentTarget, { text: name })\r\n    })\r\n\r\n    el.on('mouseleave', event => {\r\n        event.preventDefault()\r\n        game.tooltip.deactivate()\r\n    })\r\n\r\n    el.on('mousedown', event => {\r\n        game.tooltip.deactivate()\r\n    })\r\n}\r\n\r\nexport function editItem(event, actor) {\r\n    event.preventDefault()\r\n    const item = getItemFromEvent(event, actor)\r\n    item?.sheet.render(true, { focus: true })\r\n}\r\n\r\nexport async function deleteItem(event, actor) {\r\n    event.preventDefault()\r\n\r\n    const item = getItemFromEvent(event, actor)\r\n    if (!item) return\r\n\r\n    if (event.ctrlKey) return item.delete()\r\n\r\n    new Dialog({\r\n        title: localize('deleteItem.title'),\r\n        content: await renderTemplate('systems/pf2e/templates/actors/delete-item-dialog.hbs', { name: item.name }),\r\n        buttons: {\r\n            ok: {\r\n                icon: '<i class=\"fa-solid fa-trash\"></i>',\r\n                label: localize('deleteItem.ok'),\r\n                callback: () => item.delete(),\r\n            },\r\n            cancel: {\r\n                icon: '<i class=\"fas fa-times\"></i>',\r\n                label: localize('deleteItem.cancel'),\r\n            },\r\n        },\r\n    }).render(true)\r\n}\r\n\r\nexport function getItemFromEvent(event, actor) {\r\n    const { itemId } = event.currentTarget.closest('[data-item-id]').dataset\r\n    return actor.items.get(itemId)\r\n}\r\n", "import { localize, modifier, MODULE_ID } from './module.js'\r\nimport { popup } from './popup.js'\r\nimport { getItemSummary } from './shared.js'\r\n\r\nconst CROWBAR_UUIDS = new Set([\r\n    'Compendium.pf2e.equipment-srd.44F1mfJei4GY8f2X',\r\n    'Compendium.pf2e.equipment-srd.4kz3vhkKPUuXBpxk',\r\n])\r\nconst BON_MOT_UUID = 'Compendium.pf2e.feats-srd.0GF2j54roPFIDmXf'\r\n\r\nconst LABELS = {\r\n    initiative: 'PF2E.InitiativeLabel',\r\n    'recall-knowledge': 'PF2E.RecallKnowledge.Label',\r\n    'cover-tracks': 'PF2E.TravelSpeed.ExplorationActivities.CoverTracks',\r\n    earnIncome: `${MODULE_ID}.skills.actions.earnIncome`,\r\n    treatWounds: `${MODULE_ID}.skills.actions.treatWounds`,\r\n    'borrow-arcane-spell': `${MODULE_ID}.skills.actions.borrow-arcane-spell`,\r\n    'identify-magic': `${MODULE_ID}.skills.actions.identify-magic`,\r\n    'identify-alchemy': `${MODULE_ID}.skills.actions.identify-alchemy`,\r\n    'learn-spell': `${MODULE_ID}.skills.actions.learn-spell`,\r\n    'crafting-goods': `${MODULE_ID}.skills.actions.crafting-goods`,\r\n    'staging-performance': `${MODULE_ID}.skills.actions.staging-performance`,\r\n}\r\n\r\nconst ACTIONS_UUIDS = {\r\n    'sense-motive': 'Compendium.pf2e.actionspf2e.1xRFPTFtWtGJ9ELw',\r\n    seek: 'Compendium.pf2e.actionspf2e.BlAOM2X92SI6HMtJ',\r\n    balance: 'Compendium.pf2e.actionspf2e.M76ycLAqHoAgbcej',\r\n    escape: 'Compendium.pf2e.actionspf2e.SkZAQRkLLkmBQNB9',\r\n    'tumble-through': 'Compendium.pf2e.actionspf2e.21WIfSu7Xd7uKqV8',\r\n    'maneuver-in-flight': 'Compendium.pf2e.actionspf2e.Qf1ylAbdVi1rkc8M',\r\n    squeeze: 'Compendium.pf2e.actionspf2e.kMcV8e5EZUxa6evt',\r\n    'recall-knowledge': 'Compendium.pf2e.actionspf2e.1OagaWtBpVXExToo',\r\n    'borrow-arcane-spell': 'Compendium.pf2e.actionspf2e.OizxuPb44g3eHPFh',\r\n    'decipher-writing': 'Compendium.pf2e.actionspf2e.d9gbpiQjChYDYA2L',\r\n    'identify-magic': 'Compendium.pf2e.actionspf2e.eReSHVEPCsdkSL4G',\r\n    'learn-spell': 'Compendium.pf2e.actionspf2e.Q5iIYCFdqJFM31GW',\r\n    climb: 'Compendium.pf2e.actionspf2e.pprgrYQ1QnIDGZiy',\r\n    forceOpen: 'Compendium.pf2e.actionspf2e.SjmKHgI7a5Z9JzBx',\r\n    grapple: 'Compendium.pf2e.actionspf2e.PMbdMWc2QroouFGD',\r\n    highJump: 'Compendium.pf2e.actionspf2e.2HJ4yuEFY1Cast4h',\r\n    longJump: 'Compendium.pf2e.actionspf2e.JUvAvruz7yRQXfz2',\r\n    shove: 'Compendium.pf2e.actionspf2e.7blmbDrQFNfdT731',\r\n    swim: 'Compendium.pf2e.actionspf2e.c8TGiZ48ygoSPofx',\r\n    trip: 'Compendium.pf2e.actionspf2e.ge56Lu1xXVFYUnLP',\r\n    disarm: 'Compendium.pf2e.actionspf2e.Dt6B1slsBy8ipJu9',\r\n    repair: 'Compendium.pf2e.actionspf2e.bT3skovyLUtP22ME',\r\n    craft: 'Compendium.pf2e.actionspf2e.rmwa3OyhTZ2i2AHl',\r\n    'crafting-goods': '',\r\n    earnIncome: 'Compendium.pf2e.actionspf2e.QyzlsLrqM0EEwd7j',\r\n    'identify-alchemy': 'Compendium.pf2e.actionspf2e.Q4kdWVOf2ztIBFg1',\r\n    createADiversion: 'Compendium.pf2e.actionspf2e.GkmbTGfg8KcgynOA',\r\n    impersonate: 'Compendium.pf2e.actionspf2e.AJstokjdG6iDjVjE',\r\n    lie: 'Compendium.pf2e.actionspf2e.ewwCglB7XOPLUz72',\r\n    feint: 'Compendium.pf2e.actionspf2e.QNAVeNKtHA0EUw4X',\r\n    bonMot: BON_MOT_UUID,\r\n    gatherInformation: 'Compendium.pf2e.actionspf2e.plBGdZhqq5JBl1D8',\r\n    makeAnImpression: 'Compendium.pf2e.actionspf2e.OX4fy22hQgUHDr0q',\r\n    request: 'Compendium.pf2e.actionspf2e.DCb62iCBrJXy0Ik6',\r\n    coerce: 'Compendium.pf2e.actionspf2e.tHCqgwjtQtzNqVvd',\r\n    demoralize: 'Compendium.pf2e.actionspf2e.2u915NdUyQan6uKF',\r\n    'administer-first-aid': 'Compendium.pf2e.actionspf2e.MHLuKy4nQO2Z4Am1',\r\n    'treat-disease': 'Compendium.pf2e.actionspf2e.TC7OcDa7JlWbqMaN',\r\n    'treat-poison': 'Compendium.pf2e.actionspf2e.KjoCEEmPGTeFE4hh',\r\n    treatWounds: 'Compendium.pf2e.actionspf2e.1kGNdIIhuglAjIp9',\r\n    'command-an-animal': 'Compendium.pf2e.actionspf2e.q9nbyIF0PEBqMtYe',\r\n    perform: 'Compendium.pf2e.actionspf2e.EEDElIyin4z60PXx',\r\n    'staging-performance': '',\r\n    subsist: 'Compendium.pf2e.actionspf2e.49y9Ec4bDii8pcD3',\r\n    'create-forgery': 'Compendium.pf2e.actionspf2e.ftG89SjTSa9DYDOD',\r\n    'conceal-an-object': 'Compendium.pf2e.actionspf2e.qVNVSmsgpKFGk9hV',\r\n    hide: 'Compendium.pf2e.actionspf2e.XMcnh4cSI32tljXa',\r\n    sneak: 'Compendium.pf2e.actionspf2e.VMozDqMMuK5kpoX4',\r\n    senseDirection: 'Compendium.pf2e.actionspf2e.fJImDBQfqfjKJOhk',\r\n    'cover-tracks': 'Compendium.pf2e.actionspf2e.SB7cMECVtE06kByk',\r\n    track: 'Compendium.pf2e.actionspf2e.EA5vuSgJfiHH7plD',\r\n    'palm-an-object': 'Compendium.pf2e.actionspf2e.ijZ0DDFpMkWqaShd',\r\n    steal: 'Compendium.pf2e.actionspf2e.RDXXE7wMrSPCLv5k',\r\n    'disable-device': 'Compendium.pf2e.actionspf2e.cYdz2grcOcRt4jk6',\r\n    'pick-a-lock': 'Compendium.pf2e.actionspf2e.2EE4aF4SZpYf0R6H',\r\n}\r\n\r\nconst DUPLICATE_SKILLS = {\r\n    escape: { slug: 'escape', cost: '1', type: 2, noSkill: true },\r\n    'recall-knowledge': { slug: 'recall-knowledge', cost: '1', secret: true },\r\n    'decipher-writing': { slug: 'decipher-writing', type: 2, trained: true },\r\n    'identify-magic': { slug: 'identify-magic', trained: true },\r\n    'learn-spell': { slug: 'learn-spell', trained: true },\r\n}\r\n\r\nconst SKILLS = [\r\n    {\r\n        slug: 'perception',\r\n        actions: [\r\n            {\r\n                slug: 'initiative',\r\n                custom: (actor, options) => actor.initiative.roll(options),\r\n                condition: () => game.combat,\r\n            },\r\n            { slug: 'sense-motive', cost: '1', type: 2 },\r\n            { slug: 'seek', cost: '1', type: 2 },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'acrobatics',\r\n        actions: [\r\n            { slug: 'balance', cost: '1', type: 2 },\r\n            'escape',\r\n            { slug: 'tumble-through', cost: '1', type: 2 },\r\n            { slug: 'maneuver-in-flight', cost: '1', type: 2, trained: true },\r\n            { slug: 'squeeze', type: 2, trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'arcana',\r\n        actions: [\r\n            'recall-knowledge',\r\n            { slug: 'borrow-arcane-spell', trained: true },\r\n            'decipher-writing',\r\n            'identify-magic',\r\n            'learn-spell',\r\n        ],\r\n    },\r\n    {\r\n        slug: 'athletics',\r\n        actions: [\r\n            { slug: 'climb', cost: '1', type: 1 },\r\n            'escape',\r\n            {\r\n                slug: 'forceOpen',\r\n                cost: '1',\r\n                type: 1,\r\n                map: true,\r\n                modifiers: [\r\n                    {\r\n                        condition: actor =>\r\n                            !actor.itemTypes.equipment.some(item => item.isHeld && CROWBAR_UUIDS.has(item.sourceId)),\r\n                        modifiers: [\r\n                            {\r\n                                slug: 'crowbar-missing',\r\n                                modifier: -2,\r\n                                type: 'circumstance',\r\n                            },\r\n                        ],\r\n                    },\r\n                ],\r\n            },\r\n            { slug: 'grapple', cost: '1', type: 1, map: true },\r\n            { slug: 'highJump', cost: '1', type: 1 },\r\n            { slug: 'longJump', cost: '1', type: 1 },\r\n            { slug: 'shove', cost: '1', type: 1, map: true },\r\n            { slug: 'swim', cost: '1', type: 1 },\r\n            { slug: 'trip', cost: '1', type: 2, map: true },\r\n            { slug: 'disarm', cost: '1', type: 1, map: true, trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'crafting',\r\n        actions: [\r\n            'recall-knowledge',\r\n            { slug: 'repair', type: 1 },\r\n            { slug: 'craft', type: 1, trained: true },\r\n            { slug: 'crafting-goods', trained: true },\r\n            { slug: 'earnIncome', type: 3, trained: true },\r\n            { slug: 'identify-alchemy', trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'deception',\r\n        actions: [\r\n            { slug: 'createADiversion', cost: '1', type: 1, variants: ['distracting-words', 'gesture', 'trick'] },\r\n            { slug: 'impersonate', type: 1 },\r\n            { slug: 'lie', type: 1 },\r\n            { slug: 'feint', cost: '1', type: 1, trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'diplomacy',\r\n        actions: [\r\n            {\r\n                slug: 'bonMot',\r\n                cost: '1',\r\n                type: 1,\r\n                condition: actor => actor.itemTypes.feat.some(feat => feat.getFlag('core', 'sourceId') === BON_MOT_UUID),\r\n            },\r\n            { slug: 'gatherInformation', type: 1 },\r\n            { slug: 'makeAnImpression', type: 1 },\r\n            { slug: 'request', cost: '1', type: 1 },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'intimidation',\r\n        actions: [\r\n            { slug: 'coerce', type: 2 },\r\n            { slug: 'demoralize', cost: '1', type: 2 },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'medicine',\r\n        actions: [\r\n            { slug: 'administer-first-aid', cost: '2', type: 2, variants: ['stabilize', 'stop-bleeding'] },\r\n            { slug: 'treat-disease', type: 2, trained: true },\r\n            { slug: 'treat-poison', cost: '1', type: 2, trained: true },\r\n            { slug: 'treatWounds', type: 1, trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'nature',\r\n        actions: [\r\n            { slug: 'command-an-animal', cost: '1', type: 2 }, //\r\n            'recall-knowledge',\r\n            'identify-magic',\r\n            'learn-spell',\r\n        ],\r\n    },\r\n    {\r\n        slug: 'occultism',\r\n        actions: [\r\n            'recall-knowledge', //\r\n            'decipher-writing',\r\n            'identify-magic',\r\n            'learn-spell',\r\n        ],\r\n    },\r\n    {\r\n        slug: 'performance',\r\n        actions: [\r\n            {\r\n                slug: 'perform',\r\n                cost: '1',\r\n                type: 1,\r\n                variants: [\r\n                    'acting',\r\n                    'comedy',\r\n                    'dance',\r\n                    'keyboards',\r\n                    'oratory',\r\n                    'percussion',\r\n                    'singing',\r\n                    'strings',\r\n                    'winds',\r\n                    'warning',\r\n                ],\r\n            },\r\n            { slug: 'staging-performance', trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'religion',\r\n        actions: [\r\n            'recall-knowledge', //\r\n            'decipher-writing',\r\n            'identify-magic',\r\n            'learn-spell',\r\n        ],\r\n    },\r\n    {\r\n        slug: 'society',\r\n        actions: [\r\n            'recall-knowledge', //\r\n            { slug: 'subsist', type: 2 },\r\n            { slug: 'create-forgery', type: 2, trained: true },\r\n            'decipher-writing',\r\n        ],\r\n    },\r\n    {\r\n        slug: 'stealth',\r\n        actions: [\r\n            { slug: 'conceal-an-object', cost: '1', type: 2 },\r\n            { slug: 'hide', cost: '1', type: 2 },\r\n            { slug: 'sneak', cost: '1', type: 2 },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'survival',\r\n        actions: [\r\n            { slug: 'senseDirection', type: 1 },\r\n            { slug: 'subsist', type: 2 },\r\n            { slug: 'cover-tracks', trained: true },\r\n            { slug: 'track', type: 1, trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'thievery',\r\n        actions: [\r\n            { slug: 'palm-an-object', cost: '1', type: 2 },\r\n            { slug: 'steal', cost: '1', type: 2 },\r\n            { slug: 'disable-device', cost: '2', type: 2, trained: true },\r\n            { slug: 'pick-a-lock', cost: '2', type: 2, trained: true },\r\n        ],\r\n    },\r\n]\r\n\r\nSKILLS.forEach(skill => {\r\n    skill.actions = skill.actions.map(action => (typeof action === 'string' ? DUPLICATE_SKILLS[action] : action))\r\n\r\n    const { slug, actions } = skill\r\n    for (let action of actions) {\r\n        const unslugged = action.slug.replace(/-(.)/g, (_, c) => c.toUpperCase()).capitalize()\r\n\r\n        action.skillSlug = slug\r\n        action.uuid = ACTIONS_UUIDS[action.slug]\r\n        action.label = LABELS[action.slug] ?? `PF2E.Actions.${unslugged}.Title`\r\n\r\n        if (action.variants) {\r\n            action.variants = action.variants.map(variant => ({\r\n                slug: variant,\r\n                label: `${MODULE_ID}.skills.actions.${variant}`,\r\n            }))\r\n        } else if (action.map) {\r\n            action.variants = [\r\n                { label: 'PF2E.Roll.Normal' },\r\n                { label: 'PF2E.MAPAbbreviationLabel', map: -5 },\r\n                { label: 'PF2E.MAPAbbreviationLabel', map: -10 },\r\n            ]\r\n        }\r\n\r\n        action.modifiers?.forEach(({ modifiers }) => {\r\n            modifiers.forEach(modifier => {\r\n                modifier.label = `${MODULE_ID}.skills.modifiers.${modifier.slug}`\r\n            })\r\n        })\r\n    }\r\n})\r\n\r\nconst SKILLS_SLUGS = SKILLS.map(skill => skill.slug)\r\n\r\nconst SKILLS_MAP = SKILLS.reduce((skills, { slug, actions }) => {\r\n    skills[slug] = {\r\n        slug,\r\n        actions: actions.reduce((actions, action) => {\r\n            actions[action.slug] = action\r\n            return actions\r\n        }, {}),\r\n    }\r\n    return skills\r\n}, {})\r\n\r\nexport const actionsUUIDS = new Set(Object.values(ACTIONS_UUIDS).filter(Boolean))\r\n\r\nexport async function getSkillsData(actor) {\r\n    const skills = []\r\n\r\n    for (let i = 0; i < SKILLS.length; i++) {\r\n        const { slug, actions } = SKILLS[i]\r\n        const { label, rank, mod } = getSkill(slug, actor)\r\n\r\n        skills[i] = {\r\n            slug,\r\n            label,\r\n            rank,\r\n            actions: actions.filter(action => !action.condition || action.condition(actor)),\r\n            modifier: modifier(mod),\r\n        }\r\n    }\r\n\r\n    const lores = Object.values(actor.skills)\r\n        .filter(skill => skill.lore)\r\n        .map(({ label, rank, mod, slug }) => ({\r\n            slug,\r\n            label,\r\n            rank,\r\n            modifier: modifier(mod),\r\n        }))\r\n\r\n    return { skills, lores }\r\n}\r\n\r\nfunction getSkill(slug, actor) {\r\n    return slug === 'perception' ? actor.perception : actor.skills[slug]\r\n}\r\n\r\nexport function addSkillsListeners(el, actor) {\r\n    el.find('[data-action=roll-skill]').on('click', event => {\r\n        event.preventDefault()\r\n        const { slug } = event.currentTarget.dataset\r\n        getSkill(slug, actor).roll({ event })\r\n    })\r\n\r\n    el.find('[data-action=roll-action]').on('click contextmenu', async event => {\r\n        event.preventDefault()\r\n        const target = $(event.currentTarget)\r\n        const { skillSlug, slug } = target.closest('.action').data()\r\n        const variant = event.type === 'contextmenu' ? await createVariantDialog(actor, skillSlug) : undefined\r\n        if (variant !== null) rollAction(event, actor, skillSlug, slug, target.data(), variant)\r\n    })\r\n\r\n    el.find('[data-action=action-description]').on('click', async event => {\r\n        event.preventDefault()\r\n        const action = $(event.currentTarget).closest('.action')\r\n        const description = await getItemSummary(action, actor)\r\n        if (description) popup(action.find('.name').children().html().trim(), description)\r\n    })\r\n}\r\n\r\nasync function createVariantDialog(actor, base) {\r\n    let content = '<p style=\"text-align: center; margin-block: 0 8px;\">'\r\n    content += `<strong>${localize('skills.variant.label')}</strong> <select>`\r\n\r\n    for (const slug of SKILLS_SLUGS) {\r\n        const selected = slug === base ? 'selected' : ''\r\n        content += `<option value=\"${slug}\" ${selected}>${getSkill(slug, actor).label}</option>`\r\n    }\r\n\r\n    content += '</select></p>'\r\n\r\n    return Dialog.prompt({\r\n        title: localize('skills.variant.title'),\r\n        label: localize('skills.variant.button'),\r\n        callback: html => html.find('select').val(),\r\n        rejectClose: false,\r\n        content,\r\n        options: { width: 280 },\r\n    })\r\n}\r\n\r\nfunction rollAction(event, actor, skillSlug, slug, { variant, map }, skill) {\r\n    const action = SKILLS_MAP[skillSlug].actions[slug]\r\n    const type = action.type\r\n\r\n    skill ??= action.noSkill ? undefined : skillSlug\r\n\r\n    const options = {\r\n        event,\r\n        actors: [actor],\r\n        variant,\r\n        rollMode: action.secret ? 'blindroll' : 'roll',\r\n    }\r\n\r\n    options.modifiers = []\r\n\r\n    if (action.modifiers) {\r\n        for (const { condition, modifiers } of action.modifiers) {\r\n            if (condition && !condition(actor)) continue\r\n            for (const modifier of modifiers) {\r\n                options.modifiers.push(new game.pf2e.Modifier(modifier))\r\n            }\r\n        }\r\n    }\r\n\r\n    if (action.custom) {\r\n        action.custom(actor, options)\r\n        return\r\n    } else if (!type) {\r\n        getSkill(skill, actor).roll(options)\r\n        return\r\n    }\r\n\r\n    // old actions\r\n    if (type === 1) {\r\n        options.skill = skill\r\n        if (map) options.modifiers.push(new game.pf2e.Modifier({ label: 'PF2E.MultipleAttackPenalty', modifier: map }))\r\n        game.pf2e.actions[slug](options)\r\n    }\r\n    // new actions\r\n    else if (type === 2) {\r\n        options.statistic = skill\r\n        if (map) options.multipleAttackPenalty = map / -5\r\n        game.pf2e.actions.get(slug).use(options)\r\n    }\r\n    // exception for old actions that only accept one actor argument\r\n    else if (type === 3) {\r\n        game.pf2e.actions[slug](actor)\r\n    }\r\n}\r\n", "import { getSetting } from './module.js'\r\nimport { getActionIcon, toggleWeaponTrait } from './pf2e.js'\r\nimport { popup } from './popup.js'\r\nimport { addNameTooltipListeners, getItemFromEvent, getItemSummary } from './shared.js'\r\nimport { actionsUUIDS } from './skills.js'\r\n\r\nconst SECTIONS_TYPES = {\r\n    action: { order: 0, label: 'PF2E.ActionsActionsHeader', actionLabel: 'PF2E.ActionTypeAction' },\r\n    reaction: { order: 1, label: 'PF2E.ActionTypeReaction', actionLabel: 'PF2E.ActionTypeReaction' },\r\n    free: { order: 2, label: 'PF2E.ActionTypeFree', actionLabel: 'PF2E.ActionTypeFree' },\r\n    passive: { order: 3, label: 'PF2E.ActionTypePassive', actionLabel: 'PF2E.ActionTypePassive' },\r\n}\r\n\r\nconst TOOLTIPS = {\r\n    delay: [500, 0],\r\n    position: 'top',\r\n    theme: 'crb-hover',\r\n}\r\n\r\nexport async function getActionsData(actor) {\r\n    const isCharacter = actor.isOfType('character')\r\n    const toggles = actor.synthetics.toggles.slice()\r\n    const heroActions = isCharacter ? getHeroActions(actor) : null\r\n    const sorting = getSetting('actions')\r\n    const actions = isCharacter ? getCharacterActions(actor) : getNpcActions(actor)\r\n\r\n    const strikes = await Promise.all(\r\n        actor.system.actions.map(async (strike, index) => ({\r\n            ...strike,\r\n            index,\r\n            damageFormula: await strike.damage?.({ getFormula: true }),\r\n            criticalFormula: await strike.critical?.({ getFormula: true }),\r\n        }))\r\n    )\r\n\r\n    let sections = {}\r\n\r\n    for (const action of actions) {\r\n        if (sorting !== 'split') {\r\n            sections.action ??= []\r\n            sections.action.push(action)\r\n        } else {\r\n            sections[action.type] ??= []\r\n            sections[action.type].push(action)\r\n        }\r\n    }\r\n\r\n    sections = Object.entries(sections).map(([type, actions]) => {\r\n        actions.forEach(action => {\r\n            action.img = getActionIcon(action.cost)\r\n            action.typeLabel = SECTIONS_TYPES[action.type].actionLabel\r\n        })\r\n\r\n        if (sorting !== 'type') {\r\n            actions.sort((a, b) => a.name.localeCompare(b.name))\r\n        } else {\r\n            actions.sort((a, b) => {\r\n                const orderA = SECTIONS_TYPES[a.type].order\r\n                const orderB = SECTIONS_TYPES[b.type].order\r\n                return orderA === orderB ? a.name.localeCompare(b.name) : orderA - orderB\r\n            })\r\n        }\r\n\r\n        return { type, actions, label: SECTIONS_TYPES[type].label }\r\n    })\r\n\r\n    if (sorting === 'split') sections.sort((a, b) => SECTIONS_TYPES[a.type].order - SECTIONS_TYPES[b.type].order)\r\n\r\n    if (toggles.length || strikes.length || sections.length || heroActions?.length)\r\n        return { toggles, strikes, sections, heroActions, damageTypes: CONFIG.PF2E.damageTypes }\r\n}\r\n\r\nexport function getActionsOptions(actor) {\r\n    if (getSetting('actions-colors')) return { classList: ['attack-damage-system-colors'] }\r\n}\r\n\r\nexport function addActionsListeners(el, actor) {\r\n    addNameTooltipListeners(el.find('.toggle'))\r\n    addNameTooltipListeners(el.find('.strike'))\r\n    addNameTooltipListeners(el.find('.action'))\r\n\r\n    el.find('[data-action=action-chat]').on('click', event => {\r\n        event.preventDefault()\r\n        const item = getItemFromEvent(event, actor)\r\n        item.toMessage(event, { create: true })\r\n    })\r\n\r\n    el.find('[data-action=action-description]').on('click', async event => {\r\n        event.preventDefault()\r\n        const action = $(event.currentTarget).closest('.action')\r\n        const description = await getItemSummary(action, actor)\r\n        if (description) popup(action.find('.name').html().trim(), description)\r\n    })\r\n\r\n    el.find('[data-action=toggle-roll-option], [data-action=set-suboption]').on('click', event => {\r\n        event.preventDefault()\r\n        const toggle = event.currentTarget.closest('.toggle')\r\n        const { domain, option, itemId } = toggle.dataset\r\n        const suboption = toggle.querySelector('select')?.value ?? null\r\n        actor.toggleRollOption(domain, option, itemId ?? null, toggle.querySelector('input').checked, suboption)\r\n    })\r\n\r\n    function getStrike(event) {\r\n        const { index } = event.currentTarget.closest('.strike').dataset\r\n        return actor.system.actions[index]\r\n    }\r\n\r\n    el.find('[data-action=strike-attack]').on('click', event => {\r\n        event.preventDefault()\r\n        const { index } = event.currentTarget.dataset\r\n        const strike = getStrike(event)\r\n        strike?.variants[index].roll({ event })\r\n    })\r\n\r\n    el.find('[data-action=strike-damage], [data-action=strike-critical]')\r\n        .on('click', event => {\r\n            event.preventDefault()\r\n            const { action } = event.currentTarget.dataset\r\n            const strike = getStrike(event)\r\n            strike?.[action === 'strike-damage' ? 'damage' : 'critical']({ event })\r\n        })\r\n        .tooltipster(TOOLTIPS)\r\n\r\n    el.find('[data-action=strike-auxiliary]').on('click', event => {\r\n        event.preventDefault()\r\n        if (event.currentTarget !== event.target) return\r\n\r\n        const strike = getStrike(event)\r\n        if (!strike) return\r\n\r\n        const { index } = event.currentTarget.dataset\r\n        const modular = event.currentTarget.querySelector('select')?.value ?? null\r\n\r\n        strike.auxiliaryActions?.[index]?.execute({ selection: modular })\r\n    })\r\n\r\n    el.find('[data-action=toggle-versatile]')\r\n        .on('click', event => {\r\n            event.preventDefault()\r\n\r\n            const weapon = getStrike(event)?.item\r\n            if (!weapon) return\r\n\r\n            const target = event.currentTarget\r\n            const { value } = target.dataset\r\n            const baseType = weapon?.system.damage.damageType ?? null\r\n            const selection = target.classList.contains('selected') || value === baseType ? null : value\r\n\r\n            toggleWeaponTrait({ trait: 'versatile', weapon, selection })\r\n        })\r\n        .tooltipster(TOOLTIPS)\r\n\r\n    el.find('[data-action=strike-ammo]').on('change', event => {\r\n        event.preventDefault()\r\n\r\n        const weapon = getStrike(event)?.item\r\n        if (!weapon) return\r\n\r\n        const ammo = actor.items.get(event.currentTarget.value)\r\n        weapon.update({ system: { selectedAmmoId: ammo?.id ?? null } })\r\n    })\r\n}\r\n\r\nfunction getHeroActions(actor) {\r\n    const heroActionsModule = game.modules.get('pf2e-hero-actions')\r\n    return heroActionsModule?.active ? heroActionsModule.api.getHeroActions(actor) : null\r\n}\r\n\r\nfunction getCharacterActions(actor) {\r\n    const actions = actor.itemTypes.action.filter(item => !actionsUUIDS.has(item.sourceId))\r\n    const feats = actor.itemTypes.feat.filter(item => item.actionCost)\r\n\r\n    return (\r\n        [...actions, ...feats]\r\n            // TODO maybe some day i will get back to this and give them their own place\r\n            .filter(actions => {\r\n                const traits = actions.system.traits.value\r\n                return !traits.includes('downtime') && !traits.includes('exploration')\r\n            })\r\n            .map(item => {\r\n                const actionCost = item.actionCost\r\n\r\n                return {\r\n                    id: item.id,\r\n                    type: actionCost?.type ?? 'free',\r\n                    cost: actionCost,\r\n                    name: item.name,\r\n                }\r\n            })\r\n    )\r\n}\r\n\r\nfunction getNpcActions(actor) {\r\n    return actor.itemTypes.action.map(item => {\r\n        const actionCost = item.actionCost\r\n        const actionType = actionCost?.type ?? 'passive'\r\n        const hasAura =\r\n            actionType === 'passive' &&\r\n            (item.system.traits.value.includes('aura') || !!item.system.rules.find(r => r.key === 'Aura'))\r\n\r\n        return {\r\n            id: item.id,\r\n            type: actionType,\r\n            cost: actionCost,\r\n            name: item.name,\r\n            hasDeathNote: item.system.deathNote,\r\n            hasAura,\r\n        }\r\n    })\r\n}\r\n", "import { MODULE_ID } from './module.js'\r\nimport { IdentifyItemPopup } from './pf2e.js'\r\nimport { addNameTooltipListeners, deleteItem, editItem, getItemFromEvent } from './shared.js'\r\n\r\nconst ITEMS_TYPES = {\r\n    weapon: { order: 0, label: 'PF2E.InventoryWeaponsHeader' },\r\n    armor: { order: 1, label: 'PF2E.InventoryArmorHeader' },\r\n    consumable: { order: 2, label: 'PF2E.InventoryConsumablesHeader' },\r\n    equipment: { order: 3, label: 'PF2E.InventoryEquipmentHeader' },\r\n    treasure: { order: 4, label: 'PF2E.InventoryTreasureHeader' },\r\n    backpack: { order: 5, label: 'PF2E.InventoryBackpackHeader' },\r\n}\r\n\r\nexport async function getItemsData(actor) {\r\n    const categories = {}\r\n\r\n    for (const item of actor.inventory.contents) {\r\n        categories[item.type] ??= []\r\n        categories[item.type].push(item)\r\n    }\r\n\r\n    return {\r\n        categories: Object.entries(categories)\r\n            .map(([type, items]) => {\r\n                items.sort((a, b) => a.name.localeCompare(b.name))\r\n                return { type, items, label: ITEMS_TYPES[type].label }\r\n            })\r\n            .sort((a, b) => ITEMS_TYPES[a.type].order - ITEMS_TYPES[b.type].order),\r\n    }\r\n}\r\n\r\nexport function addItemsListeners(el, actor) {\r\n    const item = el.find('.item')\r\n\r\n    addNameTooltipListeners(item)\r\n\r\n    item.on('dragstart', event => {\r\n        const target = event.target.closest('.item')\r\n        const { itemType, uuid } = target.dataset\r\n\r\n        const img = new Image()\r\n        img.src = target.querySelector('.item-img img').src\r\n        img.style.width = '32px'\r\n        img.style.height = '32px'\r\n        img.style.borderRadius = '4px'\r\n        img.style.position = 'absolute'\r\n        img.style.left = '-1000px'\r\n        document.body.append(img)\r\n\r\n        event.originalEvent.dataTransfer.setDragImage(img, 16, 16)\r\n        event.originalEvent.dataTransfer.setData(\r\n            'text/plain',\r\n            JSON.stringify({ type: 'Item', fromInventory: true, itemType, uuid })\r\n        )\r\n\r\n        target.addEventListener('dragend', () => img.remove(), { once: true })\r\n    })\r\n\r\n    el.find('.quantity input').on('change', event => {\r\n        getItemFromEvent(event, actor)?.update({ 'system.quantity': event.currentTarget.valueAsNumber })\r\n    })\r\n\r\n    el.find('[data-action=toggle-item-invest]').on('click', event => {\r\n        event.preventDefault()\r\n        const { itemId } = event.currentTarget.closest('.item').dataset\r\n        actor.toggleInvested(itemId)\r\n    })\r\n\r\n    el.find('[data-action=repair-item]').on('click', event => {\r\n        event.preventDefault()\r\n        const item = getItemFromEvent(event, actor)\r\n        if (item) game.pf2e.actions.repair({ item, actors: [actor] })\r\n    })\r\n\r\n    el.find('[data-action=toggle-identified]').on('click', event => {\r\n        event.preventDefault()\r\n        const item = getItemFromEvent(event, actor)\r\n        if (!item) return\r\n        if (item.isIdentified) item.setIdentificationStatus('unidentified')\r\n        else new IdentifyItemPopup(item).render(true)\r\n        // else item.setIdentificationStatus('identified')\r\n    })\r\n\r\n    el.find('[data-action=edit-item]').on('click', event => editItem(event, actor))\r\n\r\n    el.find('[data-action=delete-item]').on('click', event => deleteItem(event, actor))\r\n\r\n    el.find('[data-action=toggle-item-worn').tooltipster({\r\n        animation: null,\r\n        updateAnimation: null,\r\n        animationDuration: 0,\r\n        delay: [0, 0],\r\n        trigger: 'click',\r\n        contentAsHTML: true,\r\n        interactive: true,\r\n        arrow: false,\r\n        side: ['bottom', 'top'],\r\n        theme: 'crb-hover',\r\n        minWidth: 120,\r\n        content: '',\r\n        functionBefore: async function (tooltipster, { event, origin }) {\r\n            const item = getItemFromEvent(event, actor)\r\n            if (!item) return\r\n\r\n            const tmp = document.createElement('div')\r\n            tmp.innerHTML = await renderTemplate('systems/pf2e/templates/actors/partials/carry-type.hbs', { item })\r\n\r\n            const content = tmp.children[1]\r\n            $(content)\r\n                .find('[data-carry-type]')\r\n                .on('click', event => {\r\n                    const { carryType, handsHeld = 0, inSlot } = $(event.currentTarget).data()\r\n                    actor.adjustCarryType(item, carryType, handsHeld, inSlot)\r\n                    tooltipster.close()\r\n                })\r\n\r\n            tooltipster.content(content)\r\n        },\r\n    })\r\n}\r\n", "import { getSetting, MODULE_ID } from './module.js'\r\nimport { popup } from './popup.js'\r\nimport { addNameTooltipListeners, getItemSummary } from './shared.js'\r\n\r\nexport async function getSpellsData(actor) {\r\n    const focusPool = actor.system.resources.focus?.value ?? 0\r\n    const entries = actor.spellcasting.regular\r\n    const spells = []\r\n\r\n    for (const entry of entries) {\r\n        const entryId = entry.id\r\n        const data = await entry.getSheetData()\r\n        const isCharge = entry.system?.prepared?.value === 'charge'\r\n        const isStaff = getProperty(entry, 'flags.pf2e-staves.staveID') !== undefined\r\n        const charges = { value: getProperty(entry, 'flags.pf2e-staves.charges') ?? 0 }\r\n\r\n        for (const slot of data.levels) {\r\n            if (!slot.active.length || slot.uses?.max === 0) continue\r\n\r\n            const slotSpells = []\r\n            const actives = slot.active.filter(x => x && x.uses?.max !== 0)\r\n\r\n            for (let slotId = 0; slotId < actives.length; slotId++) {\r\n                const { spell, expended, virtual, uses, castLevel } = actives[slotId]\r\n\r\n                slotSpells.push({\r\n                    name: spell.name,\r\n                    img: spell.img,\r\n                    castLevel: castLevel ?? spell.level,\r\n                    slotId,\r\n                    entryId,\r\n                    itemId: spell.id,\r\n                    inputId: data.isInnate ? spell.id : data.id,\r\n                    inputPath: isCharge\r\n                        ? 'flags.pf2e-staves.charges'\r\n                        : data.isInnate\r\n                        ? 'system.location.uses.value'\r\n                        : `system.slots.slot${slot.level}.value`,\r\n                    isCharge,\r\n                    isVirtual: virtual,\r\n                    isInnate: data.isInnate,\r\n                    isCantrip: slot.isCantrip,\r\n                    isFocus: data.isFocusPool,\r\n                    isPrepared: data.isPrepared,\r\n                    isSpontaneous: data.isSpontaneous || data.isFlexible,\r\n                    slotLevel: slot.level,\r\n                    uses: uses ?? (isCharge ? charges : slot.uses),\r\n                    expended: expended ?? (data.isFocusPool && !slot.isCantrip ? focusPool <= 0 : false),\r\n                    action: spell.system.time.value,\r\n                    type: isCharge\r\n                        ? isStaff\r\n                            ? `${MODULE_ID}.spells.staff`\r\n                            : `${MODULE_ID}.spells.charges`\r\n                        : data.isInnate\r\n                        ? 'PF2E.PreparationTypeInnate'\r\n                        : data.isSpontaneous\r\n                        ? 'PF2E.PreparationTypeSpontaneous'\r\n                        : data.isFlexible\r\n                        ? 'PF2E.SpellFlexibleLabel'\r\n                        : data.isFocusPool\r\n                        ? 'PF2E.SpellFocusLabel'\r\n                        : 'PF2E.SpellPreparedLabel',\r\n                    order: isCharge\r\n                        ? 0\r\n                        : data.isPrepared\r\n                        ? 1\r\n                        : data.isFocusPool\r\n                        ? 2\r\n                        : data.isInnate\r\n                        ? 3\r\n                        : data.isSpontaneous\r\n                        ? 4\r\n                        : 5,\r\n                })\r\n            }\r\n\r\n            if (slotSpells.length) {\r\n                spells[slot.level] ??= []\r\n                spells[slot.level].push(...slotSpells)\r\n            }\r\n        }\r\n    }\r\n\r\n    if (spells.length) {\r\n        const sort = getSetting('spells')\r\n            ? (a, b) => (a.order === b.order ? a.name.localeCompare(b.name) : a.order - b.order)\r\n            : (a, b) => a.name.localeCompare(b.name)\r\n        spells.forEach(entry => entry.sort(sort))\r\n    }\r\n\r\n    const ritualData = await actor.spellcasting.ritual?.getSheetData()\r\n    const rituals = ritualData?.levels.flatMap((slot, slotId) =>\r\n        slot.active.map(({ spell }) => ({\r\n            name: spell.name,\r\n            img: spell.img,\r\n            slotId,\r\n            itemId: spell.id,\r\n            level: spell.level,\r\n            time: spell.system.time.value,\r\n        }))\r\n    )\r\n\r\n    if (spells.length || rituals?.length) return { spells, rituals }\r\n}\r\n\r\nexport function addSpellsListeners(el, actor) {\r\n    addNameTooltipListeners(el.find('.spell'))\r\n\r\n    el.find('[data-action=toggle-pips]').on('click contextmenu', event => {\r\n        event.preventDefault()\r\n        const change = event.type === 'click' ? 1 : -1\r\n        const points = (actor.system.resources.focus?.value ?? 0) + change\r\n        actor.update({ 'system.resources.focus.value': points })\r\n    })\r\n\r\n    el.find('[data-action=toggle-prepared]').on('click', event => {\r\n        event.preventDefault()\r\n        const { slotLevel, slotId, entryId, expended } = $(event.currentTarget).closest('.spell').data()\r\n        const collection = actor.spellcasting.collections.get(entryId)\r\n        collection?.setSlotExpendedState(slotLevel ?? 0, slotId ?? 0, expended !== true)\r\n    })\r\n\r\n    el.find('[data-action=cast-spell]').on('click', event => {\r\n        event.preventDefault()\r\n\r\n        const { slotLevel, slotId, entryId, itemId } = $(event.currentTarget).closest('.spell').data()\r\n        const collection = actor.spellcasting.collections.get(entryId, { strict: true })\r\n        if (!collection) return\r\n\r\n        const spell = collection.get(itemId, { strict: true })\r\n        if (!spell) return\r\n\r\n        collection.entry.cast(spell, { slot: slotId, level: slotLevel })\r\n    })\r\n\r\n    el.find('[data-action=spell-description]').on('click', async event => {\r\n        event.preventDefault()\r\n        const spell = $(event.currentTarget).closest('.spell')\r\n        const description = await getItemSummary(spell, actor)\r\n        if (description) popup(spell.find('.name').html().trim(), description)\r\n    })\r\n\r\n    el.find('[data-input-path]').on('change', async event => {\r\n        const { inputPath, entryId } = $(event.currentTarget).data()\r\n        const value = event.currentTarget.valueAsNumber\r\n        await actor.updateEmbeddedDocuments('Item', [{ _id: entryId, [inputPath]: value }])\r\n    })\r\n}\r\n", "import { addActionsListeners, getActionsData, getActionsOptions } from './actions.js'\r\nimport { addItemsListeners, getItemsData } from './items.js'\r\nimport { getSetting, localize, MODULE_ID, templatePath } from './module.js'\r\nimport { addSkillsListeners, getSkillsData } from './skills.js'\r\nimport { addSpellsListeners, getSpellsData } from './spells.js'\r\n\r\nconst COVER_UUID = 'Compendium.pf2e.other-effects.I9lfZUiCwMiGogVi'\r\n\r\nconst POSITIONS = {\r\n    left: ['left', 'right', 'top', 'bottom'],\r\n    right: ['right', 'left', 'top', 'bottom'],\r\n    top: ['top', 'bottom', 'left', 'right'],\r\n    bottom: ['bottom', 'top', 'left', 'right'],\r\n}\r\n\r\nconst SPEEDS = [\r\n    { type: 'land', icon: '<i class=\"fa-solid fa-shoe-prints\"></i>' },\r\n    { type: 'burrow', icon: '<i class=\"fa-solid fa-chevrons-down\"></i>' },\r\n    { type: 'climb', icon: '<i class=\"fa-solid fa-spider\"></i>' },\r\n    { type: 'fly', icon: '<i class=\"fa-solid fa-feather\"></i>' },\r\n    { type: 'swim', icon: '<i class=\"fa-solid fa-person-swimming\"></i>' },\r\n]\r\n\r\nconst SIDEBARS = {\r\n    actions: { getData: getActionsData, addListeners: addActionsListeners, getOptions: getActionsOptions },\r\n    items: { getData: getItemsData, addListeners: addItemsListeners },\r\n    spells: { getData: getSpellsData, addListeners: addSpellsListeners },\r\n    skills: { getData: getSkillsData, addListeners: addSkillsListeners },\r\n    extras: { getData: () => null, addListeners: () => {} },\r\n}\r\n\r\nexport class HUD extends Application {\r\n    #token = null\r\n    #lastToken = null\r\n    #delay = null\r\n    #hover = false\r\n    #closing = null\r\n    #mouseevent\r\n    #mousedown = false\r\n    #lock = false\r\n    #softLock = false\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.hoverToken = (token, hover) => {\r\n            if (\r\n                this.#mousedown ||\r\n                this.#lock ||\r\n                this.#softLock ||\r\n                !(token instanceof Token) ||\r\n                !token.isOwner ||\r\n                !token.actor?.isOfType('character', 'npc')\r\n            )\r\n                return\r\n\r\n            const transform = token.localTransform\r\n            const document = token.document\r\n            if (transform.tx !== document.x || transform.ty !== document.y) return\r\n\r\n            this.#hover = hover\r\n            if (hover && this.#token === token && this.rendered) return\r\n\r\n            if (hover) {\r\n                if (this.#token) delete this.#token.actor.apps[MODULE_ID]\r\n                this.#token = token\r\n                if (!this.#closing) return this.render()\r\n                clearTimeout(this.#closing)\r\n                this.#closing = null\r\n                this.render(true)\r\n            } else {\r\n                this.close()\r\n            }\r\n        }\r\n\r\n        this.#mouseevent = event => {\r\n            if (event.type === 'mouseup') {\r\n                this.#mousedown = false\r\n                return\r\n            }\r\n\r\n            const target = event.target\r\n            const el = this.element[0]\r\n\r\n            if (el) {\r\n                const popup = el.querySelector('.popup')\r\n                if (el.contains(target)) {\r\n                    if (popup && !popup.contains(target)) popup.remove()\r\n                    return\r\n                }\r\n                if (target.closest('.app') || target.closest('.tooltipster-base')) return\r\n                if (popup) return popup.remove()\r\n                this.close({ force: true })\r\n            }\r\n\r\n            this.#lock = false\r\n            this.#mousedown = true\r\n        }\r\n\r\n        this.forceClose = () => this.close({ force: true })\r\n\r\n        this.deleteToken = token => {\r\n            if (this.#token && token.id === this.#token.id) this.close({ force: true })\r\n        }\r\n\r\n        window.addEventListener('mousedown', this.#mouseevent)\r\n        window.addEventListener('mouseup', this.#mouseevent)\r\n    }\r\n\r\n    delete() {\r\n        this.close({ force: true })\r\n        window.removeEventListener('mousedown', this.#mouseevent)\r\n        window.removeEventListener('mouseup', this.#mouseevent)\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            popOut: false,\r\n            minimizable: false,\r\n            template: templatePath('hud'),\r\n        })\r\n    }\r\n\r\n    get token() {\r\n        return this.#token\r\n    }\r\n\r\n    get actor() {\r\n        return this.#token?.actor\r\n    }\r\n\r\n    get hasCover() {\r\n        return this.actor?.itemTypes.effect.find(effect => effect.flags.core?.sourceId === COVER_UUID)\r\n    }\r\n\r\n    getData() {\r\n        const token = this.#token\r\n        const actor = this.#token?.actor\r\n        if (!actor) return {}\r\n\r\n        const { attributes, saves } = actor\r\n        const { hp, sp, ac, shield, speed } = attributes\r\n\r\n        const speeds = SPEEDS.map(s => {\r\n            s.value = (s.type === 'land' ? speed.total : speed.otherSpeeds.find(o => o.type === s.type)?.total) ?? 0\r\n            return s\r\n        })\r\n\r\n        return {\r\n            tokenId: token.id,\r\n            name: token.document.name,\r\n            hp,\r\n            sp,\r\n            ac: ac.value,\r\n            shield,\r\n            hasCover: this.hasCover,\r\n            saves: {\r\n                fortitude: saves.fortitude.mod,\r\n                reflex: saves.reflex.mod,\r\n                will: saves.will.mod,\r\n            },\r\n            speeds,\r\n            languages: this.actor.system.traits?.languages?.value.join(', '),\r\n            hasSpells: actor.spellcasting.some(x => x.category !== 'items'),\r\n            hasItems: actor.inventory.size,\r\n        }\r\n    }\r\n\r\n    #close() {\r\n        this.#token = null\r\n        this.#hover = false\r\n        this.#lock = false\r\n        this.#softLock = false\r\n\r\n        if (this.#delay !== null) {\r\n            clearTimeout(this.#delay)\r\n            this.#delay = null\r\n        }\r\n\r\n        const states = Application.RENDER_STATES\r\n        this._state = states.CLOSING\r\n\r\n        let el = this.element\r\n        if (!el) return (this._state = states.CLOSED)\r\n        el.css({ minHeight: 0 })\r\n\r\n        for (let cls of this.constructor._getInheritanceChain()) {\r\n            Hooks.call(`close${cls.name}`, this, el)\r\n        }\r\n\r\n        el.remove()\r\n\r\n        this._element = null\r\n        this._state = states.CLOSED\r\n    }\r\n\r\n    close(options = {}) {\r\n        const states = Application.RENDER_STATES\r\n        if (!options.force && !this.#delay && ![states.RENDERED, states.ERROR].includes(this._state)) return\r\n\r\n        if (options.force) return this.#close(options)\r\n\r\n        this.#closing = setTimeout(() => {\r\n            this.#closing = null\r\n            if (this.#hover) return\r\n            this.#close(options)\r\n        })\r\n    }\r\n\r\n    async _render(force = false, options = {}) {\r\n        let sidebarType\r\n        let scrollTop\r\n\r\n        if (this.#lastToken === this.#token) {\r\n            const sidebar = this.element.find('.sidebar')[0]\r\n            if (sidebar) {\r\n                sidebarType = sidebar.dataset.type\r\n                scrollTop = sidebar.scrollTop\r\n            }\r\n        }\r\n\r\n        await super._render(force, options)\r\n\r\n        if (sidebarType) {\r\n            const sidebar = await this.#openSidebar(sidebarType)\r\n            if (scrollTop > 0) sidebar.scrollTop = scrollTop\r\n        }\r\n\r\n        this.#lastToken = this.#token\r\n    }\r\n\r\n    render(force) {\r\n        if (!this.#token?.actor || this.#mousedown) return\r\n\r\n        if (force) return super.render(true)\r\n\r\n        const delay = getSetting('delay')\r\n        if (!delay) super.render(true)\r\n        else this.#delay = setTimeout(() => super.render(true), delay)\r\n    }\r\n\r\n    _injectHTML(html) {\r\n        $('body').append(html)\r\n        this._element = html\r\n    }\r\n\r\n    setPosition() {\r\n        const token = this.#token\r\n        if (!token) return\r\n\r\n        const element = this.element[0]\r\n        const hud = element.getBoundingClientRect()\r\n        const scale = token.worldTransform.a\r\n        const targetCoords = canvas.clientCoordinatesFromCanvas(token.document._source)\r\n        const target = {\r\n            x: targetCoords.x,\r\n            y: targetCoords.y,\r\n            width: token.hitArea.width * scale,\r\n            height: token.hitArea.height * scale,\r\n            get right() {\r\n                return this.x + this.width\r\n            },\r\n            get bottom() {\r\n                return this.y + this.height\r\n            },\r\n        }\r\n\r\n        const positions = POSITIONS[getSetting('position')].slice()\r\n        let coords\r\n\r\n        while (positions.length && !coords) {\r\n            const position = positions.shift()\r\n\r\n            if (position === 'left') {\r\n                coords = {\r\n                    x: target.x - hud.width,\r\n                    y: postionFromTargetY(hud, target),\r\n                }\r\n                if (coords.x < 0) coords = undefined\r\n            } else if (position === 'right') {\r\n                coords = {\r\n                    x: target.right,\r\n                    y: postionFromTargetY(hud, target),\r\n                }\r\n                if (coords.x + hud.width > window.innerWidth) coords = undefined\r\n            } else if (position === 'top') {\r\n                coords = {\r\n                    x: postionFromTargetX(hud, target),\r\n                    y: target.y - hud.height,\r\n                }\r\n                if (coords.y < 0) coords = undefined\r\n            } else if (position === 'bottom') {\r\n                coords = {\r\n                    x: postionFromTargetX(hud, target),\r\n                    y: target.bottom,\r\n                }\r\n                if (coords.y + hud.height > window.innerHeight) coords = undefined\r\n            }\r\n        }\r\n\r\n        if (coords) {\r\n            element.style.left = `${coords.x}px`\r\n            element.style.top = `${coords.y}px`\r\n        }\r\n\r\n        return coords\r\n    }\r\n\r\n    activateListeners(html) {\r\n        const token = this.#token\r\n        const actor = token?.actor\r\n        if (!actor) return\r\n\r\n        actor.apps[MODULE_ID] = this\r\n\r\n        html.on('mouseenter', () => {\r\n            this.#hover = true\r\n            this.#softLock = true\r\n        })\r\n\r\n        html.on('mouseleave', () => {\r\n            this.#softLock = false\r\n            if (this.#lock) return\r\n            this.#hover = false\r\n            this.close()\r\n        })\r\n\r\n        html.on('dragover', () => {\r\n            html.css('opacity', 0.1)\r\n            html.css('pointerEvents', 'none')\r\n\r\n            window.addEventListener(\r\n                'dragend',\r\n                () => {\r\n                    html.css('opacity', 1)\r\n                    html.css('pointerEvents', '')\r\n                },\r\n                { once: true }\r\n            )\r\n        })\r\n\r\n        html.find('input').on('change', async event => {\r\n            const target = event.currentTarget\r\n            const value = target.valueAsNumber\r\n            const attr = target.name\r\n\r\n            target.blur()\r\n\r\n            if (attr !== 'shield.value') await actor.update({ [attr]: value })\r\n            else await actor.heldShield.update({ 'system.hp.value': value })\r\n        })\r\n\r\n        html.find('[data-action=raise-shield]').on('click', () => {\r\n            game.pf2e.actions.raiseAShield({ actors: [actor] })\r\n        })\r\n\r\n        html.find('[data-action=take-cover]').on('click', async () => {\r\n            const source = (await fromUuid(COVER_UUID)).toObject()\r\n            setProperty(source, 'flags.core.sourceId', COVER_UUID)\r\n\r\n            const hasCover = this.hasCover\r\n            if (this.hasCover) await hasCover.delete()\r\n            else await actor.createEmbeddedDocuments('Item', [source])\r\n        })\r\n\r\n        html.find('[data-action=roll-save]').on('click', event => {\r\n            const save = event.currentTarget.dataset.save\r\n            actor.saves[save].roll({ event })\r\n        })\r\n\r\n        html.find('.inner .footer [data-type]').on('click', this.#openSidebar.bind(this))\r\n    }\r\n\r\n    async #openSidebar(event) {\r\n        const actor = this.actor\r\n        const type = typeof event === 'string' ? event : event.currentTarget.dataset.type\r\n        const { getData, addListeners, getOptions } = SIDEBARS[type]\r\n        const data = await getData(actor)\r\n        const { classList = [] } = (getOptions && (await getOptions(actor))) || {}\r\n        if (!data) return ui.notifications.warn(localize(`${type}.empty`, { name: this.#token.name }))\r\n\r\n        data.isGM = game.user.isGM\r\n        data.isCharacter = actor.isOfType('character')\r\n\r\n        this.#lock = true\r\n\r\n        let element = this.element\r\n        element.find('.sidebar').remove()\r\n        element.find('.inner .footer [data-type]').removeClass('active')\r\n        element.find(`.inner .footer [data-type=${type}]`).addClass('active')\r\n        element = element[0]\r\n\r\n        const tmp = document.createElement('div')\r\n        tmp.innerHTML = await renderTemplate(templatePath(type), data)\r\n\r\n        const sidebar = tmp.firstElementChild\r\n        sidebar.classList.add('sidebar', ...classList)\r\n        if (!getSetting('scrollbar')) sidebar.classList.add('no-scrollbar')\r\n        sidebar.dataset.type = type\r\n        this.element.append(sidebar)\r\n\r\n        const rect = sidebar.getBoundingClientRect()\r\n        const target = element.getBoundingClientRect()\r\n\r\n        let left = target.x - rect.width\r\n        if (left < 0) left = target.right\r\n        // left -= target.x\r\n\r\n        const elPadding = parseInt(window.getComputedStyle(element).padding)\r\n        let top = postionFromTargetY(rect, target, elPadding)\r\n        // top -= target.y\r\n\r\n        sidebar.style.left = `${left}px`\r\n        sidebar.style.top = `${top}px`\r\n\r\n        addListeners($(sidebar), actor)\r\n\r\n        return sidebar\r\n    }\r\n}\r\n\r\nfunction postionFromTargetY(el, target, margin = 0) {\r\n    let y = target.y + target.height / 2 - el.height / 2\r\n    if (y + el.height > window.innerHeight) y = window.innerHeight - el.height - margin\r\n    if (y < 0) y = margin\r\n    return y\r\n}\r\n\r\nfunction postionFromTargetX(el, target) {\r\n    let x = target.x + target.width / 2 - el.width / 2\r\n    if (x + el.width > window.innerWidth) y = window.innerWidth - el.width\r\n    if (x < 0) x = 0\r\n    return x\r\n}\r\n", "import { HUD } from './hud.js'\r\nimport { getSetting, MODULE_ID } from './module.js'\r\n\r\nlet hud = null\r\n\r\nfunction registerSetting(name, type, defValue, extra = {}) {\r\n    game.settings.register(MODULE_ID, name, {\r\n        ...extra,\r\n        name: settingPath(name, 'name'),\r\n        hint: settingPath(name, 'hint'),\r\n        scope: 'client',\r\n        config: true,\r\n        type,\r\n        default: defValue,\r\n    })\r\n}\r\n\r\nHooks.once('setup', () => {\r\n    registerSetting('enabled', Boolean, true, { onChange: enableModule })\r\n\r\n    registerSetting('position', String, 'right', {\r\n        choices: {\r\n            left: settingPath('position', 'choices.left'),\r\n            right: settingPath('position', 'choices.right'),\r\n            top: settingPath('position', 'choices.top'),\r\n            bottom: settingPath('position', 'choices.bottom'),\r\n        },\r\n    })\r\n\r\n    registerSetting('delay', Number, 250, {\r\n        range: {\r\n            min: 0,\r\n            max: 2000,\r\n            step: 50,\r\n        },\r\n    })\r\n\r\n    registerSetting('scrollbar', Boolean, true)\r\n\r\n    registerSetting('actions', String, 'split', {\r\n        choices: {\r\n            name: settingPath('actions', 'choices.name'),\r\n            type: settingPath('actions', 'choices.type'),\r\n            split: settingPath('actions', 'choices.split'),\r\n        },\r\n    })\r\n\r\n    registerSetting('actions-colors', Boolean, true)\r\n\r\n    registerSetting('spells', Boolean, false)\r\n})\r\n\r\nHooks.once('ready', () => {\r\n    if (getSetting('enabled')) enableModule(true)\r\n})\r\n\r\nfunction settingPath(setting, key) {\r\n    return `${MODULE_ID}.settings.${setting}.${key}`\r\n}\r\n\r\nfunction enableModule(enabled) {\r\n    if (enabled && !hud) {\r\n        hud = new HUD()\r\n\r\n        Hooks.on('hoverToken', hud.hoverToken)\r\n        Hooks.on('deleteToken', hud.deleteToken)\r\n        Hooks.on('canvasPan', hud.forceClose)\r\n    } else if (!enabled && hud) {\r\n        Hooks.off('hoverToken', hud.hoverToken)\r\n        Hooks.off('deleteToken', hud.deleteToken)\r\n        Hooks.off('canvasPan', hud.forceClose)\r\n\r\n        hud.delete()\r\n        hud = null\r\n    }\r\n}\r\n"],
  "mappings": "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",
  "names": ["hud", "popup", "modifier", "actions", "actions", "item", "event", "document", "popup", "hud", "y"]
}
