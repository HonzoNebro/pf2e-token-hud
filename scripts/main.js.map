{
  "version": 3,
  "sources": ["../src/module.js", "../src/pf2e.js", "../src/popup.js", "../src/shared.js", "../src/skills.js", "../src/actions.js", "../src/extras.js", "../src/items.js", "../src/spells.js", "../src/hud.js", "../src/main.js"],
  "sourcesContent": ["export const MODULE_ID = 'pf2e-token-hud'\r\n\r\nexport function getSetting(setting) {\r\n    return game.settings.get(MODULE_ID, setting)\r\n}\r\n\r\nexport function localize(...args) {\r\n    const data = args.at(-1)\r\n    const useFormat = typeof data === 'object'\r\n\r\n    const keys = useFormat ? args.slice(0, -1) : args\r\n    keys.unshift(MODULE_ID)\r\n\r\n    return game.i18n[useFormat ? 'format' : 'localize'](keys.join('.'), data)\r\n}\r\n\r\nexport function templatePath(template) {\r\n    return `modules/${MODULE_ID}/templates/${template}.hbs`\r\n}\r\n\r\nexport function modifier(mod) {\r\n    return mod >= 0 ? `+${mod}` : mod\r\n}\r\n\r\nexport function getFlag(doc, flag) {\r\n    return doc.getFlag(MODULE_ID, flag)\r\n}\r\n\r\nexport function setFlag(doc, flag, value) {\r\n    return doc.setFlag(MODULE_ID, flag, value)\r\n}\r\n", "/**\r\n * Those are directly copied from the PF2e system because they are not accesible to us in the global\r\n */\r\n\r\nconst dcAdjustments = new Map([\r\n    ['incredibly-easy', -10],\r\n    ['very-easy', -5],\r\n    ['easy', -2],\r\n    ['normal', 0],\r\n    ['hard', 2],\r\n    ['very-hard', 5],\r\n    ['incredibly-hard', 10],\r\n])\r\n\r\nconst dcByLevel = new Map([\r\n    [-1, 13],\r\n    [0, 14],\r\n    [1, 15],\r\n    [2, 16],\r\n    [3, 18],\r\n    [4, 19],\r\n    [5, 20],\r\n    [6, 22],\r\n    [7, 23],\r\n    [8, 24],\r\n    [9, 26],\r\n    [10, 27],\r\n    [11, 28],\r\n    [12, 30],\r\n    [13, 31],\r\n    [14, 32],\r\n    [15, 34],\r\n    [16, 35],\r\n    [17, 36],\r\n    [18, 38],\r\n    [19, 39],\r\n    [20, 40],\r\n    [21, 42],\r\n    [22, 44],\r\n    [23, 46],\r\n    [24, 48],\r\n    [25, 50],\r\n])\r\n\r\nconst MAGIC_TRADITIONS = new Set(['arcane', 'divine', 'occult', 'primal'])\r\n\r\nconst actionImgMap = {\r\n    0: 'systems/pf2e/icons/actions/FreeAction.webp',\r\n    free: 'systems/pf2e/icons/actions/FreeAction.webp',\r\n    1: 'systems/pf2e/icons/actions/OneAction.webp',\r\n    2: 'systems/pf2e/icons/actions/TwoActions.webp',\r\n    3: 'systems/pf2e/icons/actions/ThreeActions.webp',\r\n    '1 or 2': 'systems/pf2e/icons/actions/OneTwoActions.webp',\r\n    '1 to 3': 'systems/pf2e/icons/actions/OneThreeActions.webp',\r\n    '2 or 3': 'systems/pf2e/icons/actions/TwoThreeActions.webp',\r\n    reaction: 'systems/pf2e/icons/actions/Reaction.webp',\r\n    passive: 'systems/pf2e/icons/actions/Passive.webp',\r\n}\r\n\r\nconst actionGlyphMap = {\r\n    0: 'F',\r\n    free: 'F',\r\n    1: 'A',\r\n    2: 'D',\r\n    3: 'T',\r\n    '1 or 2': 'A/D',\r\n    '1 to 3': 'A - T',\r\n    '2 or 3': 'D/T',\r\n    reaction: 'R',\r\n}\r\n\r\nexport function getActionIcon(action, fallback = 'systems/pf2e/icons/actions/Empty.webp') {\r\n    if (action === null) return actionImgMap['passive']\r\n    const value = typeof action !== 'object' ? action : action.type === 'action' ? action.value : action.type\r\n    const sanitized = String(value ?? '')\r\n        .toLowerCase()\r\n        .trim()\r\n    return actionImgMap[sanitized] ?? fallback\r\n}\r\n\r\nexport function getActionGlyph(action) {\r\n    if (!action && action !== 0) return ''\r\n\r\n    const value = typeof action !== 'object' ? action : action.type === 'action' ? action.value : action.type\r\n    const sanitized = String(value ?? '')\r\n        .toLowerCase()\r\n        .trim()\r\n\r\n    return actionGlyphMap[sanitized] ?? ''\r\n}\r\n\r\nexport async function toggleWeaponTrait({ weapon, trait, selection }) {\r\n    const current = weapon.system.traits.toggles[trait].selection\r\n    if (current === selection) return false\r\n\r\n    const item = weapon.actor?.items.get(weapon.id)\r\n    if (item?.isOfType('weapon') && item === weapon) {\r\n        await item.update({ [`system.traits.toggles.${trait}.selection`]: selection })\r\n    } else if (item?.isOfType('weapon') && weapon.altUsageType === 'melee') {\r\n        await item.update({ [`system.meleeUsage.traitToggles.${trait}`]: selection })\r\n    } else {\r\n        const rule = item?.rules.find(r => r.key === 'Strike' && !r.ignored && r.slug === weapon.slug)\r\n        await rule?.toggleTrait({ trait, selection })\r\n    }\r\n\r\n    return true\r\n}\r\n\r\nfunction adjustDC(dc, adjustment = 'normal') {\r\n    return dc + (dcAdjustments.get(adjustment) ?? 0)\r\n}\r\n\r\nfunction rarityToDCAdjustment(rarity = 'common') {\r\n    switch (rarity) {\r\n        case 'uncommon':\r\n            return 'hard'\r\n        case 'rare':\r\n            return 'very-hard'\r\n        case 'unique':\r\n            return 'incredibly-hard'\r\n        default:\r\n            return 'normal'\r\n    }\r\n}\r\n\r\nfunction adjustDCByRarity(dc, rarity = 'common') {\r\n    return adjustDC(dc, rarityToDCAdjustment(rarity))\r\n}\r\n\r\nfunction calculateDC(level, { proficiencyWithoutLevel, rarity = 'common' } = {}) {\r\n    const pwlSetting = game.settings.get('pf2e', 'proficiencyVariant')\r\n    proficiencyWithoutLevel ??= pwlSetting === 'ProficiencyWithoutLevel'\r\n\r\n    const dc = dcByLevel.get(level) ?? 14\r\n    if (proficiencyWithoutLevel) {\r\n        return adjustDCByRarity(dc - Math.max(level, 0), rarity)\r\n    } else {\r\n        return adjustDCByRarity(dc, rarity)\r\n    }\r\n}\r\n\r\nfunction getDcRarity(item) {\r\n    return item.traits.has('cursed') ? 'unique' : item.rarity\r\n}\r\n\r\nfunction getMagicTraditions(item) {\r\n    const traits = item.system.traits.value\r\n    return new Set(traits.filter(t => setHasElement(MAGIC_TRADITIONS, t)))\r\n}\r\n\r\nfunction getIdentifyMagicDCs(item, baseDC, notMatchingTraditionModifier) {\r\n    const result = {\r\n        occult: baseDC,\r\n        primal: baseDC,\r\n        divine: baseDC,\r\n        arcane: baseDC,\r\n    }\r\n    const traditions = getMagicTraditions(item)\r\n    for (const key of MAGIC_TRADITIONS) {\r\n        if (traditions.size > 0 && !traditions.has(key)) {\r\n            result[key] = baseDC + notMatchingTraditionModifier\r\n        }\r\n    }\r\n    return { arcana: result.arcane, nature: result.primal, religion: result.divine, occultism: result.occult }\r\n}\r\n\r\nfunction getItemIdentificationDCs(item, { proficiencyWithoutLevel = false, notMatchingTraditionModifier }) {\r\n    const baseDC = calculateDC(item.level, { proficiencyWithoutLevel })\r\n    const rarity = getDcRarity(item)\r\n    const dc = adjustDCByRarity(baseDC, rarity)\r\n    if (item.isMagical) {\r\n        return getIdentifyMagicDCs(item, dc, notMatchingTraditionModifier)\r\n    } else if (item.isAlchemical) {\r\n        return { crafting: dc }\r\n    } else {\r\n        return { dc: dc }\r\n    }\r\n}\r\n\r\nfunction objectHasKey(obj, key) {\r\n    return (typeof key === 'string' || typeof key === 'number') && key in obj\r\n}\r\n\r\nfunction setHasElement(set, value) {\r\n    return set.has(value)\r\n}\r\n\r\nexport class IdentifyItemPopup extends FormApplication {\r\n    static get defaultOptions() {\r\n        return {\r\n            ...super.defaultOptions,\r\n            id: 'identify-item',\r\n            title: game.i18n.localize('PF2E.identification.Identify'),\r\n            template: 'systems/pf2e/templates/actors/identify-item.hbs',\r\n            width: 'auto',\r\n            classes: ['identify-popup'],\r\n        }\r\n    }\r\n\r\n    get item() {\r\n        return this.object\r\n    }\r\n\r\n    async getData() {\r\n        const item = this.object\r\n        const notMatchingTraditionModifier = game.settings.get('pf2e', 'identifyMagicNotMatchingTraditionModifier')\r\n        const proficiencyWithoutLevel = game.settings.get('pf2e', 'proficiencyVariant') === 'ProficiencyWithoutLevel'\r\n        const dcs = getItemIdentificationDCs(item, { proficiencyWithoutLevel, notMatchingTraditionModifier })\r\n\r\n        return {\r\n            ...(await super.getData()),\r\n            isMagic: item.isMagical,\r\n            isAlchemical: item.isAlchemical,\r\n            dcs,\r\n        }\r\n    }\r\n\r\n    activateListeners($form) {\r\n        $form.find('button.update-identification').on('click', event => {\r\n            const $button = $(event.delegateTarget)\r\n            this.submit({ updateData: { status: $button.val() } })\r\n        })\r\n        $form.find('button.post-skill-checks').on('click', async () => {\r\n            const item = this.item\r\n            const itemImg = item.system.identification.unidentified.img\r\n            const itemName = item.system.identification.unidentified.name\r\n            const identifiedName = item.system.identification.identified.name\r\n            const skills = $('div#identify-item')\r\n                .find('tr')\r\n                .toArray()\r\n                .flatMap(row => {\r\n                    const slug = row.dataset.skill\r\n                    const dc = Number(row.dataset.dc)\r\n                    if (!(Number.isInteger(dc) && objectHasKey(CONFIG.PF2E.skillList, slug))) {\r\n                        return []\r\n                    }\r\n                    const name = game.i18n.localize(CONFIG.PF2E.skillList[slug])\r\n\r\n                    return { slug, name, dc }\r\n                })\r\n\r\n            const actionOption = item.isMagical ? 'action:identify-magic' : item.isAlchemical ? 'action:identify-alchemy' : null\r\n\r\n            const content = await renderTemplate('systems/pf2e/templates/actors/identify-item-chat-skill-checks.hbs', {\r\n                itemImg,\r\n                itemName,\r\n                identifiedName,\r\n                // We don't want to install remeda just for that so we do our own thing\r\n                // rollOptions: R.compact(['concentrate', 'exploration', 'secret', actionOption]),\r\n                rollOptions: ['concentrate', 'exploration', 'secret', actionOption].filter(Boolean),\r\n                skills,\r\n            })\r\n\r\n            await CONFIG.ChatMessage.documentClass.create({ user: game.user.id, content })\r\n        })\r\n    }\r\n\r\n    async _updateObject(_event, formData) {\r\n        const status = formData['status']\r\n        if (status === 'identified') {\r\n            await this.item.setIdentificationStatus(status)\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * This one is used to create chat message for items directly picked from compendiums\r\n * So it is not technically a direct copy/paste of the system code but a slightly rearanged version\r\n */\r\nexport async function unownedItemToMessage(event, item, actor, { rollMode = undefined, create = true, data = {} }) {\r\n    const template = `systems/pf2e/templates/chat/${item.type}-card.hbs`\r\n    const token = actor.token\r\n    const nearestItem = event?.currentTarget.closest('.item') ?? {}\r\n    const ChatMessagePF2e = CONFIG.ChatMessage.documentClass\r\n\r\n    const contextualData = Object.keys(data).length > 0 ? data : nearestItem.dataset || {}\r\n    const templateData = {\r\n        actor: actor,\r\n        tokenId: token ? `${token.parent?.id}.${token.id}` : null,\r\n        item,\r\n        data: await item.getChatData(undefined, contextualData),\r\n    }\r\n\r\n    const chatData = {\r\n        speaker: ChatMessagePF2e.getSpeaker({\r\n            actor: actor,\r\n            token: actor.getActiveTokens(false, true)[0] ?? null,\r\n        }),\r\n        flags: {\r\n            core: {\r\n                canPopout: true,\r\n            },\r\n            pf2e: {\r\n                origin: { uuid: item.uuid, type: item.type },\r\n            },\r\n        },\r\n        type: CONST.CHAT_MESSAGE_TYPES.OTHER,\r\n    }\r\n\r\n    rollMode ??= event?.ctrlKey || event?.metaKey ? 'blindroll' : game.settings.get('core', 'rollMode')\r\n    if (['gmroll', 'blindroll'].includes(rollMode)) chatData.whisper = ChatMessagePF2e.getWhisperRecipients('GM').map(u => u.id)\r\n    if (rollMode === 'blindroll') chatData.blind = true\r\n\r\n    chatData.content = await renderTemplate(template, templateData)\r\n    return create ? ChatMessagePF2e.create(chatData, { renderSheet: false }) : new ChatMessagePF2e(chatData)\r\n}\r\n", "import { localize, MODULE_ID, templatePath } from './module.js'\r\n\r\nexport async function popup(title, content) {\r\n    const hud = $(`#${MODULE_ID}`)\r\n    if (!hud.length) return\r\n\r\n    hud.find('.popup').remove()\r\n\r\n    const tmp = document.createElement('div')\r\n    tmp.innerHTML = await renderTemplate(templatePath('popup'), { title, close: localize('popup.close') })\r\n\r\n    const popup = tmp.firstElementChild\r\n    if (typeof content === 'string') {\r\n        content = await TextEditor.enrichHTML(content, { async: true })\r\n        popup.insertAdjacentHTML('beforeend', content)\r\n    } else {\r\n        popup.append(content)\r\n    }\r\n\r\n    popup.querySelector('[data-action=close-popup]').addEventListener('click', () => popup.remove())\r\n\r\n    hud.append(popup)\r\n}\r\n", "import { localize } from './module.js'\r\n\r\nexport async function getItemSummary(el, actor) {\r\n    const dataset = el.data()\r\n    const item = dataset.itemId ? actor.items.get(dataset.itemId) : await fromUuid(dataset.uuid)\r\n    const data = await item?.getChatData({}, dataset)\r\n    if (!data) return\r\n\r\n    const description = document.createElement('div')\r\n    description.classList.add('description')\r\n\r\n    await actor.sheet.itemRenderer.renderItemSummary(description, item, data)\r\n\r\n    return description\r\n}\r\n\r\nexport function addNameTooltipListeners(el) {\r\n    el.on('mouseenter', event => {\r\n        event.preventDefault()\r\n\r\n        const target = event.currentTarget.querySelector('.name')\r\n        if (target.scrollWidth <= target.clientWidth) return\r\n\r\n        const name = target.innerHTML.trim()\r\n        game.tooltip.activate(event.currentTarget, { text: name })\r\n    })\r\n\r\n    el.on('mouseleave', event => {\r\n        event.preventDefault()\r\n        game.tooltip.deactivate()\r\n    })\r\n\r\n    el.on('mousedown', event => {\r\n        game.tooltip.deactivate()\r\n    })\r\n}\r\n\r\nexport function editItem(event, actor) {\r\n    event.preventDefault()\r\n    const item = getItemFromEvent(event, actor)\r\n    item?.sheet.render(true, { focus: true })\r\n}\r\n\r\nexport async function deleteItem(event, actor) {\r\n    event.preventDefault()\r\n\r\n    const item = getItemFromEvent(event, actor)\r\n    if (!item) return\r\n\r\n    if (event.ctrlKey) return item.delete()\r\n\r\n    new Dialog({\r\n        title: localize('deleteItem.title'),\r\n        content: await renderTemplate('systems/pf2e/templates/actors/delete-item-dialog.hbs', { name: item.name }),\r\n        buttons: {\r\n            ok: {\r\n                icon: '<i class=\"fa-solid fa-trash\"></i>',\r\n                label: localize('deleteItem.ok'),\r\n                callback: () => item.delete(),\r\n            },\r\n            cancel: {\r\n                icon: '<i class=\"fas fa-times\"></i>',\r\n                label: localize('deleteItem.cancel'),\r\n            },\r\n        },\r\n    }).render(true)\r\n}\r\n\r\nexport function getItemFromEvent(event, actor) {\r\n    const { itemId } = event.currentTarget.closest('[data-item-id]').dataset\r\n    return actor.items.get(itemId)\r\n}\r\n", "import { getSetting, localize, modifier, MODULE_ID } from './module.js'\r\nimport { unownedItemToMessage } from './pf2e.js'\r\nimport { popup } from './popup.js'\r\nimport { getItemSummary } from './shared.js'\r\n\r\nconst CROWBAR_UUIDS = new Set([\r\n    'Compendium.pf2e.equipment-srd.44F1mfJei4GY8f2X',\r\n    'Compendium.pf2e.equipment-srd.4kz3vhkKPUuXBpxk',\r\n])\r\nconst BON_MOT_UUID = 'Compendium.pf2e.feats-srd.0GF2j54roPFIDmXf'\r\n\r\nconst LABELS = {\r\n    initiative: 'PF2E.InitiativeLabel',\r\n    'recall-knowledge': 'PF2E.RecallKnowledge.Label',\r\n    'cover-tracks': 'PF2E.TravelSpeed.ExplorationActivities.CoverTracks',\r\n    earnIncome: `${MODULE_ID}.skills.actions.earnIncome`,\r\n    treatWounds: `${MODULE_ID}.skills.actions.treatWounds`,\r\n    'borrow-arcane-spell': `${MODULE_ID}.skills.actions.borrow-arcane-spell`,\r\n    'identify-magic': `${MODULE_ID}.skills.actions.identify-magic`,\r\n    'identify-alchemy': `${MODULE_ID}.skills.actions.identify-alchemy`,\r\n    'learn-spell': `${MODULE_ID}.skills.actions.learn-spell`,\r\n    'crafting-goods': `${MODULE_ID}.skills.actions.crafting-goods`,\r\n    'staging-performance': `${MODULE_ID}.skills.actions.staging-performance`,\r\n}\r\n\r\nconst ACTIONS_UUIDS = {\r\n    'sense-motive': 'Compendium.pf2e.actionspf2e.1xRFPTFtWtGJ9ELw',\r\n    seek: 'Compendium.pf2e.actionspf2e.BlAOM2X92SI6HMtJ',\r\n    balance: 'Compendium.pf2e.actionspf2e.M76ycLAqHoAgbcej',\r\n    escape: 'Compendium.pf2e.actionspf2e.SkZAQRkLLkmBQNB9',\r\n    'tumble-through': 'Compendium.pf2e.actionspf2e.21WIfSu7Xd7uKqV8',\r\n    'maneuver-in-flight': 'Compendium.pf2e.actionspf2e.Qf1ylAbdVi1rkc8M',\r\n    squeeze: 'Compendium.pf2e.actionspf2e.kMcV8e5EZUxa6evt',\r\n    'recall-knowledge': 'Compendium.pf2e.actionspf2e.1OagaWtBpVXExToo',\r\n    'borrow-arcane-spell': 'Compendium.pf2e.actionspf2e.OizxuPb44g3eHPFh',\r\n    'decipher-writing': 'Compendium.pf2e.actionspf2e.d9gbpiQjChYDYA2L',\r\n    'identify-magic': 'Compendium.pf2e.actionspf2e.eReSHVEPCsdkSL4G',\r\n    'learn-spell': 'Compendium.pf2e.actionspf2e.Q5iIYCFdqJFM31GW',\r\n    climb: 'Compendium.pf2e.actionspf2e.pprgrYQ1QnIDGZiy',\r\n    forceOpen: 'Compendium.pf2e.actionspf2e.SjmKHgI7a5Z9JzBx',\r\n    grapple: 'Compendium.pf2e.actionspf2e.PMbdMWc2QroouFGD',\r\n    highJump: 'Compendium.pf2e.actionspf2e.2HJ4yuEFY1Cast4h',\r\n    longJump: 'Compendium.pf2e.actionspf2e.JUvAvruz7yRQXfz2',\r\n    shove: 'Compendium.pf2e.actionspf2e.7blmbDrQFNfdT731',\r\n    swim: 'Compendium.pf2e.actionspf2e.c8TGiZ48ygoSPofx',\r\n    trip: 'Compendium.pf2e.actionspf2e.ge56Lu1xXVFYUnLP',\r\n    disarm: 'Compendium.pf2e.actionspf2e.Dt6B1slsBy8ipJu9',\r\n    repair: 'Compendium.pf2e.actionspf2e.bT3skovyLUtP22ME',\r\n    craft: 'Compendium.pf2e.actionspf2e.rmwa3OyhTZ2i2AHl',\r\n    'crafting-goods': '',\r\n    earnIncome: 'Compendium.pf2e.actionspf2e.QyzlsLrqM0EEwd7j',\r\n    'identify-alchemy': 'Compendium.pf2e.actionspf2e.Q4kdWVOf2ztIBFg1',\r\n    createADiversion: 'Compendium.pf2e.actionspf2e.GkmbTGfg8KcgynOA',\r\n    impersonate: 'Compendium.pf2e.actionspf2e.AJstokjdG6iDjVjE',\r\n    lie: 'Compendium.pf2e.actionspf2e.ewwCglB7XOPLUz72',\r\n    feint: 'Compendium.pf2e.actionspf2e.QNAVeNKtHA0EUw4X',\r\n    bonMot: BON_MOT_UUID,\r\n    gatherInformation: 'Compendium.pf2e.actionspf2e.plBGdZhqq5JBl1D8',\r\n    makeAnImpression: 'Compendium.pf2e.actionspf2e.OX4fy22hQgUHDr0q',\r\n    request: 'Compendium.pf2e.actionspf2e.DCb62iCBrJXy0Ik6',\r\n    coerce: 'Compendium.pf2e.actionspf2e.tHCqgwjtQtzNqVvd',\r\n    demoralize: 'Compendium.pf2e.actionspf2e.2u915NdUyQan6uKF',\r\n    'administer-first-aid': 'Compendium.pf2e.actionspf2e.MHLuKy4nQO2Z4Am1',\r\n    'treat-disease': 'Compendium.pf2e.actionspf2e.TC7OcDa7JlWbqMaN',\r\n    'treat-poison': 'Compendium.pf2e.actionspf2e.KjoCEEmPGTeFE4hh',\r\n    treatWounds: 'Compendium.pf2e.actionspf2e.1kGNdIIhuglAjIp9',\r\n    'command-an-animal': 'Compendium.pf2e.actionspf2e.q9nbyIF0PEBqMtYe',\r\n    perform: 'Compendium.pf2e.actionspf2e.EEDElIyin4z60PXx',\r\n    'staging-performance': '',\r\n    subsist: 'Compendium.pf2e.actionspf2e.49y9Ec4bDii8pcD3',\r\n    'create-forgery': 'Compendium.pf2e.actionspf2e.ftG89SjTSa9DYDOD',\r\n    'conceal-an-object': 'Compendium.pf2e.actionspf2e.qVNVSmsgpKFGk9hV',\r\n    hide: 'Compendium.pf2e.actionspf2e.XMcnh4cSI32tljXa',\r\n    sneak: 'Compendium.pf2e.actionspf2e.VMozDqMMuK5kpoX4',\r\n    senseDirection: 'Compendium.pf2e.actionspf2e.fJImDBQfqfjKJOhk',\r\n    'cover-tracks': 'Compendium.pf2e.actionspf2e.SB7cMECVtE06kByk',\r\n    track: 'Compendium.pf2e.actionspf2e.EA5vuSgJfiHH7plD',\r\n    'palm-an-object': 'Compendium.pf2e.actionspf2e.ijZ0DDFpMkWqaShd',\r\n    steal: 'Compendium.pf2e.actionspf2e.RDXXE7wMrSPCLv5k',\r\n    'disable-device': 'Compendium.pf2e.actionspf2e.cYdz2grcOcRt4jk6',\r\n    'pick-a-lock': 'Compendium.pf2e.actionspf2e.2EE4aF4SZpYf0R6H',\r\n}\r\n\r\nconst DUPLICATE_SKILLS = {\r\n    escape: { slug: 'escape', cost: '1', type: 2, noSkill: true },\r\n    'recall-knowledge': { slug: 'recall-knowledge', cost: '1', secret: true },\r\n    'decipher-writing': { slug: 'decipher-writing', type: 2, trained: true },\r\n    'identify-magic': { slug: 'identify-magic', trained: true },\r\n    'learn-spell': { slug: 'learn-spell', trained: true },\r\n}\r\n\r\nconst SKILLS = [\r\n    {\r\n        slug: 'perception',\r\n        actions: [\r\n            { slug: 'sense-motive', cost: '1', type: 2 },\r\n            { slug: 'seek', cost: '1', type: 2 },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'acrobatics',\r\n        actions: [\r\n            { slug: 'balance', cost: '1', type: 2 },\r\n            // 'escape',\r\n            { slug: 'tumble-through', cost: '1', type: 2 },\r\n            { slug: 'maneuver-in-flight', cost: '1', type: 2, trained: true },\r\n            { slug: 'squeeze', type: 2, trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'arcana',\r\n        actions: [\r\n            'recall-knowledge',\r\n            { slug: 'borrow-arcane-spell', trained: true },\r\n            'decipher-writing',\r\n            'identify-magic',\r\n            'learn-spell',\r\n        ],\r\n    },\r\n    {\r\n        slug: 'athletics',\r\n        actions: [\r\n            { slug: 'climb', cost: '1', type: 1 },\r\n            // 'escape',\r\n            {\r\n                slug: 'forceOpen',\r\n                cost: '1',\r\n                type: 1,\r\n                map: true,\r\n                modifiers: [\r\n                    {\r\n                        condition: actor =>\r\n                            !actor.itemTypes.equipment.some(item => item.isHeld && CROWBAR_UUIDS.has(item.sourceId)),\r\n                        modifiers: [\r\n                            {\r\n                                slug: 'crowbar-missing',\r\n                                modifier: -2,\r\n                                type: 'circumstance',\r\n                            },\r\n                        ],\r\n                    },\r\n                ],\r\n            },\r\n            { slug: 'grapple', cost: '1', type: 1, map: true },\r\n            { slug: 'highJump', cost: '1', type: 1 },\r\n            { slug: 'longJump', cost: '1', type: 1 },\r\n            { slug: 'shove', cost: '1', type: 1, map: true },\r\n            { slug: 'swim', cost: '1', type: 1 },\r\n            { slug: 'trip', cost: '1', type: 2, map: true },\r\n            { slug: 'disarm', cost: '1', type: 1, map: true, trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'crafting',\r\n        actions: [\r\n            'recall-knowledge',\r\n            { slug: 'repair', type: 1 },\r\n            { slug: 'craft', type: 1, trained: true },\r\n            { slug: 'crafting-goods', trained: true },\r\n            { slug: 'earnIncome', type: 3, trained: true },\r\n            { slug: 'identify-alchemy', trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'deception',\r\n        actions: [\r\n            { slug: 'createADiversion', cost: '1', type: 1, variants: ['distracting-words', 'gesture', 'trick'] },\r\n            { slug: 'impersonate', type: 1 },\r\n            { slug: 'lie', type: 1 },\r\n            { slug: 'feint', cost: '1', type: 1, trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'diplomacy',\r\n        actions: [\r\n            {\r\n                slug: 'bonMot',\r\n                cost: '1',\r\n                type: 1,\r\n                condition: actor => actor.itemTypes.feat.some(feat => feat.getFlag('core', 'sourceId') === BON_MOT_UUID),\r\n            },\r\n            { slug: 'gatherInformation', type: 1 },\r\n            { slug: 'makeAnImpression', type: 1 },\r\n            { slug: 'request', cost: '1', type: 1 },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'intimidation',\r\n        actions: [\r\n            { slug: 'coerce', type: 2 },\r\n            { slug: 'demoralize', cost: '1', type: 2 },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'medicine',\r\n        actions: [\r\n            { slug: 'administer-first-aid', cost: '2', type: 2, variants: ['stabilize', 'stop-bleeding'] },\r\n            { slug: 'treat-disease', type: 2, trained: true },\r\n            { slug: 'treat-poison', cost: '1', type: 2, trained: true },\r\n            { slug: 'treatWounds', type: 1, trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'nature',\r\n        actions: [\r\n            { slug: 'command-an-animal', cost: '1', type: 2 }, //\r\n            'recall-knowledge',\r\n            'identify-magic',\r\n            'learn-spell',\r\n        ],\r\n    },\r\n    {\r\n        slug: 'occultism',\r\n        actions: [\r\n            'recall-knowledge', //\r\n            'decipher-writing',\r\n            'identify-magic',\r\n            'learn-spell',\r\n        ],\r\n    },\r\n    {\r\n        slug: 'performance',\r\n        actions: [\r\n            {\r\n                slug: 'perform',\r\n                cost: '1',\r\n                type: 1,\r\n                variants: [\r\n                    'acting',\r\n                    'comedy',\r\n                    'dance',\r\n                    'keyboards',\r\n                    'oratory',\r\n                    'percussion',\r\n                    'singing',\r\n                    'strings',\r\n                    'winds',\r\n                    'warning',\r\n                ],\r\n            },\r\n            { slug: 'staging-performance', trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'religion',\r\n        actions: [\r\n            'recall-knowledge', //\r\n            'decipher-writing',\r\n            'identify-magic',\r\n            'learn-spell',\r\n        ],\r\n    },\r\n    {\r\n        slug: 'society',\r\n        actions: [\r\n            'recall-knowledge', //\r\n            { slug: 'subsist', type: 2 },\r\n            { slug: 'create-forgery', type: 2, trained: true },\r\n            'decipher-writing',\r\n        ],\r\n    },\r\n    {\r\n        slug: 'stealth',\r\n        actions: [\r\n            { slug: 'conceal-an-object', cost: '1', type: 2 },\r\n            { slug: 'hide', cost: '1', type: 2 },\r\n            { slug: 'sneak', cost: '1', type: 2 },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'survival',\r\n        actions: [\r\n            { slug: 'senseDirection', type: 1 },\r\n            { slug: 'subsist', type: 2 },\r\n            { slug: 'cover-tracks', trained: true },\r\n            { slug: 'track', type: 1, trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'thievery',\r\n        actions: [\r\n            { slug: 'palm-an-object', cost: '1', type: 2 },\r\n            { slug: 'steal', cost: '1', type: 2 },\r\n            { slug: 'disable-device', cost: '2', type: 2, trained: true },\r\n            { slug: 'pick-a-lock', cost: '2', type: 2, trained: true },\r\n        ],\r\n    },\r\n]\r\n\r\nSKILLS.forEach(skill => {\r\n    skill.actions = skill.actions.map(action => (typeof action === 'string' ? DUPLICATE_SKILLS[action] : action))\r\n\r\n    const { slug, actions } = skill\r\n    for (let action of actions) {\r\n        const unslugged = action.slug.replace(/-(.)/g, (_, c) => c.toUpperCase()).capitalize()\r\n\r\n        action.skillSlug = slug\r\n        action.uuid = ACTIONS_UUIDS[action.slug]\r\n        action.label = LABELS[action.slug] ?? `PF2E.Actions.${unslugged}.Title`\r\n\r\n        if (action.variants) {\r\n            action.variants = action.variants.map(variant => ({\r\n                slug: variant,\r\n                label: `${MODULE_ID}.skills.actions.${variant}`,\r\n            }))\r\n        } else if (action.map) {\r\n            action.variants = [\r\n                { label: 'PF2E.Roll.Normal' },\r\n                { label: 'PF2E.MAPAbbreviationLabel', map: -5 },\r\n                { label: 'PF2E.MAPAbbreviationLabel', map: -10 },\r\n            ]\r\n        }\r\n\r\n        action.modifiers?.forEach(({ modifiers }) => {\r\n            modifiers.forEach(modifier => {\r\n                modifier.label = `${MODULE_ID}.skills.modifiers.${modifier.slug}`\r\n            })\r\n        })\r\n    }\r\n})\r\n\r\nexport const SKILLS_SLUGS = SKILLS.map(skill => skill.slug)\r\n\r\nconst SKILLS_MAP = SKILLS.reduce((skills, { slug, actions }) => {\r\n    skills[slug] = {\r\n        slug,\r\n        actions: actions.reduce((actions, action) => {\r\n            actions[action.slug] = action\r\n            return actions\r\n        }, {}),\r\n    }\r\n    return skills\r\n}, {})\r\n\r\nexport const actionsUUIDS = new Set(Object.values(ACTIONS_UUIDS).filter(Boolean))\r\n\r\nexport function getSkillLabel(slug) {\r\n    return game.i18n.localize(slug === 'perception' ? 'PF2E.PerceptionLabel' : CONFIG.PF2E.skillList[slug])\r\n}\r\n\r\nexport async function getSkillsData(actor) {\r\n    const skills = []\r\n    const noUntrained = !getSetting('untrained')\r\n    const notCharacter = !actor.isOfType('character')\r\n\r\n    for (let i = 0; i < SKILLS.length; i++) {\r\n        const { slug, actions } = SKILLS[i]\r\n        const { label, rank, mod } = getSkill(slug, actor)\r\n\r\n        skills[i] = {\r\n            slug,\r\n            label,\r\n            rank,\r\n            modifier: modifier(mod),\r\n            actions: actions.filter(\r\n                action =>\r\n                    (noUntrained || notCharacter || !action.trained || actor.skills[slug].rank >= 1) &&\r\n                    (!action.condition || action.condition(actor))\r\n            ),\r\n        }\r\n    }\r\n\r\n    const lores = Object.values(actor.skills)\r\n        .filter(skill => skill.lore)\r\n        .map(({ label, rank, mod, slug }) => ({\r\n            slug,\r\n            label,\r\n            rank,\r\n            modifier: modifier(mod),\r\n        }))\r\n\r\n    return { skills, lores, doubled: getSetting('skills-columns') }\r\n}\r\n\r\nfunction getSkill(slug, actor) {\r\n    return slug === 'perception' ? actor.perception : actor.skills[slug]\r\n}\r\n\r\nexport function addSkillsListeners(el, actor) {\r\n    el.find('[data-action=roll-skill]').on('click', event => {\r\n        event.preventDefault()\r\n        const { slug } = event.currentTarget.dataset\r\n        getSkill(slug, actor).roll({ event })\r\n    })\r\n\r\n    el.find('[data-action=roll-action]').on('click contextmenu', async event => {\r\n        event.preventDefault()\r\n        const target = $(event.currentTarget)\r\n        const { skillSlug, slug } = target.closest('.action').data()\r\n        const variant = event.type === 'contextmenu' ? await createVariantDialog(skillSlug) : undefined\r\n        if (variant !== null) rollAction(event, actor, skillSlug, slug, target.data(), variant)\r\n    })\r\n\r\n    el.find('[data-action=action-description]').on('click', async event => {\r\n        event.preventDefault()\r\n        const action = $(event.currentTarget).closest('.action')\r\n        const description = await getItemSummary(action, actor)\r\n        if (description) popup(action.find('.name').children().html().trim(), description)\r\n    })\r\n\r\n    el.find('[data-action=action-chat]').on('click', async event => {\r\n        event.preventDefault()\r\n        const { uuid } = event.currentTarget.closest('.action').dataset\r\n        const item = await fromUuid(uuid)\r\n        if (item) unownedItemToMessage(event, item, actor, { create: true })\r\n    })\r\n}\r\n\r\nexport async function createVariantDialog(base) {\r\n    let content = '<p style=\"text-align: center; margin-block: 0 8px;\">'\r\n    content += `<strong>${localize('skills.variant.label')}</strong> <select>`\r\n\r\n    for (const slug of SKILLS_SLUGS) {\r\n        const selected = slug === base ? 'selected' : ''\r\n        const label = getSkillLabel(slug)\r\n        content += `<option value=\"${slug}\" ${selected}>${label}</option>`\r\n    }\r\n\r\n    content += '</select></p>'\r\n\r\n    return Dialog.prompt({\r\n        title: localize('skills.variant.title'),\r\n        label: localize('skills.variant.button'),\r\n        callback: html => html.find('select').val(),\r\n        rejectClose: false,\r\n        content,\r\n        options: { width: 280 },\r\n    })\r\n}\r\n\r\nfunction rollAction(event, actor, skillSlug, slug, { variant, map }, skill) {\r\n    const action = SKILLS_MAP[skillSlug].actions[slug]\r\n    const type = action.type\r\n\r\n    skill ??= action.noSkill ? undefined : skillSlug\r\n\r\n    const options = {\r\n        event,\r\n        actors: [actor],\r\n        variant,\r\n        rollMode: action.secret ? 'blindroll' : 'roll',\r\n    }\r\n\r\n    options.modifiers = []\r\n\r\n    if (action.modifiers) {\r\n        for (const { condition, modifiers } of action.modifiers) {\r\n            if (condition && !condition(actor)) continue\r\n            for (const modifier of modifiers) {\r\n                options.modifiers.push(new game.pf2e.Modifier(modifier))\r\n            }\r\n        }\r\n    }\r\n\r\n    if (action.custom) {\r\n        action.custom(actor, options)\r\n        return\r\n    } else if (!type) {\r\n        getSkill(skill, actor).roll(options)\r\n        return\r\n    }\r\n\r\n    // old actions\r\n    if (type === 1) {\r\n        options.skill = skill\r\n        if (map) options.modifiers.push(new game.pf2e.Modifier({ label: 'PF2E.MultipleAttackPenalty', modifier: map }))\r\n        game.pf2e.actions[slug](options)\r\n    }\r\n    // new actions\r\n    else if (type === 2) {\r\n        options.statistic = skill\r\n        if (map) options.multipleAttackPenalty = map / -5\r\n        game.pf2e.actions.get(slug).use(options)\r\n    }\r\n    // exception for old actions that only accept one actor argument\r\n    else if (type === 3) {\r\n        game.pf2e.actions[slug](actor)\r\n    }\r\n}\r\n", "import { getSetting } from './module.js'\r\nimport { getActionIcon, toggleWeaponTrait } from './pf2e.js'\r\nimport { popup } from './popup.js'\r\nimport { addNameTooltipListeners, getItemFromEvent, getItemSummary } from './shared.js'\r\nimport { actionsUUIDS } from './skills.js'\r\n\r\nconst SECTIONS_TYPES = {\r\n    action: { order: 0, label: 'PF2E.ActionsActionsHeader', actionLabel: 'PF2E.ActionTypeAction' },\r\n    reaction: { order: 1, label: 'PF2E.ActionTypeReaction', actionLabel: 'PF2E.ActionTypeReaction' },\r\n    free: { order: 2, label: 'PF2E.ActionTypeFree', actionLabel: 'PF2E.ActionTypeFree' },\r\n    passive: { order: 3, label: 'PF2E.ActionTypePassive', actionLabel: 'PF2E.ActionTypePassive' },\r\n}\r\n\r\nconst TOOLTIPS = {\r\n    delay: [500, 0],\r\n    position: 'top',\r\n    theme: 'crb-hover',\r\n    arrow: false,\r\n}\r\n\r\nexport async function getActionsData(actor) {\r\n    const isCharacter = actor.isOfType('character')\r\n    const toggles = actor.synthetics.toggles.slice()\r\n    const sorting = getSetting('actions')\r\n    const actions = isCharacter ? getCharacterActions(actor) : getNpcActions(actor)\r\n\r\n    let heroActions\r\n    const heroActionsModule = game.modules.get('pf2e-hero-actions')\r\n    if (heroActionsModule?.active && isCharacter) {\r\n        const actions = heroActionsModule.api.getHeroActions(actor)\r\n        const diff = actor.heroPoints.value - actions.length\r\n\r\n        heroActions = {\r\n            actions,\r\n            draw: Math.max(diff, 0),\r\n            discard: Math.abs(Math.min(diff, 0)),\r\n            canTrade: actions.length && game.settings.get('pf2e-hero-actions', 'trade'),\r\n        }\r\n    }\r\n\r\n    const strikes = await Promise.all(\r\n        actor.system.actions.map(async (strike, index) => ({\r\n            ...strike,\r\n            index,\r\n            damageFormula: await strike.damage?.({ getFormula: true }),\r\n            criticalFormula: await strike.critical?.({ getFormula: true }),\r\n        }))\r\n    )\r\n\r\n    let sections = {}\r\n\r\n    for (const action of actions) {\r\n        if (sorting !== 'split') {\r\n            sections.action ??= []\r\n            sections.action.push(action)\r\n        } else {\r\n            sections[action.type] ??= []\r\n            sections[action.type].push(action)\r\n        }\r\n    }\r\n\r\n    sections = Object.entries(sections).map(([type, actions]) => {\r\n        actions.forEach(action => {\r\n            action.img = getActionIcon(action.cost)\r\n            action.typeLabel = SECTIONS_TYPES[action.type].actionLabel\r\n        })\r\n\r\n        if (sorting !== 'type') {\r\n            actions.sort((a, b) => a.name.localeCompare(b.name))\r\n        } else {\r\n            actions.sort((a, b) => {\r\n                const orderA = SECTIONS_TYPES[a.type].order\r\n                const orderB = SECTIONS_TYPES[b.type].order\r\n                return orderA === orderB ? a.name.localeCompare(b.name) : orderA - orderB\r\n            })\r\n        }\r\n\r\n        return { type, actions, label: SECTIONS_TYPES[type].label }\r\n    })\r\n\r\n    if (sorting === 'split') sections.sort((a, b) => SECTIONS_TYPES[a.type].order - SECTIONS_TYPES[b.type].order)\r\n\r\n    if (toggles.length || strikes.length || sections.length || heroActions?.length)\r\n        return { toggles, strikes, sections, heroActions, damageTypes: CONFIG.PF2E.damageTypes }\r\n}\r\n\r\nexport function getActionsOptions(actor) {\r\n    if (getSetting('actions-colors')) return { classList: ['attack-damage-system-colors'] }\r\n}\r\n\r\nexport function addActionsListeners(el, actor) {\r\n    addNameTooltipListeners(el.find('.toggle'))\r\n    addNameTooltipListeners(el.find('.strike'))\r\n    addNameTooltipListeners(el.find('.action'))\r\n\r\n    function action(action, callback, type = 'click') {\r\n        action = typeof action === 'string' ? [action] : action\r\n        action = action.map(x => `[data-action=${x}]`).join(', ')\r\n        return el.find(action).on(type, event => {\r\n            event.preventDefault()\r\n            callback(event)\r\n        })\r\n    }\r\n\r\n    function getStrike(event) {\r\n        const { index } = event.currentTarget.closest('.strike').dataset\r\n        return actor.system.actions[index]\r\n    }\r\n\r\n    function getUuid(event) {\r\n        return $(event.currentTarget).closest('.action').data().uuid\r\n    }\r\n\r\n    action('action-chat', event => {\r\n        const item = getItemFromEvent(event, actor)\r\n        item?.toMessage(event, { create: true })\r\n    })\r\n\r\n    action('action-description', async event => {\r\n        const action = $(event.currentTarget).closest('.action')\r\n        const description = await getItemSummary(action, actor)\r\n        if (description) popup(action.find('.name').html().trim(), description)\r\n    })\r\n\r\n    action('hero-action-description', async event => {\r\n        const { description, name } = (await getHeroActionDescription(getUuid(event))) ?? {}\r\n        if (description) popup(name, description)\r\n    })\r\n\r\n    action('hero-action-chat', async event => {\r\n        await game.modules.get('pf2e-hero-actions')?.api.sendActionToChat(actor, getUuid(event))\r\n    })\r\n\r\n    action('draw-hero-action', async event => {\r\n        await game.modules.get('pf2e-hero-actions')?.api.drawHeroActions(actor)\r\n    })\r\n\r\n    action('use-hero-action', async event => {\r\n        await game.modules.get('pf2e-hero-actions')?.api.useHeroAction(actor, getUuid(event))\r\n    })\r\n\r\n    action('discard-hero-action', async event => {\r\n        await game.modules.get('pf2e-hero-actions')?.api.discardHeroActions(actor, getUuid(event))\r\n    })\r\n\r\n    action('trade-hero-action', async event => {\r\n        game.modules.get('pf2e-hero-actions')?.api.tradeHeroAction(actor)\r\n    })\r\n\r\n    action('strike-attack', event => {\r\n        const { index } = event.currentTarget.dataset\r\n        const strike = getStrike(event)\r\n        strike?.variants[index].roll({ event })\r\n    })\r\n\r\n    action(['toggle-roll-option', 'set-suboption'], event => {\r\n        const toggle = event.currentTarget.closest('.toggle')\r\n        const { domain, option, itemId } = toggle.dataset\r\n        const suboption = toggle.querySelector('select')?.value ?? null\r\n        actor.toggleRollOption(domain, option, itemId ?? null, toggle.querySelector('input').checked, suboption)\r\n    })\r\n\r\n    action(['strike-damage', 'strike-critical'], event => {\r\n        const { action } = event.currentTarget.dataset\r\n        const strike = getStrike(event)\r\n        strike?.[action === 'strike-damage' ? 'damage' : 'critical']({ event })\r\n    }).tooltipster(TOOLTIPS)\r\n\r\n    action('strike-auxiliary', event => {\r\n        if (event.currentTarget !== event.target) return\r\n\r\n        const strike = getStrike(event)\r\n        if (!strike) return\r\n\r\n        const { index } = event.currentTarget.dataset\r\n        const modular = event.currentTarget.querySelector('select')?.value ?? null\r\n\r\n        strike.auxiliaryActions?.[index]?.execute({ selection: modular })\r\n    })\r\n\r\n    action('toggle-versatile', event => {\r\n        const weapon = getStrike(event)?.item\r\n        if (!weapon) return\r\n\r\n        const target = event.currentTarget\r\n        const { value } = target.dataset\r\n        const baseType = weapon?.system.damage.damageType ?? null\r\n        const selection = target.classList.contains('selected') || value === baseType ? null : value\r\n\r\n        toggleWeaponTrait({ trait: 'versatile', weapon, selection })\r\n    }).tooltipster(TOOLTIPS)\r\n\r\n    action(\r\n        'strike-ammo',\r\n        async event => {\r\n            const weapon = getStrike(event)?.item\r\n            if (!weapon) return\r\n\r\n            const ammo = actor.items.get(event.currentTarget.value)\r\n            await weapon.update({ system: { selectedAmmoId: ammo?.id ?? null } })\r\n        },\r\n        'change'\r\n    )\r\n}\r\n\r\nfunction getHeroActionDescription(uuid) {\r\n    return game.modules.get('pf2e-hero-actions')?.api.getHeroActionDetails(uuid)\r\n}\r\n\r\nfunction getCharacterActions(actor) {\r\n    const actions = actor.itemTypes.action.filter(item => !actionsUUIDS.has(item.sourceId))\r\n    const feats = actor.itemTypes.feat.filter(item => item.actionCost)\r\n\r\n    return (\r\n        [...actions, ...feats]\r\n            // TODO maybe some day i will get back to this and give them their own place\r\n            .filter(actions => {\r\n                const traits = actions.system.traits.value\r\n                return !traits.includes('downtime') && !traits.includes('exploration')\r\n            })\r\n            .map(item => {\r\n                const actionCost = item.actionCost\r\n\r\n                return {\r\n                    id: item.id,\r\n                    type: actionCost?.type ?? 'free',\r\n                    cost: actionCost,\r\n                    name: item.name,\r\n                }\r\n            })\r\n    )\r\n}\r\n\r\nfunction getNpcActions(actor) {\r\n    return actor.itemTypes.action.map(item => {\r\n        const actionCost = item.actionCost\r\n        const actionType = actionCost?.type ?? 'passive'\r\n        const hasAura =\r\n            actionType === 'passive' &&\r\n            (item.system.traits.value.includes('aura') || !!item.system.rules.find(r => r.key === 'Aura'))\r\n\r\n        return {\r\n            id: item.id,\r\n            type: actionType,\r\n            cost: actionCost,\r\n            name: item.name,\r\n            hasDeathNote: item.system.deathNote,\r\n            hasAura,\r\n        }\r\n    })\r\n}\r\n", "import { createVariantDialog, getSkillLabel, SKILLS_SLUGS } from './skills.js'\r\n\r\nexport async function getExtrasData(actor) {\r\n    const { attributes } = actor\r\n    const { initiative } = attributes\r\n\r\n    return {\r\n        initiative: {\r\n            selected: initiative.statistic,\r\n            skills: SKILLS_SLUGS.map(slug => ({ slug, label: getSkillLabel(slug) })),\r\n        },\r\n        hasDailies: game.modules.get('pf2e-dailies').active,\r\n    }\r\n}\r\n\r\nexport function addExtrasListeners(el, actor) {\r\n    el.find('input[name], select[name]').on('change', async event => {\r\n        const target = event.currentTarget\r\n        const value = target.type === 'number' ? target.valueAsNumber : target.value\r\n        await actor.update({ [target.name]: value })\r\n    })\r\n\r\n    function action(action, callback, type = 'click') {\r\n        el.find(`[data-action=${action}]`).on(type, event => {\r\n            event.preventDefault()\r\n            callback(event)\r\n        })\r\n    }\r\n\r\n    action('roll-initiative', async event => {\r\n        await actor.initiative.roll({ event })\r\n    })\r\n\r\n    action('prepare-dailies', event => {\r\n        const dailies = game.modules.get('pf2e-dailies')\r\n        if (dailies.active) dailies.api.openDailiesInterface(actor)\r\n    })\r\n\r\n    action('rest-for-the-night', event => {\r\n        game.pf2e.actions.restForTheNight({ actors: [actor] })\r\n    })\r\n\r\n    action(\r\n        'roll-aid',\r\n        async event => {\r\n            const statistic = await createVariantDialog()\r\n            const note = { text: '@UUID[Compendium.pf2e.other-effects.AHMUpMbaVkZ5A1KX]' }\r\n            if (statistic !== null) game.pf2e.actions.get('aid').use({ event, actors: [actor], statistic, notes: [note] })\r\n        },\r\n        'click contextmenu'\r\n    )\r\n\r\n    action(\r\n        'roll-escape',\r\n        async event => {\r\n            const statistic = event.type === 'contextmenu' ? await createVariantDialog() : undefined\r\n            if (statistic !== null) game.pf2e.actions.get('escape').use({ event, actors: [actor], statistic })\r\n        },\r\n        'click contextmenu'\r\n    )\r\n}\r\n", "import { IdentifyItemPopup } from './pf2e.js'\r\nimport { addNameTooltipListeners, deleteItem, editItem, getItemFromEvent } from './shared.js'\r\n\r\nconst ITEMS_TYPES = {\r\n    weapon: { order: 0, label: 'PF2E.InventoryWeaponsHeader' },\r\n    armor: { order: 1, label: 'PF2E.InventoryArmorHeader' },\r\n    consumable: { order: 2, label: 'PF2E.InventoryConsumablesHeader' },\r\n    equipment: { order: 3, label: 'PF2E.InventoryEquipmentHeader' },\r\n    treasure: { order: 4, label: 'PF2E.InventoryTreasureHeader' },\r\n    backpack: { order: 5, label: 'PF2E.InventoryBackpackHeader' },\r\n}\r\n\r\nexport async function getItemsData(actor) {\r\n    const categories = {}\r\n\r\n    for (const item of actor.inventory.contents) {\r\n        categories[item.type] ??= []\r\n        categories[item.type].push(item)\r\n    }\r\n\r\n    return {\r\n        categories: Object.entries(categories)\r\n            .map(([type, items]) => {\r\n                items.sort((a, b) => a.name.localeCompare(b.name))\r\n                return { type, items, label: ITEMS_TYPES[type].label }\r\n            })\r\n            .sort((a, b) => ITEMS_TYPES[a.type].order - ITEMS_TYPES[b.type].order),\r\n    }\r\n}\r\n\r\nexport function addItemsListeners(el, actor) {\r\n    const item = el.find('.item')\r\n\r\n    addNameTooltipListeners(item)\r\n\r\n    item.on('dragstart', event => {\r\n        const target = event.target.closest('.item')\r\n        const { itemType, uuid } = target.dataset\r\n\r\n        const img = new Image()\r\n        img.src = target.querySelector('.item-img img').src\r\n        img.style.width = '32px'\r\n        img.style.height = '32px'\r\n        img.style.borderRadius = '4px'\r\n        img.style.position = 'absolute'\r\n        img.style.left = '-1000px'\r\n        document.body.append(img)\r\n\r\n        event.originalEvent.dataTransfer.setDragImage(img, 16, 16)\r\n        event.originalEvent.dataTransfer.setData(\r\n            'text/plain',\r\n            JSON.stringify({ type: 'Item', fromInventory: true, itemType, uuid })\r\n        )\r\n\r\n        target.addEventListener('dragend', () => img.remove(), { once: true })\r\n    })\r\n\r\n    el.find('.quantity input').on('change', async event => {\r\n        await getItemFromEvent(event, actor)?.update({ 'system.quantity': event.currentTarget.valueAsNumber })\r\n    })\r\n\r\n    el.find('[data-action=toggle-item-invest]').on('click', event => {\r\n        event.preventDefault()\r\n        const { itemId } = event.currentTarget.closest('.item').dataset\r\n        actor.toggleInvested(itemId)\r\n    })\r\n\r\n    el.find('[data-action=repair-item]').on('click', event => {\r\n        event.preventDefault()\r\n        const item = getItemFromEvent(event, actor)\r\n        if (item) game.pf2e.actions.repair({ item, actors: [actor] })\r\n    })\r\n\r\n    el.find('[data-action=toggle-identified]').on('click', event => {\r\n        event.preventDefault()\r\n        const item = getItemFromEvent(event, actor)\r\n        if (!item) return\r\n        if (item.isIdentified) item.setIdentificationStatus('unidentified')\r\n        else new IdentifyItemPopup(item).render(true)\r\n    })\r\n\r\n    el.find('[data-action=edit-item]').on('click', event => {\r\n        event.preventDefault()\r\n        editItem(event, actor)\r\n    })\r\n\r\n    el.find('[data-action=delete-item]').on('click', event => {\r\n        event.preventDefault()\r\n        deleteItem(event, actor)\r\n    })\r\n\r\n    el.find('[data-action=toggle-item-worn').tooltipster({\r\n        animation: null,\r\n        updateAnimation: null,\r\n        animationDuration: 0,\r\n        delay: [0, 0],\r\n        trigger: 'click',\r\n        contentAsHTML: true,\r\n        interactive: true,\r\n        arrow: false,\r\n        side: ['bottom', 'top'],\r\n        theme: 'crb-hover',\r\n        minWidth: 120,\r\n        content: '',\r\n        functionBefore: async function (tooltipster, { event, origin }) {\r\n            const item = getItemFromEvent(event, actor)\r\n            if (!item) return\r\n\r\n            const tmp = document.createElement('div')\r\n            tmp.innerHTML = await renderTemplate('systems/pf2e/templates/actors/partials/carry-type.hbs', { item })\r\n\r\n            const content = tmp.children[1]\r\n            $(content)\r\n                .find('[data-carry-type]')\r\n                .on('click', event => {\r\n                    const { carryType, handsHeld = 0, inSlot } = $(event.currentTarget).data()\r\n                    actor.adjustCarryType(item, carryType, handsHeld, inSlot)\r\n                    tooltipster.close()\r\n                })\r\n\r\n            tooltipster.content(content)\r\n        },\r\n    })\r\n}\r\n", "import { getSetting, MODULE_ID } from './module.js'\r\nimport { popup } from './popup.js'\r\nimport { addNameTooltipListeners, getItemSummary } from './shared.js'\r\n\r\nexport async function getSpellsData(actor) {\r\n    const focusPool = actor.system.resources.focus?.value ?? 0\r\n    const entries = actor.spellcasting.regular\r\n    const showTradition = getSetting('tradition')\r\n    const spells = []\r\n\r\n    for (const entry of entries) {\r\n        const entryId = entry.id\r\n        const tradition = showTradition && entry.statistic.label[0]\r\n        const data = await entry.getSheetData()\r\n        const isCharge = entry.system?.prepared?.value === 'charge'\r\n        const isStaff = getProperty(entry, 'flags.pf2e-staves.staveID') !== undefined\r\n        const charges = { value: getProperty(entry, 'flags.pf2e-staves.charges') ?? 0 }\r\n\r\n        for (const slot of data.levels) {\r\n            if (!slot.active.length || slot.uses?.max === 0) continue\r\n\r\n            const slotSpells = []\r\n            const actives = slot.active.filter(x => x && x.uses?.max !== 0)\r\n\r\n            for (let slotId = 0; slotId < actives.length; slotId++) {\r\n                const { spell, expended, virtual, uses, castLevel } = actives[slotId]\r\n\r\n                slotSpells.push({\r\n                    name: spell.name,\r\n                    img: spell.img,\r\n                    tradition,\r\n                    castLevel: castLevel ?? spell.level,\r\n                    slotId,\r\n                    entryId,\r\n                    itemId: spell.id,\r\n                    inputId: data.isInnate ? spell.id : data.id,\r\n                    inputPath: isCharge\r\n                        ? 'flags.pf2e-staves.charges'\r\n                        : data.isInnate\r\n                        ? 'system.location.uses.value'\r\n                        : `system.slots.slot${slot.level}.value`,\r\n                    isCharge,\r\n                    isVirtual: virtual,\r\n                    isInnate: data.isInnate,\r\n                    isCantrip: slot.isCantrip,\r\n                    isFocus: data.isFocusPool,\r\n                    isPrepared: data.isPrepared,\r\n                    isSpontaneous: data.isSpontaneous || data.isFlexible,\r\n                    slotLevel: slot.level,\r\n                    uses: uses ?? (isCharge ? charges : slot.uses),\r\n                    expended: expended ?? (data.isFocusPool && !slot.isCantrip ? focusPool <= 0 : false),\r\n                    action: spell.system.time.value,\r\n                    type: isCharge\r\n                        ? isStaff\r\n                            ? `${MODULE_ID}.spells.staff`\r\n                            : `${MODULE_ID}.spells.charges`\r\n                        : data.isInnate\r\n                        ? 'PF2E.PreparationTypeInnate'\r\n                        : data.isSpontaneous\r\n                        ? 'PF2E.PreparationTypeSpontaneous'\r\n                        : data.isFlexible\r\n                        ? 'PF2E.SpellFlexibleLabel'\r\n                        : data.isFocusPool\r\n                        ? 'PF2E.SpellFocusLabel'\r\n                        : 'PF2E.SpellPreparedLabel',\r\n                    order: isCharge\r\n                        ? 0\r\n                        : data.isPrepared\r\n                        ? 1\r\n                        : data.isFocusPool\r\n                        ? 2\r\n                        : data.isInnate\r\n                        ? 3\r\n                        : data.isSpontaneous\r\n                        ? 4\r\n                        : 5,\r\n                })\r\n            }\r\n\r\n            if (slotSpells.length) {\r\n                spells[slot.level] ??= []\r\n                spells[slot.level].push(...slotSpells)\r\n            }\r\n        }\r\n    }\r\n\r\n    if (spells.length) {\r\n        const sort = getSetting('spells')\r\n            ? (a, b) => (a.order === b.order ? a.name.localeCompare(b.name) : a.order - b.order)\r\n            : (a, b) => a.name.localeCompare(b.name)\r\n        spells.forEach(entry => entry.sort(sort))\r\n    }\r\n\r\n    const ritualData = await actor.spellcasting.ritual?.getSheetData()\r\n    const rituals = ritualData?.levels.flatMap((slot, slotId) =>\r\n        slot.active.map(({ spell }) => ({\r\n            name: spell.name,\r\n            img: spell.img,\r\n            slotId,\r\n            itemId: spell.id,\r\n            level: spell.level,\r\n            time: spell.system.time.value,\r\n        }))\r\n    )\r\n\r\n    if (spells.length || rituals?.length) return { spells, rituals, doubled: getSetting('spells-columns') }\r\n}\r\n\r\nexport function addSpellsListeners(el, actor) {\r\n    addNameTooltipListeners(el.find('.spell'))\r\n\r\n    el.find('[data-action=toggle-pips]').on('click contextmenu', async event => {\r\n        event.preventDefault()\r\n        const change = event.type === 'click' ? 1 : -1\r\n        const points = (actor.system.resources.focus?.value ?? 0) + change\r\n        await actor.update({ 'system.resources.focus.value': points })\r\n    })\r\n\r\n    el.find('[data-action=toggle-prepared]').on('click', event => {\r\n        event.preventDefault()\r\n        const { slotLevel, slotId, entryId, expended } = $(event.currentTarget).closest('.spell').data()\r\n        const collection = actor.spellcasting.collections.get(entryId)\r\n        collection?.setSlotExpendedState(slotLevel ?? 0, slotId ?? 0, expended !== true)\r\n    })\r\n\r\n    el.find('[data-action=cast-spell]').on('click', event => {\r\n        event.preventDefault()\r\n\r\n        const { slotLevel, slotId, entryId, itemId } = $(event.currentTarget).closest('.spell').data()\r\n        const collection = actor.spellcasting.collections.get(entryId, { strict: true })\r\n        if (!collection) return\r\n\r\n        const spell = collection.get(itemId, { strict: true })\r\n        if (!spell) return\r\n\r\n        collection.entry.cast(spell, { slot: slotId, level: slotLevel })\r\n    })\r\n\r\n    el.find('[data-action=spell-description]').on('click', async event => {\r\n        event.preventDefault()\r\n        const spell = $(event.currentTarget).closest('.spell')\r\n        const description = await getItemSummary(spell, actor)\r\n        if (description) popup(spell.find('.name').html().trim(), description)\r\n    })\r\n\r\n    el.find('[data-input-path]').on('change', async event => {\r\n        const { inputPath, entryId } = $(event.currentTarget).data()\r\n        const value = event.currentTarget.valueAsNumber\r\n        await actor.updateEmbeddedDocuments('Item', [{ _id: entryId, [inputPath]: value }])\r\n    })\r\n}\r\n", "import { addActionsListeners, getActionsData, getActionsOptions } from './actions.js'\r\nimport { addExtrasListeners, getExtrasData } from './extras.js'\r\nimport { addItemsListeners, getItemsData } from './items.js'\r\nimport { getFlag, getSetting, localize, MODULE_ID, setFlag, templatePath } from './module.js'\r\nimport { addSkillsListeners, getSkillsData } from './skills.js'\r\nimport { addSpellsListeners, getSpellsData } from './spells.js'\r\n\r\nconst COVER_UUID = 'Compendium.pf2e.other-effects.I9lfZUiCwMiGogVi'\r\nconst RESOLVE_UUID = 'Compendium.pf2e.feats-srd.jFmdevE4nKevovzo'\r\n\r\nconst POSITIONS = {\r\n    left: ['left', 'right', 'top', 'bottom'],\r\n    right: ['right', 'left', 'top', 'bottom'],\r\n    top: ['top', 'bottom', 'left', 'right'],\r\n    bottom: ['bottom', 'top', 'left', 'right'],\r\n}\r\n\r\nconst ALIGNMENTS = {\r\n    G: '<i class=\"fa-solid fa-face-smile-halo\"></i>',\r\n    N: '<i class=\"fa-solid fa-face-meh\"></i>',\r\n    E: '<i class=\"fa-solid fa-face-angry-horns\"></i>',\r\n}\r\n\r\nconst SPEEDS = [\r\n    { type: 'land', icon: 'fa-solid fa-shoe-prints' },\r\n    { type: 'burrow', icon: 'fa-solid fa-chevrons-down' },\r\n    { type: 'climb', icon: 'fa-solid fa-spider' },\r\n    { type: 'fly', icon: 'fa-solid fa-feather' },\r\n    { type: 'swim', icon: 'fa-solid fa-person-swimming' },\r\n]\r\n\r\nconst SIDEBARS = {\r\n    actions: { getData: getActionsData, addListeners: addActionsListeners, getOptions: getActionsOptions },\r\n    items: { getData: getItemsData, addListeners: addItemsListeners },\r\n    spells: { getData: getSpellsData, addListeners: addSpellsListeners },\r\n    skills: { getData: getSkillsData, addListeners: addSkillsListeners },\r\n    extras: { getData: getExtrasData, addListeners: addExtrasListeners },\r\n}\r\n\r\nexport class HUD extends Application {\r\n    #token = null\r\n    #lastToken = null\r\n    #delay = null\r\n    #hover = false\r\n    #closing = null\r\n    #mouseevent\r\n    #mousedown = [false, false, false]\r\n    #lock = false\r\n    #softLock = false\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.hoverToken = (token, hover) => {\r\n            if (\r\n                this.mousedown ||\r\n                this.#lock ||\r\n                this.#softLock ||\r\n                !(token instanceof Token) ||\r\n                !token.actor?.isOfType('character', 'npc')\r\n            )\r\n                return\r\n\r\n            const transform = token.localTransform\r\n            const document = token.document\r\n            if (transform.tx !== document.x || transform.ty !== document.y) return\r\n\r\n            this.#hover = hover\r\n            if (hover && this.#token === token && this.rendered) return\r\n\r\n            if (hover && !game.keyboard.downKeys.has('ControlLeft')) {\r\n                if (this.#token) delete this.#token.actor.apps[MODULE_ID]\r\n                this.#token = token\r\n                if (!this.#closing) return this.render()\r\n                clearTimeout(this.#closing)\r\n                this.#closing = null\r\n                this.render(true)\r\n            } else {\r\n                this.close()\r\n            }\r\n        }\r\n\r\n        this.#mouseevent = event => {\r\n            const button = event.button\r\n            if (![0, 2].includes(button)) return\r\n\r\n            if (event.type === 'mouseup') {\r\n                this.#mousedown[button] = false\r\n                return\r\n            }\r\n\r\n            this.#mousedown[button] = true\r\n\r\n            const target = event.target\r\n            const el = this.element[0]\r\n\r\n            if (el) {\r\n                const popup = el.querySelector('.popup')\r\n                if (el.contains(target)) {\r\n                    if (popup && !popup.contains(target)) popup.remove()\r\n                    return\r\n                }\r\n                if (target.closest('.app') || target.closest('.tooltipster-base')) return\r\n                if (popup) return popup.remove()\r\n                this.close({ force: true })\r\n            } else if (this.#delay) {\r\n                clearTimeout(this.#delay)\r\n                this.#delay = null\r\n            }\r\n\r\n            this.#lock = false\r\n        }\r\n\r\n        this.forceClose = () => this.close({ force: true })\r\n\r\n        this.deleteToken = token => {\r\n            if (this.#token && token.id === this.#token.id) this.close({ force: true })\r\n        }\r\n\r\n        window.addEventListener('mousedown', this.#mouseevent)\r\n        window.addEventListener('mouseup', this.#mouseevent)\r\n    }\r\n\r\n    delete() {\r\n        this.close({ force: true })\r\n        window.removeEventListener('mousedown', this.#mouseevent)\r\n        window.removeEventListener('mouseup', this.#mouseevent)\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            popOut: false,\r\n            minimizable: false,\r\n            template: templatePath('hud'),\r\n        })\r\n    }\r\n\r\n    get mousedown() {\r\n        return this.#mousedown[0] || this.#mousedown[2]\r\n    }\r\n\r\n    get token() {\r\n        return this.#token\r\n    }\r\n\r\n    get actor() {\r\n        return this.#token?.actor\r\n    }\r\n\r\n    get hasCover() {\r\n        return this.actor?.itemTypes.effect.find(effect => effect.flags.core?.sourceId === COVER_UUID)\r\n    }\r\n\r\n    get isCharacter() {\r\n        return this.actor?.isOfType('character')\r\n    }\r\n\r\n    getData() {\r\n        const token = this.#token\r\n        const actor = this.#token?.actor\r\n        if (!actor) return {}\r\n\r\n        let distance = null\r\n        const isOwner = token.isOwner\r\n        const showDistance = getSetting('distance')\r\n        const isCharacter = this.isCharacter\r\n        const { attributes, saves, heroPoints, system, alignment } = actor\r\n        const { traits } = system\r\n        const {\r\n            hp,\r\n            sp = { max: 0, value: 0 },\r\n            resolve,\r\n            ac,\r\n            shield,\r\n            speed,\r\n            dying,\r\n            wounded,\r\n            resistances,\r\n            weaknesses,\r\n            immunities,\r\n        } = attributes\r\n        const useStamina = game.settings.get('pf2e', 'staminaVariant')\r\n\r\n        if (showDistance === 'all' || (showDistance === 'self' && isOwner)) {\r\n            const unitSplit = getSetting('unit').split(',')\r\n            const multiplier = Number(unitSplit[0]?.trim()) || 1\r\n            const unit = unitSplit[1]?.trim() || game.system.gridUnits\r\n            const decimals = Number(unitSplit[2]?.trim()) || 0\r\n            const selected = canvas.tokens.controlled\r\n\r\n            let isTarget = false\r\n            let target = selected.length === 1 ? selected[0] : null\r\n\r\n            if (!target || target === token) {\r\n                const targets = game.user.targets\r\n                target = targets.size === 1 ? targets.first() : null\r\n                isTarget = true\r\n            }\r\n\r\n            if (target && target !== token) {\r\n                distance = {\r\n                    unit,\r\n                    icon: isTarget ? '<i class=\"fa-solid fa-crosshairs-simple\"></i>' : '<i class=\"fa-solid fa-expand\"></i>',\r\n                    range: (token.distanceTo(target) * multiplier).toFixed(decimals),\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!isOwner) {\r\n            let status\r\n            const statuses = getSetting('status')\r\n                .split(',')\r\n                .map(x => x.trim())\r\n                .filter(Boolean)\r\n\r\n            if (statuses.length) {\r\n                const max = hp.max + (useStamina ? sp.max : 0)\r\n                const current = hp.value + (useStamina ? sp.value : 0)\r\n                const ratio = current / max\r\n                const pick = Math.ceil(ratio * statuses.length)\r\n\r\n                status = {\r\n                    hue: ratio * ratio * 122 + 3,\r\n                    value: pick === 0 ? game.i18n.localize('EFFECT.StatusDead') : statuses.at(pick - 1),\r\n                }\r\n            }\r\n\r\n            return {\r\n                status,\r\n                distance,\r\n                tokenId: token.id,\r\n            }\r\n        }\r\n\r\n        function toInfo(str) {\r\n            return `<li>${str.trim()}</li>`\r\n        }\r\n\r\n        function sort(a, b) {\r\n            return a.localeCompare(b)\r\n        }\r\n\r\n        const languages = actor.system.traits?.languages?.value\r\n            .map(x => game.i18n.localize(CONFIG.PF2E.languages[x]))\r\n            .sort(sort)\r\n            .map(toInfo)\r\n            .join('')\r\n\r\n        const senses = isCharacter ? traits.senses.map(x => x.label) : traits.senses.value.split(',')\r\n\r\n        function toIWR(category, header) {\r\n            if (!category.length) return ''\r\n            return (\r\n                `<li>${game.i18n.localize(header)}<ul>` +\r\n                category.map(x => toInfo(x.label.replace('-', ' ').titleCase())).join('') +\r\n                '</ul></li>'\r\n            )\r\n        }\r\n\r\n        const speeds = SPEEDS.map(({ type, icon }, index) => ({\r\n            index,\r\n            icon,\r\n            label: game.i18n.localize(CONFIG.PF2E.speedTypes[type] ?? 'PF2E.SpeedTypesLand'),\r\n            value: (type === 'land' ? speed.total : speed.otherSpeeds.find(s => s.type === type)?.total) || 0,\r\n        }))\r\n\r\n        const selectedSpeed = getFlag(actor, `speeds.selected.${game.user.id}`) || 0\r\n        const mainSpeed = speeds.splice(selectedSpeed, 1)[0]\r\n\r\n        let otherSpeeds = speeds\r\n            .map(({ value, label, index }) => `<a data-index=\"${index}\"><li>${label}: ${value}</li></a>`)\r\n            .join('')\r\n        if (speed.details) otherSpeeds += `<li>${game.i18n.localize('PF2E.DetailsHeading')}: ${speed.details}</li>`\r\n\r\n        return {\r\n            distance,\r\n            isOwner,\r\n            tokenId: token.id,\r\n            name: token.document.name,\r\n            hp,\r\n            sp: useStamina ? sp : { max: 0 },\r\n            ac: ac.value,\r\n            hero: heroPoints,\r\n            dying,\r\n            wounded,\r\n            shield,\r\n            resolve,\r\n            alignment: {\r\n                value: alignment,\r\n                icon: ALIGNMENTS[alignment.at(-1)],\r\n            },\r\n            level: actor.level,\r\n            isCharacter,\r\n            showDeathLine: isCharacter && !getSetting('no-death'),\r\n            hasCover: this.hasCover,\r\n            saves: {\r\n                fortitude: saves.fortitude.mod,\r\n                reflex: saves.reflex.mod,\r\n                will: saves.will.mod,\r\n            },\r\n            speeds: {\r\n                main: mainSpeed,\r\n                others: otherSpeeds,\r\n            },\r\n            iwr:\r\n                toIWR(immunities, 'PF2E.ImmunitiesLabel') +\r\n                toIWR(weaknesses, 'PF2E.WeaknessesLabel') +\r\n                toIWR(resistances, 'PF2E.ResistancesLabel'),\r\n            senses: senses.map(toInfo).join(''),\r\n            languages,\r\n            hasSpells: actor.spellcasting.some(x => x.category !== 'items'),\r\n            hasItems: actor.inventory.size,\r\n        }\r\n    }\r\n\r\n    #close() {\r\n        this.#token = null\r\n        this.#hover = false\r\n        this.#lock = false\r\n        this.#softLock = false\r\n\r\n        if (this.#delay !== null) {\r\n            clearTimeout(this.#delay)\r\n            this.#delay = null\r\n        }\r\n\r\n        const states = Application.RENDER_STATES\r\n        this._state = states.CLOSING\r\n\r\n        let el = this.element\r\n        if (!el) return (this._state = states.CLOSED)\r\n        el.css({ minHeight: 0 })\r\n\r\n        for (let cls of this.constructor._getInheritanceChain()) {\r\n            Hooks.call(`close${cls.name}`, this, el)\r\n        }\r\n\r\n        el.remove()\r\n\r\n        this._element = null\r\n        this._state = states.CLOSED\r\n    }\r\n\r\n    close(options = {}) {\r\n        const states = Application.RENDER_STATES\r\n        if (!options.force && !this.#delay && ![states.RENDERED, states.ERROR].includes(this._state)) return\r\n\r\n        if (options.force) return this.#close(options)\r\n\r\n        this.#closing = setTimeout(() => {\r\n            this.#closing = null\r\n            if (this.#hover) return\r\n            this.#close(options)\r\n        })\r\n    }\r\n\r\n    async _render(force = false, options = {}) {\r\n        let sidebarType\r\n        let scrollTop\r\n\r\n        if (this.#lastToken === this.#token) {\r\n            const sidebar = this.element.find('.sidebar')[0]\r\n            if (sidebar) {\r\n                sidebarType = sidebar.dataset.type\r\n                scrollTop = sidebar.scrollTop\r\n            }\r\n        }\r\n\r\n        await super._render(force, options)\r\n\r\n        if (sidebarType) {\r\n            const sidebar = await this.#openSidebar(sidebarType)\r\n            if (scrollTop > 0) sidebar.scrollTop = scrollTop\r\n        }\r\n\r\n        this.#lastToken = this.#token\r\n    }\r\n\r\n    render(force) {\r\n        if (!this.#token?.actor || this.mousedown) return\r\n\r\n        if (force) return super.render(true)\r\n\r\n        const delay = getSetting('delay')\r\n        if (!delay) super.render(true)\r\n        else this.#delay = setTimeout(() => super.render(true), delay)\r\n    }\r\n\r\n    _injectHTML(html) {\r\n        $('body').append(html)\r\n        this._element = html\r\n    }\r\n\r\n    setPosition() {\r\n        const token = this.#token\r\n        if (!token) return\r\n\r\n        const element = this.element[0]\r\n        const scale = token.worldTransform.a\r\n        const hud = element.getBoundingClientRect()\r\n        const targetCoords = canvas.clientCoordinatesFromCanvas(token.document._source)\r\n        const target = {\r\n            x: targetCoords.x,\r\n            y: targetCoords.y,\r\n            width: token.hitArea.width * scale,\r\n            height: token.hitArea.height * scale,\r\n            get right() {\r\n                return this.x + this.width\r\n            },\r\n            get bottom() {\r\n                return this.y + this.height\r\n            },\r\n        }\r\n\r\n        let coords\r\n\r\n        const positions = token.isOwner ? POSITIONS[getSetting('position')].slice() : ['top', 'bottom']\r\n\r\n        while (positions.length && !coords) {\r\n            const position = positions.shift()\r\n\r\n            if (position === 'left') {\r\n                coords = {\r\n                    x: target.x - hud.width,\r\n                    y: postionFromTargetY(hud, target),\r\n                }\r\n                if (coords.x < 0) coords = undefined\r\n            } else if (position === 'right') {\r\n                coords = {\r\n                    x: target.right,\r\n                    y: postionFromTargetY(hud, target),\r\n                }\r\n                if (coords.x + hud.width > window.innerWidth) coords = undefined\r\n            } else if (position === 'top') {\r\n                coords = {\r\n                    x: postionFromTargetX(hud, target),\r\n                    y: target.y - hud.height,\r\n                }\r\n                if (coords.y < 0) coords = undefined\r\n            } else if (position === 'bottom') {\r\n                coords = {\r\n                    x: postionFromTargetX(hud, target),\r\n                    y: target.bottom,\r\n                }\r\n                if (coords.y + hud.height > window.innerHeight) coords = undefined\r\n            }\r\n        }\r\n\r\n        if (coords) {\r\n            element.style.left = `${coords.x}px`\r\n            element.style.top = `${coords.y}px`\r\n        }\r\n\r\n        return coords\r\n    }\r\n\r\n    activateListeners(html) {\r\n        const token = this.#token\r\n        const actor = token?.actor\r\n        if (!actor) return\r\n\r\n        actor.apps[MODULE_ID] = this\r\n\r\n        html.on('mouseenter', () => {\r\n            this.#hover = true\r\n            this.#softLock = true\r\n        })\r\n\r\n        html.on('mouseleave', () => {\r\n            this.#softLock = false\r\n            if (this.#lock) return\r\n            this.#hover = false\r\n            this.close()\r\n        })\r\n\r\n        html.on('dragover', () => {\r\n            html.css('opacity', 0.1)\r\n            html.css('pointerEvents', 'none')\r\n\r\n            window.addEventListener(\r\n                'dragend',\r\n                () => {\r\n                    html.css('opacity', 1)\r\n                    html.css('pointerEvents', '')\r\n                },\r\n                { once: true }\r\n            )\r\n        })\r\n\r\n        html.find('input').on('change', async event => {\r\n            const target = event.currentTarget\r\n            const value = target.valueAsNumber\r\n            const attr = target.name\r\n\r\n            target.blur()\r\n\r\n            if (attr !== 'shield.value') await actor.update({ [attr]: value })\r\n            else await actor.heldShield.update({ 'system.hp.value': value })\r\n        })\r\n\r\n        html.find('[data-action=toggle-hero]').on('click contextmenu', event => {\r\n            event.preventDefault()\r\n            const { max, value } = actor.heroPoints\r\n            const change = event.type === 'click' ? 1 : -1\r\n            const newValue = Math.clamped(value + change, 0, max)\r\n            if (newValue !== value) actor.update({ 'system.resources.heroPoints.value': newValue })\r\n        })\r\n\r\n        html.find('[data-action=raise-shield]').on('click', event => {\r\n            event.preventDefault()\r\n            game.pf2e.actions.raiseAShield({ actors: [actor] })\r\n        })\r\n\r\n        html.find('[data-action=take-cover]').on('click', async event => {\r\n            event.preventDefault()\r\n\r\n            const source = (await fromUuid(COVER_UUID)).toObject()\r\n            setProperty(source, 'flags.core.sourceId', COVER_UUID)\r\n\r\n            const hasCover = this.hasCover\r\n            if (this.hasCover) await hasCover.delete()\r\n            else await actor.createEmbeddedDocuments('Item', [source])\r\n        })\r\n\r\n        html.find('[data-action=roll-save]').on('click', event => {\r\n            event.preventDefault()\r\n            const save = event.currentTarget.dataset.save\r\n            actor.saves[save].roll({ event })\r\n        })\r\n\r\n        html.find('[data-action=recovery-check]').on('click', event => {\r\n            event.preventDefault()\r\n            actor.rollRecovery(event)\r\n        })\r\n\r\n        html.find('[data-action=toggle-dying], [data-action=toggle-wounded]').on('click contextmenu', event => {\r\n            event.preventDefault()\r\n\r\n            const condition = event.currentTarget.dataset.action === 'toggle-dying' ? 'dying' : 'wounded'\r\n            const max = actor.system.attributes[condition]?.max\r\n\r\n            if (!max) return\r\n            if (event.type === 'click') actor.increaseCondition(condition, { max })\r\n            else actor.decreaseCondition(condition)\r\n        })\r\n\r\n        html.find('[data-action=use-resolve]').on('click', event => {\r\n            event.preventDefault()\r\n            useResolve(actor)\r\n        })\r\n\r\n        const infos = html.find('[data-action=show-info]')\r\n        infos.tooltipster({\r\n            position: ['top', 'bottom', 'left', 'right'],\r\n            theme: 'crb-hover',\r\n            arrow: false,\r\n            animationDuration: 0,\r\n            contentAsHTML: true,\r\n            trigger: 'click',\r\n        })\r\n        infos.filter(':not(.speeds)').on('mouseleave', event => {\r\n            $(event.currentTarget).tooltipster('hide')\r\n        })\r\n        infos\r\n            .filter('.speeds')\r\n            .tooltipster('option', 'interactive', true)\r\n            .tooltipster('option', 'functionReady', (tooltipster, { origin, tooltip }) => {\r\n                this.#lock = true\r\n                tooltip.querySelectorAll('[data-index]').forEach(speed => {\r\n                    speed.addEventListener('click', async event => {\r\n                        event.preventDefault()\r\n                        await setFlag(actor, `speeds.selected.${game.user.id}`, Number(speed.dataset.index))\r\n                    })\r\n                })\r\n            })\r\n            .tooltipster('option', 'functionAfter', () => {\r\n                if (html.find('.sidebar').length) return\r\n                this.#lock = false\r\n            })\r\n\r\n        html.find('.inner .footer [data-type]').on('click', this.#openSidebar.bind(this))\r\n    }\r\n\r\n    async #openSidebar(type) {\r\n        type = typeof type === 'string' ? type : type.currentTarget.dataset.type\r\n\r\n        let element = this.element\r\n        let sidebar = element.find('.sidebar')\r\n        const action = sidebar[0]?.dataset.type\r\n\r\n        sidebar.remove()\r\n        element.find('.inner .footer [data-type]').removeClass('active')\r\n\r\n        if (action === type) {\r\n            this.#lock = false\r\n            return\r\n        }\r\n\r\n        const actor = this.actor\r\n        const { getData, addListeners, getOptions } = SIDEBARS[type]\r\n        const data = await getData(actor)\r\n        const { classList = [] } = (getOptions && (await getOptions(actor))) || {}\r\n        if (!data) return ui.notifications.warn(localize(`${type}.empty`, { name: this.#token.name }))\r\n\r\n        data.isGM = game.user.isGM\r\n        data.isCharacter = this.isCharacter\r\n\r\n        this.#lock = true\r\n\r\n        element.find(`.inner .footer [data-type=${type}]`).addClass('active')\r\n        element = element[0]\r\n\r\n        const tmp = document.createElement('div')\r\n        tmp.innerHTML = await renderTemplate(templatePath(type), data)\r\n\r\n        sidebar = tmp.firstElementChild\r\n        sidebar.classList.add('sidebar', ...classList)\r\n        if (!getSetting('scrollbar')) sidebar.classList.add('no-scrollbar')\r\n        if (data.doubled) sidebar.classList.add('doubled')\r\n        sidebar.dataset.type = type\r\n        sidebar.style.setProperty('--max-height', getSetting('height').trim() || '100%')\r\n        this.element.append(sidebar)\r\n\r\n        const rect = sidebar.getBoundingClientRect()\r\n        const target = element.getBoundingClientRect()\r\n\r\n        let left = target.x - rect.width\r\n        if (left < 0) left = target.right\r\n\r\n        const elPadding = parseInt(window.getComputedStyle(element).padding)\r\n        let top = postionFromTargetY(rect, target, elPadding)\r\n\r\n        sidebar.style.left = `${left}px`\r\n        sidebar.style.top = `${top}px`\r\n\r\n        addListeners($(sidebar), actor)\r\n\r\n        return sidebar\r\n    }\r\n}\r\n\r\nfunction postionFromTargetY(el, target, margin = 0) {\r\n    let y = target.y + target.height / 2 - el.height / 2\r\n    if (y + el.height > window.innerHeight) y = window.innerHeight - el.height - margin\r\n    if (y < 0) y = margin\r\n    return y\r\n}\r\n\r\nfunction postionFromTargetX(el, target) {\r\n    let x = target.x + target.width / 2 - el.width / 2\r\n    if (x + el.width > window.innerWidth) y = window.innerWidth - el.width\r\n    if (x < 0) x = 0\r\n    return x\r\n}\r\n\r\nfunction useResolve(actor) {\r\n    function toChat(content) {\r\n        ChatMessage.create({\r\n            user: game.user.id,\r\n            content,\r\n            speaker: ChatMessage.getSpeaker({ actor }),\r\n        })\r\n    }\r\n\r\n    const { name, attributes } = actor\r\n    const { sp, resolve } = attributes\r\n    const fullStamina = localize('hud.resolve.full', { name })\r\n    const noResolve = game.i18n.format('PF2E.Actions.SteelYourResolve.NoStamina', { name })\r\n\r\n    if (sp.value === sp.max) return ui.notifications.warn(fullStamina)\r\n    if (resolve.value < 1) return ui.notifications.warn(noResolve)\r\n\r\n    const hasSteel = actor.itemTypes.feat.find(item => item.sourceId === RESOLVE_UUID)\r\n\r\n    let content = '<p><input type=\"radio\" name=\"pick\" value=\"breather\" style=\"margin-right: 6px;'\r\n    if (!hasSteel) content += ' display: none;'\r\n    content += '\" checked><span>'\r\n    if (hasSteel) content += `<strong>${localize('hud.resolve.breather.label')}:</strong> `\r\n    content += `${localize('hud.resolve.breather.msg')}</span></p>`\r\n\r\n    if (hasSteel) {\r\n        content += '<p><input type=\"radio\" name=\"pick\" value=\"steel\" style=\"margin-right: 6px;\">'\r\n        content += `<span><strong>${game.i18n.localize('PF2E.Actions.SteelYourResolve.Title')}:</strong> `\r\n        content += `${localize('hud.resolve.steel.msg')}</span></p>`\r\n    }\r\n\r\n    new Dialog({\r\n        title: localize('hud.resolve.title'),\r\n        content,\r\n        buttons: {\r\n            yes: {\r\n                icon: \"<i class='fas fa-check'></i>\",\r\n                label: localize('hud.resolve.yes'),\r\n                callback: async html => {\r\n                    const { attributes } = actor\r\n                    const { sp, resolve } = attributes\r\n\r\n                    if (sp.value === sp.max) return toChat(fullStamina)\r\n                    if (resolve.value < 1) return toChat(noResolve)\r\n\r\n                    const selected = html.find('input:checked').val()\r\n                    const ratio = `${sp.value}/${sp.max}`\r\n\r\n                    if (selected === 'breather') {\r\n                        toChat(localize('hud.resolve.breather.used', { name, ratio }))\r\n                        await actor.update({\r\n                            'system.attributes.sp.value': sp.max,\r\n                            'system.attributes.resolve.value': resolve.value - 1,\r\n                        })\r\n                    } else {\r\n                        toChat(game.i18n.format('PF2E.Actions.SteelYourResolve.RecoverStamina', { name, ratio }))\r\n                        const newSP = sp.value + Math.floor(sp.max / 2)\r\n                        await actor.update({\r\n                            'system.attributes.sp.value': Math.min(newSP, sp.max),\r\n                            'system.attributes.resolve.value': resolve.value - 1,\r\n                        })\r\n                    }\r\n                },\r\n            },\r\n            no: {\r\n                icon: \"<i class='fas fa-times'></i>\",\r\n                label: localize('hud.resolve.no'),\r\n            },\r\n        },\r\n    }).render(true)\r\n}\r\n", "import { HUD } from './hud.js'\r\nimport { getSetting, localize, MODULE_ID } from './module.js'\r\n\r\nlet hud = null\r\n\r\nHooks.once('setup', () => {\r\n    /**\r\n     * GM\r\n     */\r\n\r\n    const statuses = ['first', 'second', 'third', 'fourth'].map(x => localize(`settings.status.statuses.${x}`)).join(', ')\r\n    registerSetting('status', String, statuses, { scope: 'world' })\r\n\r\n    /**\r\n     * CLIENT\r\n     */\r\n\r\n    registerSetting('enabled', Boolean, true, { onChange: enableModule })\r\n\r\n    registerSetting('position', String, 'right', {\r\n        choices: {\r\n            left: settingPath('position', 'choices.left'),\r\n            right: settingPath('position', 'choices.right'),\r\n            top: settingPath('position', 'choices.top'),\r\n            bottom: settingPath('position', 'choices.bottom'),\r\n        },\r\n    })\r\n\r\n    registerSetting('delay', Number, 250, {\r\n        range: {\r\n            min: 0,\r\n            max: 2000,\r\n            step: 50,\r\n        },\r\n    })\r\n\r\n    registerSetting('no-death', Boolean, false)\r\n    // registerSetting('info-click', Boolean, true)\r\n\r\n    // distance\r\n\r\n    registerSetting('distance', String, 'all', {\r\n        choices: {\r\n            none: settingPath('distance', 'choices.none'),\r\n            self: settingPath('distance', 'choices.self'),\r\n            all: settingPath('distance', 'choices.all'),\r\n        },\r\n    })\r\n\r\n    registerSetting('unit', String, '')\r\n\r\n    // sidebar\r\n\r\n    registerSetting('height', String, '')\r\n\r\n    registerSetting('scrollbar', Boolean, true)\r\n\r\n    registerSetting('spells-columns', Boolean, false)\r\n\r\n    registerSetting('skills-columns', Boolean, false)\r\n\r\n    // actions\r\n\r\n    registerSetting('actions', String, 'split', {\r\n        choices: {\r\n            name: settingPath('actions', 'choices.name'),\r\n            type: settingPath('actions', 'choices.type'),\r\n            split: settingPath('actions', 'choices.split'),\r\n        },\r\n    })\r\n\r\n    registerSetting('actions-colors', Boolean, true)\r\n\r\n    // spells\r\n\r\n    registerSetting('spells', Boolean, false)\r\n\r\n    registerSetting('tradition', Boolean, false)\r\n\r\n    // skills\r\n\r\n    registerSetting('untrained', Boolean, true)\r\n})\r\n\r\nHooks.once('ready', () => {\r\n    if (getSetting('enabled')) enableModule(true)\r\n})\r\n\r\nHooks.on('renderSettingsConfig', (_, html) => {\r\n    const tab = html.find(`.tab[data-tab=${MODULE_ID}]`)\r\n\r\n    function beforeGroup(name, key, dom = 'h3') {\r\n        const localized = localize(`menu.${key}`)\r\n        tab.find(`[name=\"${MODULE_ID}.${name}\"]`).closest('.form-group').before(`<${dom}>${localized}</${dom}>`)\r\n    }\r\n\r\n    if (game.user.isGM) {\r\n        beforeGroup('enabled', 'client.header', 'h2')\r\n    }\r\n\r\n    beforeGroup('distance', 'client.distance')\r\n    beforeGroup('height', 'client.sidebar')\r\n    beforeGroup('actions', 'client.actions')\r\n    beforeGroup('spells', 'client.spells')\r\n    beforeGroup('untrained', 'client.skills')\r\n})\r\n\r\nfunction settingPath(setting, key) {\r\n    return `${MODULE_ID}.settings.${setting}.${key}`\r\n}\r\n\r\nfunction registerSetting(name, type, defValue, extra = {}) {\r\n    game.settings.register(MODULE_ID, name, {\r\n        name: settingPath(name, 'name'),\r\n        hint: settingPath(name, 'hint'),\r\n        scope: 'client',\r\n        config: true,\r\n        type,\r\n        default: defValue,\r\n        ...extra,\r\n    })\r\n}\r\n\r\nfunction enableModule(enabled) {\r\n    if (enabled && !hud) {\r\n        hud = new HUD()\r\n\r\n        Hooks.on('hoverToken', hud.hoverToken)\r\n        Hooks.on('deleteToken', hud.deleteToken)\r\n        Hooks.on('canvasPan', hud.forceClose)\r\n    } else if (!enabled && hud) {\r\n        Hooks.off('hoverToken', hud.hoverToken)\r\n        Hooks.off('deleteToken', hud.deleteToken)\r\n        Hooks.off('canvasPan', hud.forceClose)\r\n\r\n        hud.delete()\r\n        hud = null\r\n    }\r\n}\r\n"],
  "mappings": "uFAAO,IAAMA,EAAY,iBAElB,SAASC,EAAWC,EAAS,CAChC,OAAO,KAAK,SAAS,IAAIF,EAAWE,CAAO,CAC/C,CAFgBC,EAAAF,EAAA,cAIT,SAASG,KAAYC,EAAM,CAC9B,IAAMC,EAAOD,EAAK,GAAG,EAAE,EACjBE,EAAY,OAAOD,GAAS,SAE5BE,EAAOD,EAAYF,EAAK,MAAM,EAAG,EAAE,EAAIA,EAC7C,OAAAG,EAAK,QAAQR,CAAS,EAEf,KAAK,KAAKO,EAAY,SAAW,UAAU,EAAEC,EAAK,KAAK,GAAG,EAAGF,CAAI,CAC5E,CARgBH,EAAAC,EAAA,YAUT,SAASK,EAAaC,EAAU,CACnC,MAAO,WAAWV,eAAuBU,OAC7C,CAFgBP,EAAAM,EAAA,gBAIT,SAASE,EAASC,EAAK,CAC1B,OAAOA,GAAO,EAAI,IAAIA,IAAQA,CAClC,CAFgBT,EAAAQ,EAAA,YAIT,SAASE,GAAQC,EAAKC,EAAM,CAC/B,OAAOD,EAAI,QAAQd,EAAWe,CAAI,CACtC,CAFgBZ,EAAAU,GAAA,WAIT,SAASG,GAAQF,EAAKC,EAAME,EAAO,CACtC,OAAOH,EAAI,QAAQd,EAAWe,EAAME,CAAK,CAC7C,CAFgBd,EAAAa,GAAA,WCxBhB,IAAME,GAAgB,IAAI,IAAI,CAC1B,CAAC,kBAAmB,GAAG,EACvB,CAAC,YAAa,EAAE,EAChB,CAAC,OAAQ,EAAE,EACX,CAAC,SAAU,CAAC,EACZ,CAAC,OAAQ,CAAC,EACV,CAAC,YAAa,CAAC,EACf,CAAC,kBAAmB,EAAE,CAC1B,CAAC,EAEKC,GAAY,IAAI,IAAI,CACtmB,IAAI,IAAI,CAAC,SAAU,SAAU,SAAU,QAAQ,CAAC,EAEnEC,GAAe,CACjB,EAAG,6CACH,KAAM,6CACN,EAAG,4CACH,EAAG,6CACH,EAAG,+CACH,SAAU,gDACV,SAAU,kDACV,SAAU,kDACV,SAAU,2CACV,QAAS,yCACb,EAcO,SAASC,GAAcC,EAAQC,EAAW,wCAAyC,CACtF,GAAID,IAAW,KAAM,OAAOE,GAAa,QACzC,IAAMC,EAAQ,OAAOH,GAAW,SAAWA,EAASA,EAAO,OAAS,SAAWA,EAAO,MAAQA,EAAO,KAC/FI,EAAY,OAAOD,GAAS,EAAE,EAC/B,YAAY,EACZ,KAAK,EACV,OAAOD,GAAaE,CAAS,GAAKH,CACtC,CAPgBI,EAAAN,GAAA,iBAoBhB,eAAsBO,GAAkB,CAAE,OAAAC,EAAQ,MAAAC,EAAO,UAAAC,CAAU,EAAG,CAElE,GADgBF,EAAO,OAAO,OAAO,QAAQC,CAAK,EAAE,YACpCC,EAAW,MAAO,GAElC,IAAMC,EAAOH,EAAO,OAAO,MAAM,IAAIA,EAAO,EAAE,EAC9C,OAAIG,GAAM,SAAS,QAAQ,GAAKA,IAASH,EACrC,MAAMG,EAAK,OAAO,CAAE,CAAC,yBAAyBF,aAAiB,EAAGC,CAAU,CAAC,EACtEC,GAAM,SAAS,QAAQ,GAAKH,EAAO,eAAiB,QAC3D,MAAMG,EAAK,OAAO,CAAE,CAAC,kCAAkCF,GAAO,EAAGC,CAAU,CAAC,EAG5E,MADaC,GAAM,MAAM,KAAKC,GAAKA,EAAE,MAAQ,UAAY,CAACA,EAAE,SAAWA,EAAE,OAASJ,EAAO,IAAI,GACjF,YAAY,CAAE,MAAAC,EAAO,UAAAC,CAAU,CAAC,EAGzC,EACX,CAfsBG,EAAAN,GAAA,qBAiBtB,SAASO,GAASC,EAAIC,EAAa,SAAU,CACzC,OAAOD,GAAME,GAAc,IAAID,CAAU,GAAK,EAClD,CAFSH,EAAAC,GAAA,YAIT,SAASI,GAAqBC,EAAS,SAAU,CAC7C,OAAQA,EAAQ,CACZ,IAAK,WACD,MAAO,OACX,IAAK,OACD,MAAO,YACX,IAAK,SACD,MAAO,kBACX,QACI,MAAO,QACf,CACJ,CAXSN,EAAAK,GAAA,wBAaT,SAASE,EAAiBL,EAAII,EAAS,SAAU,CAC7C,OAAOL,GAASC,EAAIG,GAAqBC,CAAM,CAAC,CACpD,CAFSN,EAAAO,EAAA,oBAIT,SAASC,GAAYC,EAAO,CAAE,wBAAAC,EAAyB,OAAAJ,EAAS,QAAS,EAAI,CAAC,EAAG,CAC7E,IAAMK,EAAa,KAAK,SAAS,IAAI,OAAQ,oBAAoB,EACjED,IAA4BC,IAAe,0BAE3C,IAAMT,EAAKU,GAAU,IAAIH,CAAK,GAAK,GACnC,OACWF,EADPG,EACwBR,EAAK,KAAK,IAAIO,EAAO,CAAC,EAEtBP,EAFyBI,CAAM,CAI/D,CAVSN,EAAAQ,GAAA,eAYT,SAASK,GAAYf,EAAM,CACvB,OAAOA,EAAK,OAAO,IAAI,QAAQ,EAAI,SAAWA,EAAK,MACvD,CAFSE,EAAAa,GAAA,eAIT,SAASC,GAAmBhB,EAAM,CAC9B,IAAMiB,EAASjB,EAAK,OAAO,OAAO,MAClC,OAAO,IAAI,IAAIiB,EAAO,OAAOC,GAAKC,GAAcC,GAAkBF,CAAC,CAAC,CAAC,CACzE,CAHShB,EAAAc,GAAA,sBAKT,SAASK,GAAoBrB,EAAMsB,EAAQC,EAA8B,CACrE,IAAMC,EAAS,CACX,OAAQF,EACR,OAAQA,EACR,OAAQA,EACR,OAAQA,CACZ,EACMG,EAAaT,GAAmBhB,CAAI,EAC1C,QAAW0B,KAAON,GACVK,EAAW,KAAO,GAAK,CAACA,EAAW,IAAIC,CAAG,IAC1CF,EAAOE,CAAG,EAAIJ,EAASC,GAG/B,MAAO,CAAE,OAAQC,EAAO,OAAQ,OAAQA,EAAO,OAAQ,SAAUA,EAAO,OAAQ,UAAWA,EAAO,MAAO,CAC7G,CAdStB,EAAAmB,GAAA,uBAgBT,SAASM,GAAyB3B,EAAM,CAAE,wBAAAY,EAA0B,GAAO,6BAAAW,CAA6B,EAAG,CACvG,IAAMD,EAASZ,GAAYV,EAAK,MAAO,CAAE,wBAAAY,CAAwB,CAAC,EAC5DJ,EAASO,GAAYf,CAAI,EACzBI,EAAKK,EAAiBa,EAAQd,CAAM,EAC1C,OAAIR,EAAK,UACEqB,GAAoBrB,EAAMI,EAAImB,CAA4B,EAC1DvB,EAAK,aACL,CAAE,SAAUI,CAAG,EAEf,CAAE,GAAIA,CAAG,CAExB,CAXSF,EAAAyB,GAAA,4BAaT,SAASC,GAAaC,EAAKH,EAAK,CAC5B,OAAQ,OAAOA,GAAQ,UAAY,OAAOA,GAAQ,WAAaA,KAAOG,CAC1E,CAFS3B,EAAA0B,GAAA,gBAIT,SAAST,GAAcW,EAAKC,EAAO,CAC/B,OAAOD,EAAI,IAAIC,CAAK,CACxB,CAFS7B,EAAAiB,GAAA,iBAIF,IAAMa,EAAN,cAAgC,eAAgB,CACnD,WAAW,gBAAiB,CACxB,MAAO,CACH,GAAG,MAAM,eACT,GAAI,gBACJ,MAAO,KAAK,KAAK,SAAS,8BAA8B,EACxD,SAAU,kDACV,MAAO,OACP,QAAS,CAAC,gBAAgB,CAC9B,CACJ,CAEA,IAAI,MAAO,CACP,OAAO,KAAK,MAChB,CAEA,MAAM,SAAU,CACZ,IAAMhC,EAAO,KAAK,OACZuB,EAA+B,KAAK,SAAS,IAAI,OAAQ,2CAA2C,EACpGX,EAA0B,KAAK,SAAS,IAAI,OAAQ,oBAAoB,IAAM,0BAC9EqB,EAAMN,GAAyB3B,EAAM,CAAE,wBAAAY,EAAyB,6BAAAW,CAA6B,CAAC,EAEpG,MAAO,CACH,GAAI,MAAM,MAAM,QAAQ,EACxB,QAASvB,EAAK,UACd,aAAcA,EAAK,aACnB,IAAAiC,CACJ,CACJ,CAEA,kBAAkBC,EAAO,CACrBA,EAAM,KAAK,8BAA8B,EAAE,GAAG,QAASC,GAAS,CAC5D,IAAMC,EAAU,EAAED,EAAM,cAAc,EACtC,KAAK,OAAO,CAAE,WAAY,CAAE,OAAQC,EAAQ,IAAI,CAAE,CAAE,CAAC,CACzD,CAAC,EACDF,EAAM,KAAK,0BAA0B,EAAE,GAAG,QAAS,SAAY,CAC3D,IAAMlC,EAAO,KAAK,KACZqC,EAAUrC,EAAK,OAAO,eAAe,aAAa,IAClDsC,EAAWtC,EAAK,OAAO,eAAe,aAAa,KACnDuC,EAAiBvC,EAAK,OAAO,eAAe,WAAW,KACvDwC,EAAS,EAAE,mBAAmB,EAC/B,KAAK,IAAI,EACT,QAAQ,EACR,QAAQC,GAAO,CACZ,IAAMC,EAAOD,EAAI,QAAQ,MACnBrC,EAAK,OAAOqC,EAAI,QAAQ,EAAE,EAChC,GAAI,EAAE,OAAO,UAAUrC,CAAE,GAAKwB,GAAa,OAAO,KAAK,UAAWc,CAAI,GAClE,MAAO,CAAC,EAEZ,IAAMC,EAAO,KAAK,KAAK,SAAS,OAAO,KAAK,UAAUD,CAAI,CAAC,EAE3D,MAAO,CAAE,KAAAA,EAAM,KAAAC,EAAM,GAAAvC,CAAG,CAC5B,CAAC,EAECwC,EAAe5C,EAAK,UAAY,wBAA0BA,EAAK,aAAe,0BAA4B,KAE1G6C,EAAU,MAAM,eAAe,oEAAqE,CACtG,QAAAR,EACA,SAAAC,EACA,eAAAC,EAGA,YAAa,CAAC,cAAe,cAAe,SAAUK,CAAY,EAAE,OAAO,OAAO,EAClF,OAAAJ,CACJ,CAAC,EAED,MAAM,OAAO,YAAY,cAAc,OAAO,CAAE,KAAM,KAAK,KAAK,GAAI,QAAAK,CAAQ,CAAC,CACjF,CAAC,CACL,CAEA,MAAM,cAAcC,EAAQC,EAAU,CAClC,IAAMC,EAASD,EAAS,OACpBC,IAAW,cACX,MAAM,KAAK,KAAK,wBAAwBA,CAAM,CAEtD,CACJ,EA5Ea9C,EAAA8B,EAAA,qBAkFb,eAAsBiB,GAAqBd,EAAOnC,EAAMkD,EAAO,CAAE,SAAAC,EAAW,OAAW,OAAAC,EAAS,GAAM,KAAAC,EAAO,CAAC,CAAE,EAAG,CAC/G,IAAMC,EAAW,+BAA+BtD,EAAK,gBAC/CuD,EAAQL,EAAM,MACdM,EAAcrB,GAAO,cAAc,QAAQ,OAAO,GAAK,CAAC,EACxDsB,EAAkB,OAAO,YAAY,cAErCC,EAAiB,OAAO,KAAKL,CAAI,EAAE,OAAS,EAAIA,EAAOG,EAAY,SAAW,CAAC,EAC/EG,EAAe,CACjB,MAAOT,EACP,QAASK,EAAQ,GAAGA,EAAM,QAAQ,MAAMA,EAAM,KAAO,KACrD,KAAAvD,EACA,KAAM,MAAMA,EAAK,YAAY,OAAW0D,CAAc,CAC1D,EAEME,EAAW,CACb,QAASH,EAAgB,WAAW,CAChC,MAAOP,EACP,MAAOA,EAAM,gBAAgB,GAAO,EAAI,EAAE,CAAC,GAAK,IACpD,CAAC,EACD,MAAO,CACH,KAAM,CACF,UAAW,EACf,EACA,KAAM,CACF,OAAQ,CAAE,KAAMlD,EAAK,KAAM,KAAMA,EAAK,IAAK,CAC/C,CACJ,EACA,KAAM,MAAM,mBAAmB,KACnC,EAEA,OAAAmD,IAAahB,GAAO,SAAWA,GAAO,QAAU,YAAc,KAAK,SAAS,IAAI,OAAQ,UAAU,EAC9F,CAAC,SAAU,WAAW,EAAE,SAASgB,CAAQ,IAAGS,EAAS,QAAUH,EAAgB,qBAAqB,IAAI,EAAE,IAAII,GAAKA,EAAE,EAAE,GACvHV,IAAa,cAAaS,EAAS,MAAQ,IAE/CA,EAAS,QAAU,MAAM,eAAeN,EAAUK,CAAY,EACvDP,EAASK,EAAgB,OAAOG,EAAU,CAAE,YAAa,EAAM,CAAC,EAAI,IAAIH,EAAgBG,CAAQ,CAC3G,CApCsB1D,EAAA+C,GAAA,wBC3QtB,eAAsBa,EAAMC,EAAOC,EAAS,CACxC,IAAMC,EAAM,EAAE,IAAIC,GAAW,EAC7B,GAAI,CAACD,EAAI,OAAQ,OAEjBA,EAAI,KAAK,QAAQ,EAAE,OAAO,EAE1B,IAAME,EAAM,SAAS,cAAc,KAAK,EACxCA,EAAI,UAAY,MAAM,eAAeC,EAAa,OAAO,EAAG,CAAE,MAAAL,EAAO,MAAOM,EAAS,aAAa,CAAE,CAAC,EAErG,IAAMP,EAAQK,EAAI,kBACd,OAAOH,GAAY,UACnBA,EAAU,MAAM,WAAW,WAAWA,EAAS,CAAE,MAAO,EAAK,CAAC,EAC9DF,EAAM,mBAAmB,YAAaE,CAAO,GAE7CF,EAAM,OAAOE,CAAO,EAGxBF,EAAM,cAAc,2BAA2B,EAAE,iBAAiB,QAAS,IAAMA,EAAM,OAAO,CAAC,EAE/FG,EAAI,OAAOH,CAAK,CACpB,CApBsBQ,EAAAR,EAAA,SCAtB,eAAsBS,EAAeC,EAAIC,EAAO,CAC5C,IAAMC,EAAUF,EAAG,KAAK,EAClBG,EAAOD,EAAQ,OAASD,EAAM,MAAM,IAAIC,EAAQ,MAAM,EAAI,MAAM,SAASA,EAAQ,IAAI,EACrFE,EAAO,MAAMD,GAAM,YAAY,CAAC,EAAGD,CAAO,EAChD,GAAI,CAACE,EAAM,OAEX,IAAMC,EAAc,SAAS,cAAc,KAAK,EAChD,OAAAA,EAAY,UAAU,IAAI,aAAa,EAEvC,MAAMJ,EAAM,MAAM,aAAa,kBAAkBI,EAAaF,EAAMC,CAAI,EAEjEC,CACX,CAZsBC,EAAAP,EAAA,kBAcf,SAASQ,EAAwBP,EAAI,CACxCA,EAAG,GAAG,aAAcQ,GAAS,CACzBA,EAAM,eAAe,EAErB,IAAMC,EAASD,EAAM,cAAc,cAAc,OAAO,EACxD,GAAIC,EAAO,aAAeA,EAAO,YAAa,OAE9C,IAAMC,EAAOD,EAAO,UAAU,KAAK,EACnC,KAAK,QAAQ,SAASD,EAAM,cAAe,CAAE,KAAME,CAAK,CAAC,CAC7D,CAAC,EAEDV,EAAG,GAAG,aAAcQ,GAAS,CACzBA,EAAM,eAAe,EACrB,KAAK,QAAQ,WAAW,CAC5B,CAAC,EAEDR,EAAG,GAAG,YAAaQ,GAAS,CACxB,KAAK,QAAQ,WAAW,CAC5B,CAAC,CACL,CAnBgBF,EAAAC,EAAA,2BAqBT,SAASI,GAASH,EAAOP,EAAO,CACnCO,EAAM,eAAe,EACRI,EAAiBJ,EAAOP,CAAK,GACpC,MAAM,OAAO,GAAM,CAAE,MAAO,EAAK,CAAC,CAC5C,CAJgBK,EAAAK,GAAA,YAMhB,eAAsBE,GAAWL,EAAOP,EAAO,CAC3CO,EAAM,eAAe,EAErB,IAAML,EAAOS,EAAiBJ,EAAOP,CAAK,EAC1C,GAAKE,EAEL,IAAIK,EAAM,QAAS,OAAOL,EAAK,OAAO,EAEtC,IAAI,OAAO,CACP,MAAOW,EAAS,kBAAkB,EAClC,QAAS,MAAM,eAAe,uDAAwD,CAAE,KAAMX,EAAK,IAAK,CAAC,EACzG,QAAS,CACL,GAAI,CACA,KAAM,oCACN,MAAOW,EAAS,eAAe,EAC/B,SAAU,IAAMX,EAAK,OAAO,CAChC,EACA,OAAQ,CACJ,KAAM,+BACN,MAAOW,EAAS,mBAAmB,CACvC,CACJ,CACJ,CAAC,EAAE,OAAO,EAAI,EAClB,CAvBsBR,EAAAO,GAAA,cAyBf,SAASD,EAAiBJ,EAAOP,EAAO,CAC3C,GAAM,CAAE,OAAAc,CAAO,EAAIP,EAAM,cAAc,QAAQ,gBAAgB,EAAE,QACjE,OAAOP,EAAM,MAAM,IAAIc,CAAM,CACjC,CAHgBT,EAAAM,EAAA,oBC/DhB,IAAMI,GAAgB,IAAI,IAAI,CAC1B,iDACA,gDACJ,CAAC,EACKC,GAAe,6CAEfC,GAAS,CACX,WAAY,uBACZ,mBAAoB,6BACpB,eAAgB,qDAChB,WAAY,GAAGC,8BACf,YAAa,GAAGA,+BAChB,sBAAuB,GAAGA,uCAC1B,iBAAkB,GAAGA,kCACrB,mBAAoB,GAAGA,oCACvB,cAAe,GAAGA,+BAClB,iBAAkB,GAAGA,kCACrB,sBAAuB,GAAGA,sCAC9B,EAEMC,GAAgB,CAClB,eAAgB,+CAChB,KAAM,+CACN,QAAS,+CACT,OAAQ,+CACR,iBAAkB,+CAClB,qBAAsB,+CACtB,QAAS,+CACT,mBAAoB,+CACpB,sBAAuB,+CACvB,mBAAoB,+CACpB,iBAAkB,+CAClB,cAAe,+CACf,MAAO,+CACP,UAAW,+CACX,QAAS,+CACT,SAAU,+CACV,SAAU,+CACV,MAAO,+CACP,KAAM,+CACN,KAAM,+CACN,OAAQ,+CACR,OAAQ,+CACR,MAAO,+CACP,iBAAkB,GAClB,WAAY,+CACZ,mBAAoB,+CACpB,iBAAkB,+CAClB,YAAa,+CACb,IAAK,+CACL,MAAO,+CACP,OAAQH,GACR,kBAAmB,+CACnB,iBAAkB,+CAClB,QAAS,+CACT,OAAQ,+CACR,WAAY,+CACZ,uBAAwB,+CACxB,gBAAiB,+CACjB,eAAgB,+CAChB,YAAa,+CACb,oBAAqB,+CACrB,QAAS,+CACT,sBAAuB,GACvB,QAAS,+CACT,iBAAkB,+CAClB,oBAAqB,+CACrB,KAAM,+CACN,MAAO,+CACP,eAAgB,+CAChB,eAAgB,+CAChB,MAAO,+CACP,iBAAkB,+CAClB,MAAO,+CACP,iBAAkB,+CAClB,cAAe,8CACnB,EAEMI,GAAmB,CACrB,OAAQ,CAAE,KAAM,SAAU,KAAM,IAAK,KAAM,EAAG,QAAS,EAAK,EAC5D,mBAAoB,CAAE,KAAM,mBAAoB,KAAM,IAAK,OAAQ,EAAK,EACxE,mBAAoB,CAAE,KAAM,mBAAoB,KAAM,EAAG,QAAS,EAAK,EACvE,iBAAkB,CAAE,KAAM,iBAAkB,QAAS,EAAK,EAC1D,cAAe,CAAE,KAAM,cAAe,QAAS,EAAK,CACxD,EAEMC,EAAS,CACX,CACI,KAAM,aACN,QAAS,CACL,CAAE,KAAM,eAAgB,KAAM,IAAK,KAAM,CAAE,EAC3C,CAAE,KAAM,OAAQ,KAAM,IAAK,KAAM,CAAE,CACvC,CACJ,EACA,CACI,KAAM,aACN,QAAS,CACL,CAAE,KAAM,UAAW,KAAM,IAAK,KAAM,CAAE,EAEtC,CAAE,KAAM,iBAAkB,KAAM,IAAK,KAAM,CAAE,EAC7C,CAAE,KAAM,qBAAsB,KAAM,IAAK,KAAM,EAAG,QAAS,EAAK,EAChE,CAAE,KAAM,UAAW,KAAM,EAAG,QAAS,EAAK,CAC9C,CACJ,EACA,CACI,KAAM,SACN,QAAS,CACL,mBACA,CAAE,KAAM,sBAAuB,QAAS,EAAK,EAC7C,mBACA,iBACA,aACJ,CACJ,EACA,CACI,KAAM,YACN,QAAS,CACL,CAAE,KAAM,QAAS,KAAM,IAAK,KAAM,CAAE,EAEpC,CACI,KAAM,YACN,KAAM,IACN,KAAM,EACN,IAAK,GACL,UAAW,CACP,CACI,UAAWC,GACP,CAACA,EAAM,UAAU,UAAU,KAAKC,GAAQA,EAAK,QAAUR,GAAc,IAAIQ,EAAK,QAAQ,CAAC,EAC3F,UAAW,CACP,CACI,KAAM,kBACN,SAAU,GACV,KAAM,cACV,CACJ,CACJ,CACJ,CACJ,EACA,CAAE,KAAM,UAAW,KAAM,IAAK,KAAM,EAAG,IAAK,EAAK,EACjD,CAAE,KAAM,WAAY,KAAM,IAAK,KAAM,CAAE,EACvC,CAAE,KAAM,WAAY,KAAM,IAAK,KAAM,CAAE,EACvC,CAAE,KAAM,QAAS,KAAM,IAAK,KAAM,EAAG,IAAK,EAAK,EAC/C,CAAE,KAAM,OAAQ,KAAM,IAAK,KAAM,CAAE,EACnC,CAAE,KAAM,OAAQ,KAAM,IAAK,KAAM,EAAG,IAAK,EAAK,EAC9C,CAAE,KAAM,SAAU,KAAM,IAAK,KAAM,EAAG,IAAK,GAAM,QAAS,EAAK,CACnE,CACJ,EACA,CACI,KAAM,WACN,QAAS,CACL,mBACA,CAAE,KAAM,SAAU,KAAM,CAAE,EAC1B,CAAE,KAAM,QAAS,KAAM,EAAG,QAAS,EAAK,EACxC,CAAE,KAAM,iBAAkB,QAAS,EAAK,EACxC,CAAE,KAAM,aAAc,KAAM,EAAG,QAAS,EAAK,EAC7C,CAAE,KAAM,mBAAoB,QAAS,EAAK,CAC9C,CACJ,EACA,CACI,KAAM,YACN,QAAS,CACL,CAAE,KAAM,mBAAoB,KAAM,IAAK,KAAM,EAAG,SAAU,CAAC,oBAAqB,UAAW,OAAO,CAAE,EACpG,CAAE,KAAM,cAAe,KAAM,CAAE,EAC/B,CAAE,KAAM,MAAO,KAAM,CAAE,EACvB,CAAE,KAAM,QAAS,KAAM,IAAK,KAAM,EAAG,QAAS,EAAK,CACvD,CACJ,EACA,CACI,KAAM,YACN,QAAS,CACL,CACI,KAAM,SACN,KAAM,IACN,KAAM,EACN,UAAWD,GAASA,EAAM,UAAU,KAAK,KAAKE,GAAQA,EAAK,QAAQ,OAAQ,UAAU,IAAMR,EAAY,CAC3G,EACA,CAAE,KAAM,oBAAqB,KAAM,CAAE,EACrC,CAAE,KAAM,mBAAoB,KAAM,CAAE,EACpC,CAAE,KAAM,UAAW,KAAM,IAAK,KAAM,CAAE,CAC1C,CACJ,EACA,CACI,KAAM,eACN,QAAS,CACL,CAAE,KAAM,SAAU,KAAM,CAAE,EAC1B,CAAE,KAAM,aAAc,KAAM,IAAK,KAAM,CAAE,CAC7C,CACJ,EACA,CACI,KAAM,WACN,QAAS,CACL,CAAE,KAAM,uBAAwB,KAAM,IAAK,KAAM,EAAG,SAAU,CAAC,YAAa,eAAe,CAAE,EAC7F,CAAE,KAAM,gBAAiB,KAAM,EAAG,QAAS,EAAK,EAChD,CAAE,KAAM,eAAgB,KAAM,IAAK,KAAM,EAAG,QAAS,EAAK,EAC1D,CAAE,KAAM,cAAe,KAAM,EAAG,QAAS,EAAK,CAClD,CACJ,EACA,CACI,KAAM,SACN,QAAS,CACL,CAAE,KAAM,oBAAqB,KAAM,IAAK,KAAM,CAAE,EAChD,mBACA,iBACA,aACJ,CACJ,EACA,CACI,KAAM,YACN,QAAS,CACL,mBACA,mBACA,iBACA,aACJ,CACJ,EACA,CACI,KAAM,cACN,QAAS,CACL,CACI,KAAM,UACN,KAAM,IACN,KAAM,EACN,SAAU,CACN,SACA,SACA,QACA,YACA,UACA,aACA,UACA,UACA,QACA,SACJ,CACJ,EACA,CAAE,KAAM,sBAAuB,QAAS,EAAK,CACjD,CACJ,EACA,CACI,KAAM,WACN,QAAS,CACL,mBACA,mBACA,iBACA,aACJ,CACJ,EACA,CACI,KAAM,UACN,QAAS,CACL,mBACA,CAAE,KAAM,UAAW,KAAM,CAAE,EAC3B,CAAE,KAAM,iBAAkB,KAAM,EAAG,QAAS,EAAK,EACjD,kBACJ,CACJ,EACA,CACI,KAAM,UACN,QAAS,CACL,CAAE,KAAM,oBAAqB,KAAM,IAAK,KAAM,CAAE,EAChD,CAAE,KAAM,OAAQ,KAAM,IAAK,KAAM,CAAE,EACnC,CAAE,KAAM,QAAS,KAAM,IAAK,KAAM,CAAE,CACxC,CACJ,EACA,CACI,KAAM,WACN,QAAS,CACL,CAAE,KAAM,iBAAkB,KAAM,CAAE,EAClC,CAAE,KAAM,UAAW,KAAM,CAAE,EAC3B,CAAE,KAAM,eAAgB,QAAS,EAAK,EACtC,CAAE,KAAM,QAAS,KAAM,EAAG,QAAS,EAAK,CAC5C,CACJ,EACA,CACI,KAAM,WACN,QAAS,CACL,CAAE,KAAM,iBAAkB,KAAM,IAAK,KAAM,CAAE,EAC7C,CAAE,KAAM,QAAS,KAAM,IAAK,KAAM,CAAE,EACpC,CAAE,KAAM,iBAAkB,KAAM,IAAK,KAAM,EAAG,QAAS,EAAK,EAC5D,CAAE,KAAM,cAAe,KAAM,IAAK,KAAM,EAAG,QAAS,EAAK,CAC7D,CACJ,CACJ,EAEAK,EAAO,QAAQI,GAAS,CACpBA,EAAM,QAAUA,EAAM,QAAQ,IAAIC,GAAW,OAAOA,GAAW,SAAWN,GAAiBM,CAAM,EAAIA,CAAO,EAE5G,GAAM,CAAE,KAAAC,EAAM,QAAAC,CAAQ,EAAIH,EAC1B,QAASC,KAAUE,EAAS,CACxB,IAAMC,EAAYH,EAAO,KAAK,QAAQ,QAAS,CAACI,EAAGC,IAAMA,EAAE,YAAY,CAAC,EAAE,WAAW,EAErFL,EAAO,UAAYC,EACnBD,EAAO,KAAOP,GAAcO,EAAO,IAAI,EACvCA,EAAO,MAAQT,GAAOS,EAAO,IAAI,GAAK,gBAAgBG,UAElDH,EAAO,SACPA,EAAO,SAAWA,EAAO,SAAS,IAAIM,IAAY,CAC9C,KAAMA,EACN,MAAO,GAAGd,oBAA4Bc,GAC1C,EAAE,EACKN,EAAO,MACdA,EAAO,SAAW,CACd,CAAE,MAAO,kBAAmB,EAC5B,CAAE,MAAO,4BAA6B,IAAK,EAAG,EAC9C,CAAE,MAAO,4BAA6B,IAAK,GAAI,CACnD,GAGJA,EAAO,WAAW,QAAQ,CAAC,CAAE,UAAAO,CAAU,IAAM,CACzCA,EAAU,QAAQC,GAAY,CAC1BA,EAAS,MAAQ,GAAGhB,sBAA8BgB,EAAS,MAC/D,CAAC,CACL,CAAC,EAET,CAAC,EAEM,IAAMC,GAAed,EAAO,IAAII,GAASA,EAAM,IAAI,EAEpDW,GAAaf,EAAO,OAAO,CAACgB,EAAQ,CAAE,KAAAV,EAAM,QAAAC,CAAQ,KACtDS,EAAOV,CAAI,EAAI,CACX,KAAAA,EACA,QAASC,EAAQ,OAAO,CAACA,EAASF,KAC9BE,EAAQF,EAAO,IAAI,EAAIA,EAChBE,GACR,CAAC,CAAC,CACT,EACOS,GACR,CAAC,CAAC,EAEQC,GAAe,IAAI,IAAI,OAAO,OAAOnB,EAAa,EAAE,OAAO,OAAO,CAAC,EAEzE,SAASoB,GAAcZ,EAAM,CAChC,OAAO,KAAK,KAAK,SAASA,IAAS,aAAe,uBAAyB,OAAO,KAAK,UAAUA,CAAI,CAAC,CAC1G,CAFgBa,EAAAD,GAAA,iBAIhB,eAAsBE,GAAcnB,EAAO,CACvC,IAAMe,EAAS,CAAC,EACVK,EAAc,CAACC,EAAW,WAAW,EACrCC,EAAe,CAACtB,EAAM,SAAS,WAAW,EAEhD,QAASuB,EAAI,EAAGA,EAAIxB,EAAO,OAAQwB,IAAK,CACpC,GAAM,CAAE,KAAAlB,EAAM,QAAAC,CAAQ,EAAIP,EAAOwB,CAAC,EAC5B,CAAE,MAAAC,EAAO,KAAAC,EAAM,IAAAC,CAAI,EAAIC,GAAStB,EAAML,CAAK,EAEjDe,EAAOQ,CAAC,EAAI,CACR,KAAAlB,EACA,MAAAmB,EACA,KAAAC,EACA,SAAUb,EAASc,CAAG,EACtB,QAASpB,EAAQ,OACbF,IACKgB,GAAeE,GAAgB,CAAClB,EAAO,SAAWJ,EAAM,OAAOK,CAAI,EAAE,MAAQ,KAC7E,CAACD,EAAO,WAAaA,EAAO,UAAUJ,CAAK,EACpD,CACJ,EAGJ,IAAM4B,EAAQ,OAAO,OAAO5B,EAAM,MAAM,EACnC,OAAOG,GAASA,EAAM,IAAI,EAC1B,IAAI,CAAC,CAAE,MAAAqB,EAAO,KAAAC,EAAM,IAAAC,EAAK,KAAArB,CAAK,KAAO,CAClC,KAAAA,EACA,MAAAmB,EACA,KAAAC,EACA,SAAUb,EAASc,CAAG,CAC1B,EAAE,EAEN,MAAO,CAAE,OAAAX,EAAQ,MAAAa,EAAO,QAASP,EAAW,gBAAgB,CAAE,CAClE,CAhCsBH,EAAAC,GAAA,iBAkCtB,SAASQ,GAAStB,EAAML,EAAO,CAC3B,OAAOK,IAAS,aAAeL,EAAM,WAAaA,EAAM,OAAOK,CAAI,CACvE,CAFSa,EAAAS,GAAA,YAIF,SAASE,GAAmBC,EAAI9B,EAAO,CAC1C8B,EAAG,KAAK,0BAA0B,EAAE,GAAG,QAASC,GAAS,CACrDA,EAAM,eAAe,EACrB,GAAM,CAAE,KAAA1B,CAAK,EAAI0B,EAAM,cAAc,QACrCJ,GAAStB,EAAML,CAAK,EAAE,KAAK,CAAE,MAAA+B,CAAM,CAAC,CACxC,CAAC,EAEDD,EAAG,KAAK,2BAA2B,EAAE,GAAG,oBAAqB,MAAMC,GAAS,CACxEA,EAAM,eAAe,EACrB,IAAMC,EAAS,EAAED,EAAM,aAAa,EAC9B,CAAE,UAAAE,EAAW,KAAA5B,CAAK,EAAI2B,EAAO,QAAQ,SAAS,EAAE,KAAK,EACrDtB,EAAUqB,EAAM,OAAS,cAAgB,MAAMG,EAAoBD,CAAS,EAAI,OAClFvB,IAAY,MAAMyB,GAAWJ,EAAO/B,EAAOiC,EAAW5B,EAAM2B,EAAO,KAAK,EAAGtB,CAAO,CAC1F,CAAC,EAEDoB,EAAG,KAAK,kCAAkC,EAAE,GAAG,QAAS,MAAMC,GAAS,CACnEA,EAAM,eAAe,EACrB,IAAM3B,EAAS,EAAE2B,EAAM,aAAa,EAAE,QAAQ,SAAS,EACjDK,EAAc,MAAMC,EAAejC,EAAQJ,CAAK,EAClDoC,GAAaE,EAAMlC,EAAO,KAAK,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAGgC,CAAW,CACrF,CAAC,EAEDN,EAAG,KAAK,2BAA2B,EAAE,GAAG,QAAS,MAAMC,GAAS,CAC5DA,EAAM,eAAe,EACrB,GAAM,CAAE,KAAAQ,CAAK,EAAIR,EAAM,cAAc,QAAQ,SAAS,EAAE,QAClD9B,EAAO,MAAM,SAASsC,CAAI,EAC5BtC,GAAMuC,GAAqBT,EAAO9B,EAAMD,EAAO,CAAE,OAAQ,EAAK,CAAC,CACvE,CAAC,CACL,CA5BgBkB,EAAAW,GAAA,sBA8BhB,eAAsBK,EAAoBO,EAAM,CAC5C,IAAIC,EAAU,uDACdA,GAAW,WAAWC,EAAS,sBAAsB,sBAErD,QAAWtC,KAAQQ,GAAc,CAC7B,IAAM+B,EAAWvC,IAASoC,EAAO,WAAa,GACxCjB,EAAQP,GAAcZ,CAAI,EAChCqC,GAAW,kBAAkBrC,MAASuC,KAAYpB,aAGtD,OAAAkB,GAAW,gBAEJ,OAAO,OAAO,CACjB,MAAOC,EAAS,sBAAsB,EACtC,MAAOA,EAAS,uBAAuB,EACvC,SAAUE,GAAQA,EAAK,KAAK,QAAQ,EAAE,IAAI,EAC1C,YAAa,GACb,QAAAH,EACA,QAAS,CAAE,MAAO,GAAI,CAC1B,CAAC,CACL,CApBsBxB,EAAAgB,EAAA,uBAsBtB,SAASC,GAAWJ,EAAO/B,EAAOiC,EAAW5B,EAAM,CAAE,QAAAK,EAAS,IAAAoC,CAAI,EAAG3C,EAAO,CACxE,IAAMC,EAASU,GAAWmB,CAAS,EAAE,QAAQ5B,CAAI,EAC3C0C,EAAO3C,EAAO,KAEpBD,IAAUC,EAAO,QAAU,OAAY6B,EAEvC,IAAMe,EAAU,CACZ,MAAAjB,EACA,OAAQ,CAAC/B,CAAK,EACd,QAAAU,EACA,SAAUN,EAAO,OAAS,YAAc,MAC5C,EAIA,GAFA4C,EAAQ,UAAY,CAAC,EAEjB5C,EAAO,WACP,OAAW,CAAE,UAAA6C,EAAW,UAAAtC,CAAU,IAAKP,EAAO,UAC1C,GAAI,EAAA6C,GAAa,CAACA,EAAUjD,CAAK,GACjC,QAAWY,KAAYD,EACnBqC,EAAQ,UAAU,KAAK,IAAI,KAAK,KAAK,SAASpC,CAAQ,CAAC,EAKnE,GAAIR,EAAO,OAAQ,CACfA,EAAO,OAAOJ,EAAOgD,CAAO,EAC5B,eACO,CAACD,EAAM,CACdpB,GAASxB,EAAOH,CAAK,EAAE,KAAKgD,CAAO,EACnC,OAIAD,IAAS,GACTC,EAAQ,MAAQ7C,EACZ2C,GAAKE,EAAQ,UAAU,KAAK,IAAI,KAAK,KAAK,SAAS,CAAE,MAAO,6BAA8B,SAAUF,CAAI,CAAC,CAAC,EAC9G,KAAK,KAAK,QAAQzC,CAAI,EAAE2C,CAAO,GAG1BD,IAAS,GACdC,EAAQ,UAAY7C,EAChB2C,IAAKE,EAAQ,sBAAwBF,EAAM,IAC/C,KAAK,KAAK,QAAQ,IAAIzC,CAAI,EAAE,IAAI2C,CAAO,GAGlCD,IAAS,GACd,KAAK,KAAK,QAAQ1C,CAAI,EAAEL,CAAK,CAErC,CAhDSkB,EAAAiB,GAAA,cCxaT,IAAMe,EAAiB,CACnB,OAAQ,CAAE,MAAO,EAAG,MAAO,4BAA6B,YAAa,uBAAwB,EAC7F,SAAU,CAAE,MAAO,EAAG,MAAO,0BAA2B,YAAa,yBAA0B,EAC/F,KAAM,CAAE,MAAO,EAAG,MAAO,sBAAuB,YAAa,qBAAsB,EACnF,QAAS,CAAE,MAAO,EAAG,MAAO,yBAA0B,YAAa,wBAAyB,CAChG,EAEMC,GAAW,CACb,MAAO,CAAC,IAAK,CAAC,EACd,SAAU,MACV,MAAO,YACP,MAAO,EACX,EAEA,eAAsBC,GAAeC,EAAO,CACxC,IAAMC,EAAcD,EAAM,SAAS,WAAW,EACxCE,EAAUF,EAAM,WAAW,QAAQ,MAAM,EACzCG,EAAUC,EAAW,SAAS,EAC9BC,EAAUJ,EAAcK,GAAoBN,CAAK,EAAIO,GAAcP,CAAK,EAE1EQ,EACEC,EAAoB,KAAK,QAAQ,IAAI,mBAAmB,EAC9D,GAAIA,GAAmB,QAAUR,EAAa,CAC1C,IAAMI,EAAUI,EAAkB,IAAI,eAAeT,CAAK,EACpDU,EAAOV,EAAM,WAAW,MAAQK,EAAQ,OAE9CG,EAAc,CACV,QAAAH,EACA,KAAM,KAAK,IAAIK,EAAM,CAAC,EACtB,QAAS,KAAK,IAAI,KAAK,IAAIA,EAAM,CAAC,CAAC,EACnC,SAAUL,EAAQ,QAAU,KAAK,SAAS,IAAI,oBAAqB,OAAO,CAC9E,EAGJ,IAAMM,EAAU,MAAM,QAAQ,IAC1BX,EAAM,OAAO,QAAQ,IAAI,MAAOY,EAAQC,KAAW,CAC/C,GAAGD,EACH,MAAAC,EACA,cAAe,MAAMD,EAAO,SAAS,CAAE,WAAY,EAAK,CAAC,EACzD,gBAAiB,MAAMA,EAAO,WAAW,CAAE,WAAY,EAAK,CAAC,CACjE,EAAE,CACN,EAEIE,EAAW,CAAC,EAEhB,QAAWC,KAAUV,EACbF,IAAY,SACZW,EAAS,SAAW,CAAC,EACrBA,EAAS,OAAO,KAAKC,CAAM,IAE3BD,EAASC,EAAO,IAAI,IAAM,CAAC,EAC3BD,EAASC,EAAO,IAAI,EAAE,KAAKA,CAAM,GAyBzC,GArBAD,EAAW,OAAO,QAAQA,CAAQ,EAAE,IAAI,CAAC,CAACE,EAAMX,CAAO,KACnDA,EAAQ,QAAQU,GAAU,CACtBA,EAAO,IAAME,GAAcF,EAAO,IAAI,EACtCA,EAAO,UAAYlB,EAAekB,EAAO,IAAI,EAAE,WACnD,CAAC,EAEGZ,IAAY,OACZE,EAAQ,KAAK,CAACa,EAAGC,IAAMD,EAAE,KAAK,cAAcC,EAAE,IAAI,CAAC,EAEnDd,EAAQ,KAAK,CAACa,EAAGC,IAAM,CACnB,IAAMC,EAASvB,EAAeqB,EAAE,IAAI,EAAE,MAChCG,EAASxB,EAAesB,EAAE,IAAI,EAAE,MACtC,OAAOC,IAAWC,EAASH,EAAE,KAAK,cAAcC,EAAE,IAAI,EAAIC,EAASC,CACvE,CAAC,EAGE,CAAE,KAAAL,EAAM,QAAAX,EAAS,MAAOR,EAAemB,CAAI,EAAE,KAAM,EAC7D,EAEGb,IAAY,SAASW,EAAS,KAAK,CAACI,EAAGC,IAAMtB,EAAeqB,EAAE,IAAI,EAAE,MAAQrB,EAAesB,EAAE,IAAI,EAAE,KAAK,EAExGjB,EAAQ,QAAUS,EAAQ,QAAUG,EAAS,QAAUN,GAAa,OACpE,MAAO,CAAE,QAAAN,EAAS,QAAAS,EAAS,SAAAG,EAAU,YAAAN,EAAa,YAAa,OAAO,KAAK,WAAY,CAC/F,CAhEsBc,EAAAvB,GAAA,kBAkEf,SAASwB,GAAkBvB,EAAO,CACrC,GAAII,EAAW,gBAAgB,EAAG,MAAO,CAAE,UAAW,CAAC,6BAA6B,CAAE,CAC1F,CAFgBkB,EAAAC,GAAA,qBAIT,SAASC,GAAoBC,EAAIzB,EAAO,CAC3C0B,EAAwBD,EAAG,KAAK,SAAS,CAAC,EAC1CC,EAAwBD,EAAG,KAAK,SAAS,CAAC,EAC1CC,EAAwBD,EAAG,KAAK,SAAS,CAAC,EAE1C,SAASV,EAAOA,EAAQY,EAAUX,EAAO,QAAS,CAC9C,OAAAD,EAAS,OAAOA,GAAW,SAAW,CAACA,CAAM,EAAIA,EACjDA,EAASA,EAAO,IAAIa,GAAK,gBAAgBA,IAAI,EAAE,KAAK,IAAI,EACjDH,EAAG,KAAKV,CAAM,EAAE,GAAGC,EAAMa,GAAS,CACrCA,EAAM,eAAe,EACrBF,EAASE,CAAK,CAClB,CAAC,CACL,CAPSP,EAAAP,EAAA,UAST,SAASe,EAAUD,EAAO,CACtB,GAAM,CAAE,MAAAhB,CAAM,EAAIgB,EAAM,cAAc,QAAQ,SAAS,EAAE,QACzD,OAAO7B,EAAM,OAAO,QAAQa,CAAK,CACrC,CAHSS,EAAAQ,EAAA,aAKT,SAASC,EAAQF,EAAO,CACpB,OAAO,EAAEA,EAAM,aAAa,EAAE,QAAQ,SAAS,EAAE,KAAK,EAAE,IAC5D,CAFSP,EAAAS,EAAA,WAIThB,EAAO,cAAec,GAAS,CACdG,EAAiBH,EAAO7B,CAAK,GACpC,UAAU6B,EAAO,CAAE,OAAQ,EAAK,CAAC,CAC3C,CAAC,EAEDd,EAAO,qBAAsB,MAAMc,GAAS,CACxC,IAAMd,EAAS,EAAEc,EAAM,aAAa,EAAE,QAAQ,SAAS,EACjDI,EAAc,MAAMC,EAAenB,EAAQf,CAAK,EAClDiC,GAAaE,EAAMpB,EAAO,KAAK,OAAO,EAAE,KAAK,EAAE,KAAK,EAAGkB,CAAW,CAC1E,CAAC,EAEDlB,EAAO,0BAA2B,MAAMc,GAAS,CAC7C,GAAM,CAAE,YAAAI,EAAa,KAAAG,CAAK,EAAK,MAAMC,GAAyBN,EAAQF,CAAK,CAAC,GAAM,CAAC,EAC/EI,GAAaE,EAAMC,EAAMH,CAAW,CAC5C,CAAC,EAEDlB,EAAO,mBAAoB,MAAMc,GAAS,CACtC,MAAM,KAAK,QAAQ,IAAI,mBAAmB,GAAG,IAAI,iBAAiB7B,EAAO+B,EAAQF,CAAK,CAAC,CAC3F,CAAC,EAEDd,EAAO,mBAAoB,MAAMc,GAAS,CACtC,MAAM,KAAK,QAAQ,IAAI,mBAAmB,GAAG,IAAI,gBAAgB7B,CAAK,CAC1E,CAAC,EAEDe,EAAO,kBAAmB,MAAMc,GAAS,CACrC,MAAM,KAAK,QAAQ,IAAI,mBAAmB,GAAG,IAAI,cAAc7B,EAAO+B,EAAQF,CAAK,CAAC,CACxF,CAAC,EAEDd,EAAO,sBAAuB,MAAMc,GAAS,CACzC,MAAM,KAAK,QAAQ,IAAI,mBAAmB,GAAG,IAAI,mBAAmB7B,EAAO+B,EAAQF,CAAK,CAAC,CAC7F,CAAC,EAEDd,EAAO,oBAAqB,MAAMc,GAAS,CACvC,KAAK,QAAQ,IAAI,mBAAmB,GAAG,IAAI,gBAAgB7B,CAAK,CACpE,CAAC,EAEDe,EAAO,gBAAiBc,GAAS,CAC7B,GAAM,CAAE,MAAAhB,CAAM,EAAIgB,EAAM,cAAc,QACvBC,EAAUD,CAAK,GACtB,SAAShB,CAAK,EAAE,KAAK,CAAE,MAAAgB,CAAM,CAAC,CAC1C,CAAC,EAEDd,EAAO,CAAC,qBAAsB,eAAe,EAAGc,GAAS,CACrD,IAAMS,EAAST,EAAM,cAAc,QAAQ,SAAS,EAC9C,CAAE,OAAAU,EAAQ,OAAAC,EAAQ,OAAAC,CAAO,EAAIH,EAAO,QACpCI,EAAYJ,EAAO,cAAc,QAAQ,GAAG,OAAS,KAC3DtC,EAAM,iBAAiBuC,EAAQC,EAAQC,GAAU,KAAMH,EAAO,cAAc,OAAO,EAAE,QAASI,CAAS,CAC3G,CAAC,EAED3B,EAAO,CAAC,gBAAiB,iBAAiB,EAAGc,GAAS,CAClD,GAAM,CAAE,OAAAd,CAAO,EAAIc,EAAM,cAAc,QACxBC,EAAUD,CAAK,IACrBd,IAAW,gBAAkB,SAAW,UAAU,EAAE,CAAE,MAAAc,CAAM,CAAC,CAC1E,CAAC,EAAE,YAAY/B,EAAQ,EAEvBiB,EAAO,mBAAoBc,GAAS,CAChC,GAAIA,EAAM,gBAAkBA,EAAM,OAAQ,OAE1C,IAAMjB,EAASkB,EAAUD,CAAK,EAC9B,GAAI,CAACjB,EAAQ,OAEb,GAAM,CAAE,MAAAC,CAAM,EAAIgB,EAAM,cAAc,QAChCc,EAAUd,EAAM,cAAc,cAAc,QAAQ,GAAG,OAAS,KAEtEjB,EAAO,mBAAmBC,CAAK,GAAG,QAAQ,CAAE,UAAW8B,CAAQ,CAAC,CACpE,CAAC,EAED5B,EAAO,mBAAoBc,GAAS,CAChC,IAAMe,EAASd,EAAUD,CAAK,GAAG,KACjC,GAAI,CAACe,EAAQ,OAEb,IAAMC,EAAShB,EAAM,cACf,CAAE,MAAAiB,CAAM,EAAID,EAAO,QACnBE,EAAWH,GAAQ,OAAO,OAAO,YAAc,KAC/CI,EAAYH,EAAO,UAAU,SAAS,UAAU,GAAKC,IAAUC,EAAW,KAAOD,EAEvFG,GAAkB,CAAE,MAAO,YAAa,OAAAL,EAAQ,UAAAI,CAAU,CAAC,CAC/D,CAAC,EAAE,YAAYlD,EAAQ,EAEvBiB,EACI,cACA,MAAMc,GAAS,CACX,IAAMe,EAASd,EAAUD,CAAK,GAAG,KACjC,GAAI,CAACe,EAAQ,OAEb,IAAMM,EAAOlD,EAAM,MAAM,IAAI6B,EAAM,cAAc,KAAK,EACtD,MAAMe,EAAO,OAAO,CAAE,OAAQ,CAAE,eAAgBM,GAAM,IAAM,IAAK,CAAE,CAAC,CACxE,EACA,QACJ,CACJ,CAjHgB5B,EAAAE,GAAA,uBAmHhB,SAASa,GAAyBc,EAAM,CACpC,OAAO,KAAK,QAAQ,IAAI,mBAAmB,GAAG,IAAI,qBAAqBA,CAAI,CAC/E,CAFS7B,EAAAe,GAAA,4BAIT,SAAS/B,GAAoBN,EAAO,CAChC,IAAMK,EAAUL,EAAM,UAAU,OAAO,OAAOoD,GAAQ,CAACC,GAAa,IAAID,EAAK,QAAQ,CAAC,EAChFE,EAAQtD,EAAM,UAAU,KAAK,OAAOoD,GAAQA,EAAK,UAAU,EAEjE,MACI,CAAC,GAAG/C,EAAS,GAAGiD,CAAK,EAEhB,OAAOjD,GAAW,CACf,IAAMkD,EAASlD,EAAQ,OAAO,OAAO,MACrC,MAAO,CAACkD,EAAO,SAAS,UAAU,GAAK,CAACA,EAAO,SAAS,aAAa,CACzE,CAAC,EACA,IAAIH,GAAQ,CACT,IAAMI,EAAaJ,EAAK,WAExB,MAAO,CACH,GAAIA,EAAK,GACT,KAAMI,GAAY,MAAQ,OAC1B,KAAMA,EACN,KAAMJ,EAAK,IACf,CACJ,CAAC,CAEb,CAtBS9B,EAAAhB,GAAA,uBAwBT,SAASC,GAAcP,EAAO,CAC1B,OAAOA,EAAM,UAAU,OAAO,IAAIoD,GAAQ,CACtC,IAAMI,EAAaJ,EAAK,WAClBK,EAAaD,GAAY,MAAQ,UACjCE,EACFD,IAAe,YACdL,EAAK,OAAO,OAAO,MAAM,SAAS,MAAM,GAAK,CAAC,CAACA,EAAK,OAAO,MAAM,KAAKO,GAAKA,EAAE,MAAQ,MAAM,GAEhG,MAAO,CACH,GAAIP,EAAK,GACT,KAAMK,EACN,KAAMD,EACN,KAAMJ,EAAK,KACX,aAAcA,EAAK,OAAO,UAC1B,QAAAM,CACJ,CACJ,CAAC,CACL,CAjBSpC,EAAAf,GAAA,iBCvOT,eAAsBqD,GAAcC,EAAO,CACvC,GAAM,CAAE,WAAAC,CAAW,EAAID,EACjB,CAAE,WAAAE,CAAW,EAAID,EAEvB,MAAO,CACH,WAAY,CACR,SAAUC,EAAW,UACrB,OAAQC,GAAa,IAAIC,IAAS,CAAE,KAAAA,EAAM,MAAOC,GAAcD,CAAI,CAAE,EAAE,CAC3E,EACA,WAAY,KAAK,QAAQ,IAAI,cAAc,EAAE,MACjD,CACJ,CAXsBE,EAAAP,GAAA,iBAaf,SAASQ,GAAmBC,EAAIR,EAAO,CAC1CQ,EAAG,KAAK,2BAA2B,EAAE,GAAG,SAAU,MAAMC,GAAS,CAC7D,IAAMC,EAASD,EAAM,cACfE,EAAQD,EAAO,OAAS,SAAWA,EAAO,cAAgBA,EAAO,MACvE,MAAMV,EAAM,OAAO,CAAE,CAACU,EAAO,IAAI,EAAGC,CAAM,CAAC,CAC/C,CAAC,EAED,SAASC,EAAOA,EAAQC,EAAUC,EAAO,QAAS,CAC9CN,EAAG,KAAK,gBAAgBI,IAAS,EAAE,GAAGE,EAAML,GAAS,CACjDA,EAAM,eAAe,EACrBI,EAASJ,CAAK,CAClB,CAAC,CACL,CALSH,EAAAM,EAAA,UAOTA,EAAO,kBAAmB,MAAMH,GAAS,CACrC,MAAMT,EAAM,WAAW,KAAK,CAAE,MAAAS,CAAM,CAAC,CACzC,CAAC,EAEDG,EAAO,kBAAmBH,GAAS,CAC/B,IAAMM,EAAU,KAAK,QAAQ,IAAI,cAAc,EAC3CA,EAAQ,QAAQA,EAAQ,IAAI,qBAAqBf,CAAK,CAC9D,CAAC,EAEDY,EAAO,qBAAsBH,GAAS,CAClC,KAAK,KAAK,QAAQ,gBAAgB,CAAE,OAAQ,CAACT,CAAK,CAAE,CAAC,CACzD,CAAC,EAEDY,EACI,WACA,MAAMH,GAAS,CACX,IAAMO,EAAY,MAAMC,EAAoB,EACtCC,EAAO,CAAE,KAAM,uDAAwD,EACzEF,IAAc,MAAM,KAAK,KAAK,QAAQ,IAAI,KAAK,EAAE,IAAI,CAAE,MAAAP,EAAO,OAAQ,CAACT,CAAK,EAAG,UAAAgB,EAAW,MAAO,CAACE,CAAI,CAAE,CAAC,CACjH,EACA,mBACJ,EAEAN,EACI,cACA,MAAMH,GAAS,CACX,IAAMO,EAAYP,EAAM,OAAS,cAAgB,MAAMQ,EAAoB,EAAI,OAC3ED,IAAc,MAAM,KAAK,KAAK,QAAQ,IAAI,QAAQ,EAAE,IAAI,CAAE,MAAAP,EAAO,OAAQ,CAACT,CAAK,EAAG,UAAAgB,CAAU,CAAC,CACrG,EACA,mBACJ,CACJ,CA7CgBV,EAAAC,GAAA,sBCZhB,IAAMY,GAAc,CAChB,OAAQ,CAAE,MAAO,EAAG,MAAO,6BAA8B,EACzD,MAAO,CAAE,MAAO,EAAG,MAAO,2BAA4B,EACtD,WAAY,CAAE,MAAO,EAAG,MAAO,iCAAkC,EACjE,UAAW,CAAE,MAAO,EAAG,MAAO,+BAAgC,EAC9D,SAAU,CAAE,MAAO,EAAG,MAAO,8BAA+B,EAC5D,SAAU,CAAE,MAAO,EAAG,MAAO,8BAA+B,CAChE,EAEA,eAAsBC,GAAaC,EAAO,CACtC,IAAMC,EAAa,CAAC,EAEpB,QAAWC,KAAQF,EAAM,UAAU,SAC/BC,EAAWC,EAAK,IAAI,IAAM,CAAC,EAC3BD,EAAWC,EAAK,IAAI,EAAE,KAAKA,CAAI,EAGnC,MAAO,CACH,WAAY,OAAO,QAAQD,CAAU,EAChC,IAAI,CAAC,CAACE,EAAMC,CAAK,KACdA,EAAM,KAAK,CAAC,EAAGC,IAAM,EAAE,KAAK,cAAcA,EAAE,IAAI,CAAC,EAC1C,CAAE,KAAAF,EAAM,MAAAC,EAAO,MAAON,GAAYK,CAAI,EAAE,KAAM,EACxD,EACA,KAAK,CAACG,EAAGD,IAAMP,GAAYQ,EAAE,IAAI,EAAE,MAAQR,GAAYO,EAAE,IAAI,EAAE,KAAK,CAC7E,CACJ,CAhBsBE,EAAAR,GAAA,gBAkBf,SAASS,GAAkBC,EAAIT,EAAO,CACzC,IAAME,EAAOO,EAAG,KAAK,OAAO,EAE5BC,EAAwBR,CAAI,EAE5BA,EAAK,GAAG,YAAaS,GAAS,CAC1B,IAAMC,EAASD,EAAM,OAAO,QAAQ,OAAO,EACrC,CAAE,SAAAE,EAAU,KAAAC,CAAK,EAAIF,EAAO,QAE5BG,EAAM,IAAI,MAChBA,EAAI,IAAMH,EAAO,cAAc,eAAe,EAAE,IAChDG,EAAI,MAAM,MAAQ,OAClBA,EAAI,MAAM,OAAS,OACnBA,EAAI,MAAM,aAAe,MACzBA,EAAI,MAAM,SAAW,WACrBA,EAAI,MAAM,KAAO,UACjB,SAAS,KAAK,OAAOA,CAAG,EAExBJ,EAAM,cAAc,aAAa,aAAaI,EAAK,GAAI,EAAE,EACzDJ,EAAM,cAAc,aAAa,QAC7B,aACA,KAAK,UAAU,CAAE,KAAM,OAAQ,cAAe,GAAM,SAAAE,EAAU,KAAAC,CAAK,CAAC,CACxE,EAEAF,EAAO,iBAAiB,UAAW,IAAMG,EAAI,OAAO,EAAG,CAAE,KAAM,EAAK,CAAC,CACzE,CAAC,EAEDN,EAAG,KAAK,iBAAiB,EAAE,GAAG,SAAU,MAAME,GAAS,CACnD,MAAMK,EAAiBL,EAAOX,CAAK,GAAG,OAAO,CAAE,kBAAmBW,EAAM,cAAc,aAAc,CAAC,CACzG,CAAC,EAEDF,EAAG,KAAK,kCAAkC,EAAE,GAAG,QAASE,GAAS,CAC7DA,EAAM,eAAe,EACrB,GAAM,CAAE,OAAAM,CAAO,EAAIN,EAAM,cAAc,QAAQ,OAAO,EAAE,QACxDX,EAAM,eAAeiB,CAAM,CAC/B,CAAC,EAEDR,EAAG,KAAK,2BAA2B,EAAE,GAAG,QAASE,GAAS,CACtDA,EAAM,eAAe,EACrB,IAAMT,EAAOc,EAAiBL,EAAOX,CAAK,EACtCE,GAAM,KAAK,KAAK,QAAQ,OAAO,CAAE,KAAAA,EAAM,OAAQ,CAACF,CAAK,CAAE,CAAC,CAChE,CAAC,EAEDS,EAAG,KAAK,iCAAiC,EAAE,GAAG,QAASE,GAAS,CAC5DA,EAAM,eAAe,EACrB,IAAMT,EAAOc,EAAiBL,EAAOX,CAAK,EACrCE,IACDA,EAAK,aAAcA,EAAK,wBAAwB,cAAc,EAC7D,IAAIgB,EAAkBhB,CAAI,EAAE,OAAO,EAAI,EAChD,CAAC,EAEDO,EAAG,KAAK,yBAAyB,EAAE,GAAG,QAASE,GAAS,CACpDA,EAAM,eAAe,EACrBQ,GAASR,EAAOX,CAAK,CACzB,CAAC,EAEDS,EAAG,KAAK,2BAA2B,EAAE,GAAG,QAASE,GAAS,CACtDA,EAAM,eAAe,EACrBS,GAAWT,EAAOX,CAAK,CAC3B,CAAC,EAEDS,EAAG,KAAK,+BAA+B,EAAE,YAAY,CACjD,UAAW,KACX,gBAAiB,KACjB,kBAAmB,EACnB,MAAO,CAAC,EAAG,CAAC,EACZ,QAAS,QACT,cAAe,GACf,YAAa,GACb,MAAO,GACP,KAAM,CAAC,SAAU,KAAK,EACtB,MAAO,YACP,SAAU,IACV,QAAS,GACT,eAAgB,eAAgBY,EAAa,CAAE,MAAAV,EAAO,OAAAW,CAAO,EAAG,CAC5D,IAAMpB,EAAOc,EAAiBL,EAAOX,CAAK,EAC1C,GAAI,CAACE,EAAM,OAEX,IAAMqB,EAAM,SAAS,cAAc,KAAK,EACxCA,EAAI,UAAY,MAAM,eAAe,wDAAyD,CAAE,KAAArB,CAAK,CAAC,EAEtG,IAAMsB,EAAUD,EAAI,SAAS,CAAC,EAC9B,EAAEC,CAAO,EACJ,KAAK,mBAAmB,EACxB,GAAG,QAASb,GAAS,CAClB,GAAM,CAAE,UAAAc,EAAW,UAAAC,EAAY,EAAG,OAAAC,CAAO,EAAI,EAAEhB,EAAM,aAAa,EAAE,KAAK,EACzEX,EAAM,gBAAgBE,EAAMuB,EAAWC,EAAWC,CAAM,EACxDN,EAAY,MAAM,CACtB,CAAC,EAELA,EAAY,QAAQG,CAAO,CAC/B,CACJ,CAAC,CACL,CA7FgBjB,EAAAC,GAAA,qBC1BhB,eAAsBoB,GAAcC,EAAO,CACvC,IAAMC,EAAYD,EAAM,OAAO,UAAU,OAAO,OAAS,EACnDE,EAAUF,EAAM,aAAa,QAC7BG,EAAgBC,EAAW,WAAW,EACtCC,EAAS,CAAC,EAEhB,QAAWC,KAASJ,EAAS,CACzB,IAAMK,EAAUD,EAAM,GAChBE,EAAYL,GAAiBG,EAAM,UAAU,MAAM,CAAC,EACpDG,EAAO,MAAMH,EAAM,aAAa,EAChCI,EAAWJ,EAAM,QAAQ,UAAU,QAAU,SAC7CK,EAAU,YAAYL,EAAO,2BAA2B,IAAM,OAC9DM,EAAU,CAAE,MAAO,YAAYN,EAAO,2BAA2B,GAAK,CAAE,EAE9E,QAAWO,KAAQJ,EAAK,OAAQ,CAC5B,GAAI,CAACI,EAAK,OAAO,QAAUA,EAAK,MAAM,MAAQ,EAAG,SAEjD,IAAMC,EAAa,CAAC,EACdC,EAAUF,EAAK,OAAO,OAAO,GAAK,GAAK,EAAE,MAAM,MAAQ,CAAC,EAE9D,QAASG,EAAS,EAAGA,EAASD,EAAQ,OAAQC,IAAU,CACpD,GAAM,CAAE,MAAAC,EAAO,SAAAC,EAAU,QAAAC,EAAS,KAAAC,EAAM,UAAAC,CAAU,EAAIN,EAAQC,CAAM,EAEpEF,EAAW,KAAK,CACZ,KAAMG,EAAM,KACZ,IAAKA,EAAM,IACX,UAAAT,EACA,UAAWa,GAAaJ,EAAM,MAC9B,OAAAD,EACA,QAAAT,EACA,OAAQU,EAAM,GACd,QAASR,EAAK,SAAWQ,EAAM,GAAKR,EAAK,GACzC,UAAWC,EACL,4BACAD,EAAK,SACL,6BACA,oBAAoBI,EAAK,cAC/B,SAAAH,EACA,UAAWS,EACX,SAAUV,EAAK,SACf,UAAWI,EAAK,UAChB,QAASJ,EAAK,YACd,WAAYA,EAAK,WACjB,cAAeA,EAAK,eAAiBA,EAAK,WAC1C,UAAWI,EAAK,MAChB,KAAMO,IAASV,EAAWE,EAAUC,EAAK,MACzC,SAAUK,IAAaT,EAAK,aAAe,CAACI,EAAK,UAAYZ,GAAa,EAAI,IAC9E,OAAQgB,EAAM,OAAO,KAAK,MAC1B,KAAMP,EACAC,EACI,GAAGW,iBACH,GAAGA,mBACPb,EAAK,SACL,6BACAA,EAAK,cACL,kCACAA,EAAK,WACL,0BACAA,EAAK,YACL,uBACA,0BACN,MAAOC,EACD,EACAD,EAAK,WACL,EACAA,EAAK,YACL,EACAA,EAAK,SACL,EACAA,EAAK,cACL,EACA,CACV,CAAC,EAGDK,EAAW,SACXT,EAAOQ,EAAK,KAAK,IAAM,CAAC,EACxBR,EAAOQ,EAAK,KAAK,EAAE,KAAK,GAAGC,CAAU,IAKjD,GAAIT,EAAO,OAAQ,CACf,IAAMkB,EAAOnB,EAAW,QAAQ,EAC1B,CAACoB,EAAGC,IAAOD,EAAE,QAAUC,EAAE,MAAQD,EAAE,KAAK,cAAcC,EAAE,IAAI,EAAID,EAAE,MAAQC,EAAE,MAC5E,CAACD,EAAGC,IAAMD,EAAE,KAAK,cAAcC,EAAE,IAAI,EAC3CpB,EAAO,QAAQC,GAASA,EAAM,KAAKiB,CAAI,CAAC,EAI5C,IAAMG,GADa,MAAM1B,EAAM,aAAa,QAAQ,aAAa,IACrC,OAAO,QAAQ,CAACa,EAAMG,IAC9CH,EAAK,OAAO,IAAI,CAAC,CAAE,MAAAI,CAAM,KAAO,CAC5B,KAAMA,EAAM,KACZ,IAAKA,EAAM,IACX,OAAAD,EACA,OAAQC,EAAM,GACd,MAAOA,EAAM,MACb,KAAMA,EAAM,OAAO,KAAK,KAC5B,EAAE,CACN,EAEA,GAAIZ,EAAO,QAAUqB,GAAS,OAAQ,MAAO,CAAE,OAAArB,EAAQ,QAAAqB,EAAS,QAAStB,EAAW,gBAAgB,CAAE,CAC1G,CAtGsBuB,EAAA5B,GAAA,iBAwGf,SAAS6B,GAAmBC,EAAI7B,EAAO,CAC1C8B,EAAwBD,EAAG,KAAK,QAAQ,CAAC,EAEzCA,EAAG,KAAK,2BAA2B,EAAE,GAAG,oBAAqB,MAAME,GAAS,CACxEA,EAAM,eAAe,EACrB,IAAMC,EAASD,EAAM,OAAS,QAAU,EAAI,GACtCE,GAAUjC,EAAM,OAAO,UAAU,OAAO,OAAS,GAAKgC,EAC5D,MAAMhC,EAAM,OAAO,CAAE,+BAAgCiC,CAAO,CAAC,CACjE,CAAC,EAEDJ,EAAG,KAAK,+BAA+B,EAAE,GAAG,QAASE,GAAS,CAC1DA,EAAM,eAAe,EACrB,GAAM,CAAE,UAAAG,EAAW,OAAAlB,EAAQ,QAAAT,EAAS,SAAAW,CAAS,EAAI,EAAEa,EAAM,aAAa,EAAE,QAAQ,QAAQ,EAAE,KAAK,EAC5E/B,EAAM,aAAa,YAAY,IAAIO,CAAO,GACjD,qBAAqB2B,GAAa,EAAGlB,GAAU,EAAGE,IAAa,EAAI,CACnF,CAAC,EAEDW,EAAG,KAAK,0BAA0B,EAAE,GAAG,QAASE,GAAS,CACrDA,EAAM,eAAe,EAErB,GAAM,CAAE,UAAAG,EAAW,OAAAlB,EAAQ,QAAAT,EAAS,OAAA4B,CAAO,EAAI,EAAEJ,EAAM,aAAa,EAAE,QAAQ,QAAQ,EAAE,KAAK,EACvFK,EAAapC,EAAM,aAAa,YAAY,IAAIO,EAAS,CAAE,OAAQ,EAAK,CAAC,EAC/E,GAAI,CAAC6B,EAAY,OAEjB,IAAMnB,EAAQmB,EAAW,IAAID,EAAQ,CAAE,OAAQ,EAAK,CAAC,EAChDlB,GAELmB,EAAW,MAAM,KAAKnB,EAAO,CAAE,KAAMD,EAAQ,MAAOkB,CAAU,CAAC,CACnE,CAAC,EAEDL,EAAG,KAAK,iCAAiC,EAAE,GAAG,QAAS,MAAME,GAAS,CAClEA,EAAM,eAAe,EACrB,IAAMd,EAAQ,EAAEc,EAAM,aAAa,EAAE,QAAQ,QAAQ,EAC/CM,EAAc,MAAMC,EAAerB,EAAOjB,CAAK,EACjDqC,GAAaE,EAAMtB,EAAM,KAAK,OAAO,EAAE,KAAK,EAAE,KAAK,EAAGoB,CAAW,CACzE,CAAC,EAEDR,EAAG,KAAK,mBAAmB,EAAE,GAAG,SAAU,MAAME,GAAS,CACrD,GAAM,CAAE,UAAAS,EAAW,QAAAjC,CAAQ,EAAI,EAAEwB,EAAM,aAAa,EAAE,KAAK,EACrDU,EAAQV,EAAM,cAAc,cAClC,MAAM/B,EAAM,wBAAwB,OAAQ,CAAC,CAAE,IAAKO,EAAS,CAACiC,CAAS,EAAGC,CAAM,CAAC,CAAC,CACtF,CAAC,CACL,CA1CgBd,EAAAC,GAAA,sBCrGhB,IAAMc,GAAa,iDACbC,GAAe,6CAEfC,GAAY,CACd,KAAM,CAAC,OAAQ,QAAS,MAAO,QAAQ,EACvC,MAAO,CAAC,QAAS,OAAQ,MAAO,QAAQ,EACxC,IAAK,CAAC,MAAO,SAAU,OAAQ,OAAO,EACtC,OAAQ,CAAC,SAAU,MAAO,OAAQ,OAAO,CAC7C,EAEMC,GAAa,CACf,EAAG,8CACH,EAAG,uCACH,EAAG,8CACP,EAEMC,GAAS,CACX,CAAE,KAAM,OAAQ,KAAM,yBAA0B,EAChD,CAAE,KAAM,SAAU,KAAM,2BAA4B,EACpD,CAAE,KAAM,QAAS,KAAM,oBAAqB,EAC5C,CAAE,KAAM,MAAO,KAAM,qBAAsB,EAC3C,CAAE,KAAM,OAAQ,KAAM,6BAA8B,CACxD,EAEMC,GAAW,CACb,QAAS,CAAE,QAASC,GAAgB,aAAcC,GAAqB,WAAYC,EAAkB,EACrG,MAAO,CAAE,QAASC,GAAc,aAAcC,EAAkB,EAChE,OAAQ,CAAE,QAASC,GAAe,aAAcC,EAAmB,EACnE,OAAQ,CAAE,QAASC,GAAe,aAAcC,EAAmB,EACnE,OAAQ,CAAE,QAASC,GAAe,aAAcC,EAAmB,CACvE,EAEaC,EAAN,cAAkB,WAAY,CACjCC,GAAS,KACTC,GAAa,KACbC,GAAS,KACTC,GAAS,GACTC,GAAW,KACXC,GACAC,GAAa,CAAC,GAAO,GAAO,EAAK,EACjCC,GAAQ,GACRC,GAAY,GAEZ,aAAc,CACV,MAAM,EAEN,KAAK,WAAa,CAACC,EAAOC,IAAU,CAChC,GACI,KAAK,WACL,KAAKH,IACL,KAAKC,IACL,EAAEC,aAAiB,QACnB,CAACA,EAAM,OAAO,SAAS,YAAa,KAAK,EAEzC,OAEJ,IAAME,EAAYF,EAAM,eAClBG,EAAWH,EAAM,SACvB,GAAI,EAAAE,EAAU,KAAOC,EAAS,GAAKD,EAAU,KAAOC,EAAS,KAE7D,KAAKT,GAASO,EACV,EAAAA,GAAS,KAAKV,KAAWS,GAAS,KAAK,WAE3C,GAAIC,GAAS,CAAC,KAAK,SAAS,SAAS,IAAI,aAAa,EAAG,CAGrD,GAFI,KAAKV,IAAQ,OAAO,KAAKA,GAAO,MAAM,KAAKa,CAAS,EACxD,KAAKb,GAASS,EACV,CAAC,KAAKL,GAAU,OAAO,KAAK,OAAO,EACvC,aAAa,KAAKA,EAAQ,EAC1B,KAAKA,GAAW,KAChB,KAAK,OAAO,EAAI,OAEhB,KAAK,MAAM,CAEnB,EAEA,KAAKC,GAAcS,GAAS,CACxB,IAAMC,EAASD,EAAM,OACrB,GAAI,CAAC,CAAC,EAAG,CAAC,EAAE,SAASC,CAAM,EAAG,OAE9B,GAAID,EAAM,OAAS,UAAW,CAC1B,KAAKR,GAAWS,CAAM,EAAI,GAC1B,OAGJ,KAAKT,GAAWS,CAAM,EAAI,GAE1B,IAAMC,EAASF,EAAM,OACfG,EAAK,KAAK,QAAQ,CAAC,EAEzB,GAAIA,EAAI,CACJ,IAAMC,EAAQD,EAAG,cAAc,QAAQ,EACvC,GAAIA,EAAG,SAASD,CAAM,EAAG,CACjBE,GAAS,CAACA,EAAM,SAASF,CAAM,GAAGE,EAAM,OAAO,EACnD,OAEJ,GAAIF,EAAO,QAAQ,MAAM,GAAKA,EAAO,QAAQ,mBAAmB,EAAG,OACnE,GAAIE,EAAO,OAAOA,EAAM,OAAO,EAC/B,KAAK,MAAM,CAAE,MAAO,EAAK,CAAC,OACnB,KAAKhB,KACZ,aAAa,KAAKA,EAAM,EACxB,KAAKA,GAAS,MAGlB,KAAKK,GAAQ,EACjB,EAEA,KAAK,WAAa,IAAM,KAAK,MAAM,CAAE,MAAO,EAAK,CAAC,EAElD,KAAK,YAAcE,GAAS,CACpB,KAAKT,IAAUS,EAAM,KAAO,KAAKT,GAAO,IAAI,KAAK,MAAM,CAAE,MAAO,EAAK,CAAC,CAC9E,EAEA,OAAO,iBAAiB,YAAa,KAAKK,EAAW,EACrD,OAAO,iBAAiB,UAAW,KAAKA,EAAW,CACvD,CAEA,QAAS,CACL,KAAK,MAAM,CAAE,MAAO,EAAK,CAAC,EAC1B,OAAO,oBAAoB,YAAa,KAAKA,EAAW,EACxD,OAAO,oBAAoB,UAAW,KAAKA,EAAW,CAC1D,CAEA,WAAW,gBAAiB,CACxB,OAAO,YAAY,MAAM,eAAgB,CACrC,OAAQ,GACR,YAAa,GACb,SAAUc,EAAa,KAAK,CAChC,CAAC,CACL,CAEA,IAAI,WAAY,CACZ,OAAO,KAAKb,GAAW,CAAC,GAAK,KAAKA,GAAW,CAAC,CAClD,CAEA,IAAI,OAAQ,CACR,OAAO,KAAKN,EAChB,CAEA,IAAI,OAAQ,CACR,OAAO,KAAKA,IAAQ,KACxB,CAEA,IAAI,UAAW,CACX,OAAO,KAAK,OAAO,UAAU,OAAO,KAAKoB,GAAUA,EAAO,MAAM,MAAM,WAAatC,EAAU,CACjG,CAEA,IAAI,aAAc,CACd,OAAO,KAAK,OAAO,SAAS,WAAW,CAC3C,CAEA,SAAU,CACN,IAAM2B,EAAQ,KAAKT,GACbqB,EAAQ,KAAKrB,IAAQ,MAC3B,GAAI,CAACqB,EAAO,MAAO,CAAC,EAEpB,IAAIC,EAAW,KACTC,EAAUd,EAAM,QAChBe,EAAeC,EAAW,UAAU,EACpCC,EAAc,KAAK,YACnB,CAAE,WAAAC,EAAY,MAAAC,EAAO,WAAAC,EAAY,OAAAC,EAAQ,UAAAC,CAAU,EAAIV,EACvD,CAAE,OAAAW,CAAO,EAAIF,EACb,CACF,GAAAG,EACA,GAAAC,EAAK,CAAE,IAAK,EAAG,MAAO,CAAE,EACxB,QAAAC,EACA,GAAAC,EACA,OAAAC,EACA,MAAAC,EACA,MAAAC,EACA,QAAAC,EACA,YAAAC,EACA,WAAAC,EACA,WAAAC,EACJ,EAAIhB,EACEiB,EAAa,KAAK,SAAS,IAAI,OAAQ,gBAAgB,EAE7D,GAAIpB,IAAiB,OAAUA,IAAiB,QAAUD,EAAU,CAChE,IAAMsB,EAAYpB,EAAW,MAAM,EAAE,MAAM,GAAG,EACxCqB,EAAa,OAAOD,EAAU,CAAC,GAAG,KAAK,CAAC,GAAK,EAC7CE,EAAOF,EAAU,CAAC,GAAG,KAAK,GAAK,KAAK,OAAO,UAC3CG,EAAW,OAAOH,EAAU,CAAC,GAAG,KAAK,CAAC,GAAK,EAC3CI,EAAW,OAAO,OAAO,WAE3BC,EAAW,GACXlC,EAASiC,EAAS,SAAW,EAAIA,EAAS,CAAC,EAAI,KAEnD,GAAI,CAACjC,GAAUA,IAAWP,EAAO,CAC7B,IAAM0C,GAAU,KAAK,KAAK,QAC1BnC,EAASmC,GAAQ,OAAS,EAAIA,GAAQ,MAAM,EAAI,KAChDD,EAAW,GAGXlC,GAAUA,IAAWP,IACrBa,EAAW,CACP,KAAAyB,EACA,KAAMG,EAAW,gDAAkD,qCACnE,OAAQzC,EAAM,WAAWO,CAAM,EAAI8B,GAAY,QAAQE,CAAQ,CACnE,GAIR,GAAI,CAACzB,EAAS,CACV,IAAI6B,EACEC,EAAW5B,EAAW,QAAQ,EAC/B,MAAM,GAAG,EACT,IAAI6B,GAAKA,EAAE,KAAK,CAAC,EACjB,OAAO,OAAO,EAEnB,GAAID,EAAS,OAAQ,CACjB,IAAME,EAAMtB,EAAG,KAAOW,EAAaV,EAAG,IAAM,GAEtCsB,GADUvB,EAAG,OAASW,EAAaV,EAAG,MAAQ,IAC5BqB,EAClBE,EAAO,KAAK,KAAKD,EAAQH,EAAS,MAAM,EAE9CD,EAAS,CACL,IAAKI,EAAQA,EAAQ,IAAM,EAC3B,MAAOC,IAAS,EAAI,KAAK,KAAK,SAAS,mBAAmB,EAAIJ,EAAS,GAAGI,EAAO,CAAC,CACtF,EAGJ,MAAO,CACH,OAAAL,EACA,SAAA9B,EACA,QAASb,EAAM,EACnB,EAGJ,SAASiD,EAAOC,EAAK,CACjB,MAAO,OAAOA,EAAI,KAAK,QAC3B,CAFSC,EAAAF,EAAA,UAIT,SAASG,GAAKC,EAAGC,EAAG,CAChB,OAAOD,EAAE,cAAcC,CAAC,CAC5B,CAFSH,EAAAC,GAAA,QAIT,IAAMG,GAAY3C,EAAM,OAAO,QAAQ,WAAW,MAC7C,IAAIiC,GAAK,KAAK,KAAK,SAAS,OAAO,KAAK,UAAUA,CAAC,CAAC,CAAC,EACrD,KAAKO,EAAI,EACT,IAAIH,CAAM,EACV,KAAK,EAAE,EAENO,GAASvC,EAAcM,EAAO,OAAO,IAAIsB,GAAKA,EAAE,KAAK,EAAItB,EAAO,OAAO,MAAM,MAAM,GAAG,EAE5F,SAASkC,EAAMC,EAAUC,EAAQ,CAC7B,OAAKD,EAAS,OAEV,OAAO,KAAK,KAAK,SAASC,CAAM,QAChCD,EAAS,IAAIb,GAAKI,EAAOJ,EAAE,MAAM,QAAQ,IAAK,GAAG,EAAE,UAAU,CAAC,CAAC,EAAE,KAAK,EAAE,EACxE,aAJyB,EAMjC,CAPSM,EAAAM,EAAA,SAST,IAAMG,GAASnF,GAAO,IAAI,CAAC,CAAE,KAAAoF,EAAM,KAAAC,CAAK,EAAGC,KAAW,CAClD,MAAAA,EACA,KAAAD,EACA,MAAO,KAAK,KAAK,SAAS,OAAO,KAAK,WAAWD,CAAI,GAAK,qBAAqB,EAC/E,OAAQA,IAAS,OAAShC,EAAM,MAAQA,EAAM,YAAY,KAAKmC,GAAKA,EAAE,OAASH,CAAI,GAAG,QAAU,CACpG,EAAE,EAEII,GAAgBC,GAAQtD,EAAO,mBAAmB,KAAK,KAAK,IAAI,GAAK,EACrEuD,GAAYP,GAAO,OAAOK,GAAe,CAAC,EAAE,CAAC,EAE/CG,GAAcR,GACb,IAAI,CAAC,CAAE,MAAAS,EAAO,MAAAC,EAAO,MAAAP,CAAM,IAAM,kBAAkBA,UAAcO,MAAUD,YAAgB,EAC3F,KAAK,EAAE,EACZ,OAAIxC,EAAM,UAASuC,IAAe,OAAO,KAAK,KAAK,SAAS,qBAAqB,MAAMvC,EAAM,gBAEtF,CACH,SAAAhB,EACA,QAAAC,EACA,QAASd,EAAM,GACf,KAAMA,EAAM,SAAS,KACrB,GAAAwB,EACA,GAAIW,EAAaV,EAAK,CAAE,IAAK,CAAE,EAC/B,GAAIE,EAAG,MACP,KAAMP,EACN,MAAAU,EACA,QAAAC,EACA,OAAAH,EACA,QAAAF,EACA,UAAW,CACP,MAAOJ,EACP,KAAM9C,GAAW8C,EAAU,GAAG,EAAE,CAAC,CACrC,EACA,MAAOV,EAAM,MACb,YAAAK,EACA,cAAeA,GAAe,CAACD,EAAW,UAAU,EACpD,SAAU,KAAK,SACf,MAAO,CACH,UAAWG,EAAM,UAAU,IAC3B,OAAQA,EAAM,OAAO,IACrB,KAAMA,EAAM,KAAK,GACrB,EACA,OAAQ,CACJ,KAAMgD,GACN,OAAQC,EACZ,EACA,IACIX,EAAMvB,GAAY,sBAAsB,EACxCuB,EAAMxB,EAAY,sBAAsB,EACxCwB,EAAMzB,EAAa,uBAAuB,EAC9C,OAAQwB,GAAO,IAAIP,CAAM,EAAE,KAAK,EAAE,EAClC,UAAAM,GACA,UAAW3C,EAAM,aAAa,KAAKiC,GAAKA,EAAE,WAAa,OAAO,EAC9D,SAAUjC,EAAM,UAAU,IAC9B,CACJ,CAEA2D,IAAS,CACL,KAAKhF,GAAS,KACd,KAAKG,GAAS,GACd,KAAKI,GAAQ,GACb,KAAKC,GAAY,GAEb,KAAKN,KAAW,OAChB,aAAa,KAAKA,EAAM,EACxB,KAAKA,GAAS,MAGlB,IAAM+E,EAAS,YAAY,cAC3B,KAAK,OAASA,EAAO,QAErB,IAAIhE,EAAK,KAAK,QACd,GAAI,CAACA,EAAI,OAAQ,KAAK,OAASgE,EAAO,OACtChE,EAAG,IAAI,CAAE,UAAW,CAAE,CAAC,EAEvB,QAASiE,KAAO,KAAK,YAAY,qBAAqB,EAClD,MAAM,KAAK,QAAQA,EAAI,OAAQ,KAAMjE,CAAE,EAG3CA,EAAG,OAAO,EAEV,KAAK,SAAW,KAChB,KAAK,OAASgE,EAAO,MACzB,CAEA,MAAME,EAAU,CAAC,EAAG,CAChB,IAAMF,EAAS,YAAY,cAC3B,GAAI,GAACE,EAAQ,OAAS,CAAC,KAAKjF,IAAU,CAAC,CAAC+E,EAAO,SAAUA,EAAO,KAAK,EAAE,SAAS,KAAK,MAAM,GAE3F,IAAIE,EAAQ,MAAO,OAAO,KAAKH,GAAOG,CAAO,EAE7C,KAAK/E,GAAW,WAAW,IAAM,CAC7B,KAAKA,GAAW,KACZ,MAAKD,IACT,KAAK6E,GAAOG,CAAO,CACvB,CAAC,EACL,CAEA,MAAM,QAAQC,EAAQ,GAAOD,EAAU,CAAC,EAAG,CACvC,IAAIE,EACAC,EAEJ,GAAI,KAAKrF,KAAe,KAAKD,GAAQ,CACjC,IAAMuF,EAAU,KAAK,QAAQ,KAAK,UAAU,EAAE,CAAC,EAC3CA,IACAF,EAAcE,EAAQ,QAAQ,KAC9BD,EAAYC,EAAQ,WAM5B,GAFA,MAAM,MAAM,QAAQH,EAAOD,CAAO,EAE9BE,EAAa,CACb,IAAME,EAAU,MAAM,KAAKC,GAAaH,CAAW,EAC/CC,EAAY,IAAGC,EAAQ,UAAYD,GAG3C,KAAKrF,GAAa,KAAKD,EAC3B,CAEA,OAAOoF,EAAO,CACV,GAAI,CAAC,KAAKpF,IAAQ,OAAS,KAAK,UAAW,OAE3C,GAAIoF,EAAO,OAAO,MAAM,OAAO,EAAI,EAEnC,IAAMK,EAAQhE,EAAW,OAAO,EAC3BgE,EACA,KAAKvF,GAAS,WAAW,IAAM,MAAM,OAAO,EAAI,EAAGuF,CAAK,EADjD,MAAM,OAAO,EAAI,CAEjC,CAEA,YAAYC,EAAM,CACd,EAAE,MAAM,EAAE,OAAOA,CAAI,EACrB,KAAK,SAAWA,CACpB,CAEA,aAAc,CACV,IAAMjF,EAAQ,KAAKT,GACnB,GAAI,CAACS,EAAO,OAEZ,IAAMkF,EAAU,KAAK,QAAQ,CAAC,EACxBC,EAAQnF,EAAM,eAAe,EAC7BoF,EAAMF,EAAQ,sBAAsB,EACpCG,EAAe,OAAO,4BAA4BrF,EAAM,SAAS,OAAO,EACxEO,EAAS,CACX,EAAG8E,EAAa,EAChB,EAAGA,EAAa,EAChB,MAAOrF,EAAM,QAAQ,MAAQmF,EAC7B,OAAQnF,EAAM,QAAQ,OAASmF,EAC/B,IAAI,OAAQ,CACR,OAAO,KAAK,EAAI,KAAK,KACzB,EACA,IAAI,QAAS,CACT,OAAO,KAAK,EAAI,KAAK,MACzB,CACJ,EAEIG,EAEEC,EAAYvF,EAAM,QAAUzB,GAAUyC,EAAW,UAAU,CAAC,EAAE,MAAM,EAAI,CAAC,MAAO,QAAQ,EAE9F,KAAOuE,EAAU,QAAU,CAACD,GAAQ,CAChC,IAAME,EAAWD,EAAU,MAAM,EAE7BC,IAAa,QACbF,EAAS,CACL,EAAG/E,EAAO,EAAI6E,EAAI,MAClB,EAAGK,GAAmBL,EAAK7E,CAAM,CACrC,EACI+E,EAAO,EAAI,IAAGA,EAAS,SACpBE,IAAa,SACpBF,EAAS,CACL,EAAG/E,EAAO,MACV,EAAGkF,GAAmBL,EAAK7E,CAAM,CACrC,EACI+E,EAAO,EAAIF,EAAI,MAAQ,OAAO,aAAYE,EAAS,SAChDE,IAAa,OACpBF,EAAS,CACL,EAAGI,GAAmBN,EAAK7E,CAAM,EACjC,EAAGA,EAAO,EAAI6E,EAAI,MACtB,EACIE,EAAO,EAAI,IAAGA,EAAS,SACpBE,IAAa,WACpBF,EAAS,CACL,EAAGI,GAAmBN,EAAK7E,CAAM,EACjC,EAAGA,EAAO,MACd,EACI+E,EAAO,EAAIF,EAAI,OAAS,OAAO,cAAaE,EAAS,SAIjE,OAAIA,IACAJ,EAAQ,MAAM,KAAO,GAAGI,EAAO,MAC/BJ,EAAQ,MAAM,IAAM,GAAGI,EAAO,OAG3BA,CACX,CAEA,kBAAkBL,EAAM,CAEpB,IAAMrE,EADQ,KAAKrB,IACE,MACrB,GAAI,CAACqB,EAAO,OAEZA,EAAM,KAAKR,CAAS,EAAI,KAExB6E,EAAK,GAAG,aAAc,IAAM,CACxB,KAAKvF,GAAS,GACd,KAAKK,GAAY,EACrB,CAAC,EAEDkF,EAAK,GAAG,aAAc,IAAM,CACxB,KAAKlF,GAAY,GACb,MAAKD,KACT,KAAKJ,GAAS,GACd,KAAK,MAAM,EACf,CAAC,EAEDuF,EAAK,GAAG,WAAY,IAAM,CACtBA,EAAK,IAAI,UAAW,EAAG,EACvBA,EAAK,IAAI,gBAAiB,MAAM,EAEhC,OAAO,iBACH,UACA,IAAM,CACFA,EAAK,IAAI,UAAW,CAAC,EACrBA,EAAK,IAAI,gBAAiB,EAAE,CAChC,EACA,CAAE,KAAM,EAAK,CACjB,CACJ,CAAC,EAEDA,EAAK,KAAK,OAAO,EAAE,GAAG,SAAU,MAAM5E,GAAS,CAC3C,IAAME,EAASF,EAAM,cACfgE,EAAQ9D,EAAO,cACfoF,EAAOpF,EAAO,KAEpBA,EAAO,KAAK,EAERoF,IAAS,eAAgB,MAAM/E,EAAM,OAAO,CAAE,CAAC+E,CAAI,EAAGtB,CAAM,CAAC,EAC5D,MAAMzD,EAAM,WAAW,OAAO,CAAE,kBAAmByD,CAAM,CAAC,CACnE,CAAC,EAEDY,EAAK,KAAK,2BAA2B,EAAE,GAAG,oBAAqB5E,GAAS,CACpEA,EAAM,eAAe,EACrB,GAAM,CAAE,IAAAyC,EAAK,MAAAuB,CAAM,EAAIzD,EAAM,WACvBgF,EAASvF,EAAM,OAAS,QAAU,EAAI,GACtCwF,EAAW,KAAK,QAAQxB,EAAQuB,EAAQ,EAAG9C,CAAG,EAChD+C,IAAaxB,GAAOzD,EAAM,OAAO,CAAE,oCAAqCiF,CAAS,CAAC,CAC1F,CAAC,EAEDZ,EAAK,KAAK,4BAA4B,EAAE,GAAG,QAAS5E,GAAS,CACzDA,EAAM,eAAe,EACrB,KAAK,KAAK,QAAQ,aAAa,CAAE,OAAQ,CAACO,CAAK,CAAE,CAAC,CACtD,CAAC,EAEDqE,EAAK,KAAK,0BAA0B,EAAE,GAAG,QAAS,MAAM5E,GAAS,CAC7DA,EAAM,eAAe,EAErB,IAAMyF,GAAU,MAAM,SAASzH,EAAU,GAAG,SAAS,EACrD,YAAYyH,EAAQ,sBAAuBzH,EAAU,EAErD,IAAM0H,EAAW,KAAK,SAClB,KAAK,SAAU,MAAMA,EAAS,OAAO,EACpC,MAAMnF,EAAM,wBAAwB,OAAQ,CAACkF,CAAM,CAAC,CAC7D,CAAC,EAEDb,EAAK,KAAK,yBAAyB,EAAE,GAAG,QAAS5E,GAAS,CACtDA,EAAM,eAAe,EACrB,IAAM2F,EAAO3F,EAAM,cAAc,QAAQ,KACzCO,EAAM,MAAMoF,CAAI,EAAE,KAAK,CAAE,MAAA3F,CAAM,CAAC,CACpC,CAAC,EAED4E,EAAK,KAAK,8BAA8B,EAAE,GAAG,QAAS5E,GAAS,CAC3DA,EAAM,eAAe,EACrBO,EAAM,aAAaP,CAAK,CAC5B,CAAC,EAED4E,EAAK,KAAK,0DAA0D,EAAE,GAAG,oBAAqB5E,GAAS,CACnGA,EAAM,eAAe,EAErB,IAAM4F,EAAY5F,EAAM,cAAc,QAAQ,SAAW,eAAiB,QAAU,UAC9EyC,EAAMlC,EAAM,OAAO,WAAWqF,CAAS,GAAG,IAE3CnD,IACDzC,EAAM,OAAS,QAASO,EAAM,kBAAkBqF,EAAW,CAAE,IAAAnD,CAAI,CAAC,EACjElC,EAAM,kBAAkBqF,CAAS,EAC1C,CAAC,EAEDhB,EAAK,KAAK,2BAA2B,EAAE,GAAG,QAAS5E,GAAS,CACxDA,EAAM,eAAe,EACrB6F,GAAWtF,CAAK,CACpB,CAAC,EAED,IAAMuF,EAAQlB,EAAK,KAAK,yBAAyB,EACjDkB,EAAM,YAAY,CACd,SAAU,CAAC,MAAO,SAAU,OAAQ,OAAO,EAC3C,MAAO,YACP,MAAO,GACP,kBAAmB,EACnB,cAAe,GACf,QAAS,OACb,CAAC,EACDA,EAAM,OAAO,eAAe,EAAE,GAAG,aAAc9F,GAAS,CACpD,EAAEA,EAAM,aAAa,EAAE,YAAY,MAAM,CAC7C,CAAC,EACD8F,EACK,OAAO,SAAS,EAChB,YAAY,SAAU,cAAe,EAAI,EACzC,YAAY,SAAU,gBAAiB,CAACC,EAAa,CAAE,OAAAC,EAAQ,QAAAC,CAAQ,IAAM,CAC1E,KAAKxG,GAAQ,GACbwG,EAAQ,iBAAiB,cAAc,EAAE,QAAQzE,GAAS,CACtDA,EAAM,iBAAiB,QAAS,MAAMxB,GAAS,CAC3CA,EAAM,eAAe,EACrB,MAAMkG,GAAQ3F,EAAO,mBAAmB,KAAK,KAAK,KAAM,OAAOiB,EAAM,QAAQ,KAAK,CAAC,CACvF,CAAC,CACL,CAAC,CACL,CAAC,EACA,YAAY,SAAU,gBAAiB,IAAM,CACtCoD,EAAK,KAAK,UAAU,EAAE,SAC1B,KAAKnF,GAAQ,GACjB,CAAC,EAELmF,EAAK,KAAK,4BAA4B,EAAE,GAAG,QAAS,KAAKF,GAAa,KAAK,IAAI,CAAC,CACpF,CAEA,KAAMA,GAAalB,EAAM,CACrBA,EAAO,OAAOA,GAAS,SAAWA,EAAOA,EAAK,cAAc,QAAQ,KAEpE,IAAIqB,EAAU,KAAK,QACfJ,EAAUI,EAAQ,KAAK,UAAU,EAC/BsB,EAAS1B,EAAQ,CAAC,GAAG,QAAQ,KAKnC,GAHAA,EAAQ,OAAO,EACfI,EAAQ,KAAK,4BAA4B,EAAE,YAAY,QAAQ,EAE3DsB,IAAW3C,EAAM,CACjB,KAAK/D,GAAQ,GACb,OAGJ,IAAMc,EAAQ,KAAK,MACb,CAAE,QAAA6F,EAAS,aAAAC,EAAc,WAAAC,CAAW,EAAIjI,GAASmF,CAAI,EACrD+C,EAAO,MAAMH,EAAQ7F,CAAK,EAC1B,CAAE,UAAAiG,EAAY,CAAC,CAAE,EAAKF,GAAe,MAAMA,EAAW/F,CAAK,GAAO,CAAC,EACzE,GAAI,CAACgG,EAAM,OAAO,GAAG,cAAc,KAAKE,EAAS,GAAGjD,UAAc,CAAE,KAAM,KAAKtE,GAAO,IAAK,CAAC,CAAC,EAE7FqH,EAAK,KAAO,KAAK,KAAK,KACtBA,EAAK,YAAc,KAAK,YAExB,KAAK9G,GAAQ,GAEboF,EAAQ,KAAK,6BAA6BrB,IAAO,EAAE,SAAS,QAAQ,EACpEqB,EAAUA,EAAQ,CAAC,EAEnB,IAAM6B,EAAM,SAAS,cAAc,KAAK,EACxCA,EAAI,UAAY,MAAM,eAAerG,EAAamD,CAAI,EAAG+C,CAAI,EAE7D9B,EAAUiC,EAAI,kBACdjC,EAAQ,UAAU,IAAI,UAAW,GAAG+B,CAAS,EACxC7F,EAAW,WAAW,GAAG8D,EAAQ,UAAU,IAAI,cAAc,EAC9D8B,EAAK,SAAS9B,EAAQ,UAAU,IAAI,SAAS,EACjDA,EAAQ,QAAQ,KAAOjB,EACvBiB,EAAQ,MAAM,YAAY,eAAgB9D,EAAW,QAAQ,EAAE,KAAK,GAAK,MAAM,EAC/E,KAAK,QAAQ,OAAO8D,CAAO,EAE3B,IAAMkC,EAAOlC,EAAQ,sBAAsB,EACrCvE,EAAS2E,EAAQ,sBAAsB,EAEzC+B,EAAO1G,EAAO,EAAIyG,EAAK,MACvBC,EAAO,IAAGA,EAAO1G,EAAO,OAE5B,IAAM2G,EAAY,SAAS,OAAO,iBAAiBhC,CAAO,EAAE,OAAO,EAC/DiC,EAAM1B,GAAmBuB,EAAMzG,EAAQ2G,CAAS,EAEpD,OAAApC,EAAQ,MAAM,KAAO,GAAGmC,MACxBnC,EAAQ,MAAM,IAAM,GAAGqC,MAEvBT,EAAa,EAAE5B,CAAO,EAAGlE,CAAK,EAEvBkE,CACX,CACJ,EAxlBa3B,EAAA7D,EAAA,OA0lBb,SAASmG,GAAmBjF,EAAID,EAAQ6G,EAAS,EAAG,CAChD,IAAIC,EAAI9G,EAAO,EAAIA,EAAO,OAAS,EAAIC,EAAG,OAAS,EACnD,OAAI6G,EAAI7G,EAAG,OAAS,OAAO,cAAa6G,EAAI,OAAO,YAAc7G,EAAG,OAAS4G,GACzEC,EAAI,IAAGA,EAAID,GACRC,CACX,CALSlE,EAAAsC,GAAA,sBAOT,SAASC,GAAmBlF,EAAID,EAAQ,CACpC,IAAIsC,EAAItC,EAAO,EAAIA,EAAO,MAAQ,EAAIC,EAAG,MAAQ,EACjD,OAAIqC,EAAIrC,EAAG,MAAQ,OAAO,aAAY,EAAI,OAAO,WAAaA,EAAG,OAC7DqC,EAAI,IAAGA,EAAI,GACRA,CACX,CALSM,EAAAuC,GAAA,sBAOT,SAASQ,GAAWtF,EAAO,CACvB,SAAS0G,EAAOC,EAAS,CACrB,YAAY,OAAO,CACf,KAAM,KAAK,KAAK,GAChB,QAAAA,EACA,QAAS,YAAY,WAAW,CAAE,MAAA3G,CAAM,CAAC,CAC7C,CAAC,CACL,CANSuC,EAAAmE,EAAA,UAQT,GAAM,CAAE,KAAAE,EAAM,WAAAtG,CAAW,EAAIN,EACvB,CAAE,GAAAa,EAAI,QAAAC,CAAQ,EAAIR,EAClBuG,EAAcX,EAAS,mBAAoB,CAAE,KAAAU,CAAK,CAAC,EACnDE,EAAY,KAAK,KAAK,OAAO,0CAA2C,CAAE,KAAAF,CAAK,CAAC,EAEtF,GAAI/F,EAAG,QAAUA,EAAG,IAAK,OAAO,GAAG,cAAc,KAAKgG,CAAW,EACjE,GAAI/F,EAAQ,MAAQ,EAAG,OAAO,GAAG,cAAc,KAAKgG,CAAS,EAE7D,IAAMC,EAAW/G,EAAM,UAAU,KAAK,KAAKgH,GAAQA,EAAK,WAAatJ,EAAY,EAE7EiJ,EAAU,gFACTI,IAAUJ,GAAW,mBAC1BA,GAAW,mBACPI,IAAUJ,GAAW,WAAWT,EAAS,4BAA4B,gBACzES,GAAW,GAAGT,EAAS,0BAA0B,eAE7Ca,IACAJ,GAAW,+EACXA,GAAW,iBAAiB,KAAK,KAAK,SAAS,qCAAqC,eACpFA,GAAW,GAAGT,EAAS,uBAAuB,gBAGlD,IAAI,OAAO,CACP,MAAOA,EAAS,mBAAmB,EACnC,QAAAS,EACA,QAAS,CACL,IAAK,CACD,KAAM,+BACN,MAAOT,EAAS,iBAAiB,EACjC,SAAU,MAAM7B,GAAQ,CACpB,GAAM,CAAE,WAAA/D,CAAW,EAAIN,EACjB,CAAE,GAAAa,EAAI,QAAAC,CAAQ,EAAIR,EAExB,GAAIO,EAAG,QAAUA,EAAG,IAAK,OAAO6F,EAAOG,CAAW,EAClD,GAAI/F,EAAQ,MAAQ,EAAG,OAAO4F,EAAOI,CAAS,EAE9C,IAAMlF,EAAWyC,EAAK,KAAK,eAAe,EAAE,IAAI,EAC1ClC,EAAQ,GAAGtB,EAAG,SAASA,EAAG,MAEhC,GAAIe,IAAa,WACb8E,EAAOR,EAAS,4BAA6B,CAAE,KAAAU,EAAM,MAAAzE,CAAM,CAAC,CAAC,EAC7D,MAAMnC,EAAM,OAAO,CACf,6BAA8Ba,EAAG,IACjC,kCAAmCC,EAAQ,MAAQ,CACvD,CAAC,MACE,CACH4F,EAAO,KAAK,KAAK,OAAO,+CAAgD,CAAE,KAAAE,EAAM,MAAAzE,CAAM,CAAC,CAAC,EACxF,IAAM8E,EAAQpG,EAAG,MAAQ,KAAK,MAAMA,EAAG,IAAM,CAAC,EAC9C,MAAMb,EAAM,OAAO,CACf,6BAA8B,KAAK,IAAIiH,EAAOpG,EAAG,GAAG,EACpD,kCAAmCC,EAAQ,MAAQ,CACvD,CAAC,EAET,CACJ,EACA,GAAI,CACA,KAAM,+BACN,MAAOoF,EAAS,gBAAgB,CACpC,CACJ,CACJ,CAAC,EAAE,OAAO,EAAI,CAClB,CAtES3D,EAAA+C,GAAA,cC5oBT,IAAI4B,EAAM,KAEV,MAAM,KAAK,QAAS,IAAM,CAKtB,IAAMC,EAAW,CAAC,QAAS,SAAU,QAAS,QAAQ,EAAE,IAAIC,GAAKC,EAAS,4BAA4BD,GAAG,CAAC,EAAE,KAAK,IAAI,EACrHE,EAAgB,SAAU,OAAQH,EAAU,CAAE,MAAO,OAAQ,CAAC,EAM9DG,EAAgB,UAAW,QAAS,GAAM,CAAE,SAAUC,EAAa,CAAC,EAEpED,EAAgB,WAAY,OAAQ,QAAS,CACzC,QAAS,CACL,KAAME,EAAY,WAAY,cAAc,EAC5C,MAAOA,EAAY,WAAY,eAAe,EAC9C,IAAKA,EAAY,WAAY,aAAa,EAC1C,OAAQA,EAAY,WAAY,gBAAgB,CACpD,CACJ,CAAC,EAEDF,EAAgB,QAAS,OAAQ,IAAK,CAClC,MAAO,CACH,IAAK,EACL,IAAK,IACL,KAAM,EACV,CACJ,CAAC,EAEDA,EAAgB,WAAY,QAAS,EAAK,EAK1CA,EAAgB,WAAY,OAAQ,MAAO,CACvC,QAAS,CACL,KAAME,EAAY,WAAY,cAAc,EAC5C,KAAMA,EAAY,WAAY,cAAc,EAC5C,IAAKA,EAAY,WAAY,aAAa,CAC9C,CACJ,CAAC,EAEDF,EAAgB,OAAQ,OAAQ,EAAE,EAIlCA,EAAgB,SAAU,OAAQ,EAAE,EAEpCA,EAAgB,YAAa,QAAS,EAAI,EAE1CA,EAAgB,iBAAkB,QAAS,EAAK,EAEhDA,EAAgB,iBAAkB,QAAS,EAAK,EAIhDA,EAAgB,UAAW,OAAQ,QAAS,CACxC,QAAS,CACL,KAAME,EAAY,UAAW,cAAc,EAC3C,KAAMA,EAAY,UAAW,cAAc,EAC3C,MAAOA,EAAY,UAAW,eAAe,CACjD,CACJ,CAAC,EAEDF,EAAgB,iBAAkB,QAAS,EAAI,EAI/CA,EAAgB,SAAU,QAAS,EAAK,EAExCA,EAAgB,YAAa,QAAS,EAAK,EAI3CA,EAAgB,YAAa,QAAS,EAAI,CAC9C,CAAC,EAED,MAAM,KAAK,QAAS,IAAM,CAClBG,EAAW,SAAS,GAAGF,GAAa,EAAI,CAChD,CAAC,EAED,MAAM,GAAG,uBAAwB,CAACG,EAAGC,IAAS,CAC1C,IAAMC,EAAMD,EAAK,KAAK,iBAAiBE,IAAY,EAEnD,SAASC,EAAYC,EAAMC,EAAKC,EAAM,KAAM,CACxC,IAAMC,EAAYb,EAAS,QAAQW,GAAK,EACxCJ,EAAI,KAAK,UAAUC,KAAaE,KAAQ,EAAE,QAAQ,aAAa,EAAE,OAAO,IAAIE,KAAOC,MAAcD,IAAM,CAC3G,CAHSE,EAAAL,EAAA,eAKL,KAAK,KAAK,MACVA,EAAY,UAAW,gBAAiB,IAAI,EAGhDA,EAAY,WAAY,iBAAiB,EACzCA,EAAY,SAAU,gBAAgB,EACtCA,EAAY,UAAW,gBAAgB,EACvCA,EAAY,SAAU,eAAe,EACrCA,EAAY,YAAa,eAAe,CAC5C,CAAC,EAED,SAASN,EAAYY,EAASJ,EAAK,CAC/B,MAAO,GAAGH,cAAsBO,KAAWJ,GAC/C,CAFSG,EAAAX,EAAA,eAIT,SAASF,EAAgBS,EAAMM,EAAMC,EAAUC,EAAQ,CAAC,EAAG,CACvD,KAAK,SAAS,SAASV,EAAWE,EAAM,CACpC,KAAMP,EAAYO,EAAM,MAAM,EAC9B,KAAMP,EAAYO,EAAM,MAAM,EAC9B,MAAO,SACP,OAAQ,GACR,KAAAM,EACA,QAASC,EACT,GAAGC,CACP,CAAC,CACL,CAVSJ,EAAAb,EAAA,mBAYT,SAASC,GAAaiB,EAAS,CACvBA,GAAW,CAACtB,GACZA,EAAM,IAAIuB,EAEV,MAAM,GAAG,aAAcvB,EAAI,UAAU,EACrC,MAAM,GAAG,cAAeA,EAAI,WAAW,EACvC,MAAM,GAAG,YAAaA,EAAI,UAAU,GAC7B,CAACsB,GAAWtB,IACnB,MAAM,IAAI,aAAcA,EAAI,UAAU,EACtC,MAAM,IAAI,cAAeA,EAAI,WAAW,EACxC,MAAM,IAAI,YAAaA,EAAI,UAAU,EAErCA,EAAI,OAAO,EACXA,EAAM,KAEd,CAfSiB,EAAAZ,GAAA",
  "names": ["MODULE_ID", "getSetting", "setting", "__name", "localize", "args", "data", "useFormat", "keys", "templatePath", "template", "modifier", "mod", "getFlag", "doc", "flag", "setFlag", "value", "dcAdjustments", "dcByLevel", "MAGIC_TRADITIONS", "actionImgMap", "getActionIcon", "action", "fallback", "actionImgMap", "value", "sanitized", "__name", "toggleWeaponTrait", "weapon", "trait", "selection", "item", "r", "__name", "adjustDC", "dc", "adjustment", "dcAdjustments", "rarityToDCAdjustment", "rarity", "adjustDCByRarity", "calculateDC", "level", "proficiencyWithoutLevel", "pwlSetting", "dcByLevel", "getDcRarity", "getMagicTraditions", "traits", "t", "setHasElement", "MAGIC_TRADITIONS", "getIdentifyMagicDCs", "baseDC", "notMatchingTraditionModifier", "result", "traditions", "key", "getItemIdentificationDCs", "objectHasKey", "obj", "set", "value", "IdentifyItemPopup", "dcs", "$form", "event", "$button", "itemImg", "itemName", "identifiedName", "skills", "row", "slug", "name", "actionOption", "content", "_event", "formData", "status", "unownedItemToMessage", "actor", "rollMode", "create", "data", "template", "token", "nearestItem", "ChatMessagePF2e", "contextualData", "templateData", "chatData", "u", "popup", "title", "content", "hud", "MODULE_ID", "tmp", "templatePath", "localize", "__name", "getItemSummary", "el", "actor", "dataset", "item", "data", "description", "__name", "addNameTooltipListeners", "event", "target", "name", "editItem", "getItemFromEvent", "deleteItem", "localize", "itemId", "CROWBAR_UUIDS", "BON_MOT_UUID", "LABELS", "MODULE_ID", "ACTIONS_UUIDS", "DUPLICATE_SKILLS", "SKILLS", "actor", "item", "feat", "skill", "action", "slug", "actions", "unslugged", "_", "c", "variant", "modifiers", "modifier", "SKILLS_SLUGS", "SKILLS_MAP", "skills", "actionsUUIDS", "getSkillLabel", "__name", "getSkillsData", "noUntrained", "getSetting", "notCharacter", "i", "label", "rank", "mod", "getSkill", "lores", "addSkillsListeners", "el", "event", "target", "skillSlug", "createVariantDialog", "rollAction", "description", "getItemSummary", "popup", "uuid", "unownedItemToMessage", "base", "content", "localize", "selected", "html", "map", "type", "options", "condition", "SECTIONS_TYPES", "TOOLTIPS", "getActionsData", "actor", "isCharacter", "toggles", "sorting", "getSetting", "actions", "getCharacterActions", "getNpcActions", "heroActions", "heroActionsModule", "diff", "strikes", "strike", "index", "sections", "action", "type", "getActionIcon", "a", "b", "orderA", "orderB", "__name", "getActionsOptions", "addActionsListeners", "el", "addNameTooltipListeners", "callback", "x", "event", "getStrike", "getUuid", "getItemFromEvent", "description", "getItemSummary", "popup", "name", "getHeroActionDescription", "toggle", "domain", "option", "itemId", "suboption", "modular", "weapon", "target", "value", "baseType", "selection", "toggleWeaponTrait", "ammo", "uuid", "item", "actionsUUIDS", "feats", "traits", "actionCost", "actionType", "hasAura", "r", "getExtrasData", "actor", "attributes", "initiative", "SKILLS_SLUGS", "slug", "getSkillLabel", "__name", "addExtrasListeners", "el", "event", "target", "value", "action", "callback", "type", "dailies", "statistic", "createVariantDialog", "note", "ITEMS_TYPES", "getItemsData", "actor", "categories", "item", "type", "items", "b", "a", "__name", "addItemsListeners", "el", "addNameTooltipListeners", "event", "target", "itemType", "uuid", "img", "getItemFromEvent", "itemId", "IdentifyItemPopup", "editItem", "deleteItem", "tooltipster", "origin", "tmp", "content", "carryType", "handsHeld", "inSlot", "getSpellsData", "actor", "focusPool", "entries", "showTradition", "getSetting", "spells", "entry", "entryId", "tradition", "data", "isCharge", "isStaff", "charges", "slot", "slotSpells", "actives", "slotId", "spell", "expended", "virtual", "uses", "castLevel", "MODULE_ID", "sort", "a", "b", "rituals", "__name", "addSpellsListeners", "el", "addNameTooltipListeners", "event", "change", "points", "slotLevel", "itemId", "collection", "description", "getItemSummary", "popup", "inputPath", "value", "COVER_UUID", "RESOLVE_UUID", "POSITIONS", "ALIGNMENTS", "SPEEDS", "SIDEBARS", "getActionsData", "addActionsListeners", "getActionsOptions", "getItemsData", "addItemsListeners", "getSpellsData", "addSpellsListeners", "getSkillsData", "addSkillsListeners", "getExtrasData", "addExtrasListeners", "HUD", "#token", "#lastToken", "#delay", "#hover", "#closing", "#mouseevent", "#mousedown", "#lock", "#softLock", "token", "hover", "transform", "document", "MODULE_ID", "event", "button", "target", "el", "popup", "templatePath", "effect", "actor", "distance", "isOwner", "showDistance", "getSetting", "isCharacter", "attributes", "saves", "heroPoints", "system", "alignment", "traits", "hp", "sp", "resolve", "ac", "shield", "speed", "dying", "wounded", "resistances", "weaknesses", "immunities", "useStamina", "unitSplit", "multiplier", "unit", "decimals", "selected", "isTarget", "targets", "status", "statuses", "x", "max", "ratio", "pick", "toInfo", "str", "__name", "sort", "a", "b", "languages", "senses", "toIWR", "category", "header", "speeds", "type", "icon", "index", "s", "selectedSpeed", "getFlag", "mainSpeed", "otherSpeeds", "value", "label", "#close", "states", "cls", "options", "force", "sidebarType", "scrollTop", "sidebar", "#openSidebar", "delay", "html", "element", "scale", "hud", "targetCoords", "coords", "positions", "position", "postionFromTargetY", "postionFromTargetX", "attr", "change", "newValue", "source", "hasCover", "save", "condition", "useResolve", "infos", "tooltipster", "origin", "tooltip", "setFlag", "action", "getData", "addListeners", "getOptions", "data", "classList", "localize", "tmp", "rect", "left", "elPadding", "top", "margin", "y", "toChat", "content", "name", "fullStamina", "noResolve", "hasSteel", "item", "newSP", "hud", "statuses", "x", "localize", "registerSetting", "enableModule", "settingPath", "getSetting", "_", "html", "tab", "MODULE_ID", "beforeGroup", "name", "key", "dom", "localized", "__name", "setting", "type", "defValue", "extra", "enabled", "HUD"]
}
